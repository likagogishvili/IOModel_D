{"ast":null,"code":"/**\r\n * Rectangular pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Rectangular pattern\r\n */\n\nvar RectPattern =\n/** @class */\nfunction (_super) {\n  __extends(RectPattern, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function RectPattern() {\n    var _this = _super.call(this) || this;\n\n    _this.rectHeight = 1;\n    _this.rectWidth = 1;\n    _this._rect = _this.paper.add(\"rect\");\n\n    _this.addElement(_this._rect);\n\n    return _this;\n  }\n  /**\r\n   * Draws the rectangular element.\r\n   */\n\n\n  RectPattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    this.properties[\"rotationX\"] = this.width / 2;\n    this.properties[\"rotationY\"] = this.height / 2;\n\n    if (this._rect) {\n      this._rect.attr({\n        \"width\": this.rectWidth,\n        \"height\": this.rectHeight,\n        \"x\": (this.width - this.rectWidth) / 2,\n        \"y\": (this.height - this.rectHeight) / 2\n      });\n    }\n  };\n\n  Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectWidth\"];\n    },\n\n    /**\r\n     * Rectangle width in pixels.\r\n     *\r\n     * @param value Width (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectHeight\"];\n    },\n\n    /**\r\n     * Rectangle height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectHeight\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RectPattern;\n}(Pattern);\n\nexport { RectPattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,OAAT,QAA2C,WAA3C;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAiBC;AAGD;;;;;;;AAOA;;;;AAGA;AAAA;AAAA;EAAiCC;EAYhC;;;;;EAGA;IAAA,YACCC,qBAAO,IADR;;IAECC,KAAI,CAACC,UAAL,GAAkB,CAAlB;IACAD,KAAI,CAACE,SAAL,GAAiB,CAAjB;IACAF,KAAI,CAACG,KAAL,GAAaH,KAAI,CAACI,KAAL,CAAWC,GAAX,CAAe,MAAf,CAAb;;IACAL,KAAI,CAACM,UAAL,CAAgBN,KAAI,CAACG,KAArB;;;EACA;EAED;;;;;EAGUI,6BAAV;IACCR,iBAAMS,IAAN,CAAUC,IAAV,CAAU,IAAV;;IACA,KAAKC,UAAL,CAAgB,WAAhB,IAA+B,KAAKC,KAAL,GAAa,CAA5C;IACA,KAAKD,UAAL,CAAgB,WAAhB,IAA+B,KAAKE,MAAL,GAAc,CAA7C;;IACA,IAAI,KAAKT,KAAT,EAAgB;MACf,KAAKA,KAAL,CAAWU,IAAX,CAAgB;QAAE,SAAS,KAAKX,SAAhB;QAA2B,UAAU,KAAKD,UAA1C;QAAsD,KAAI,CAAC,KAAKU,KAAL,GAAa,KAAKT,SAAnB,IAAgC,CAA1F;QAA6F,KAAI,CAAC,KAAKU,MAAL,GAAc,KAAKX,UAApB,IAAkC;MAAnI,CAAhB;IACA;EACD,CAPS;;EAcVa,sBAAWP,qBAAX,EAAW,WAAX,EAAoB;IAKpB;;;SAGA;MACC,OAAO,KAAKG,UAAL,CAAgB,WAAhB,CAAP;IACA,CAVmB;;IALpB;;;;;SAKA,UAAqBK,KAArB,EAAkC;MACjC,KAAKL,UAAL,CAAgB,WAAhB,IAA+BK,KAA/B;MACA,KAAKP,IAAL;IACA,CAHmB;oBAAA;;EAAA,CAApB;EAiBAM,sBAAWP,qBAAX,EAAW,YAAX,EAAqB;IAKrB;;;SAGA;MACC,OAAO,KAAKG,UAAL,CAAgB,YAAhB,CAAP;IACA,CAVoB;;IALrB;;;;;SAKA,UAAsBK,KAAtB,EAAmC;MAClC,KAAKL,UAAL,CAAgB,YAAhB,IAAgCK,KAAhC;MACA,KAAKP,IAAL;IACA,CAHoB;oBAAA;;EAAA,CAArB;EAYD;AAAC,CArED,CAAiCZ,OAAjC;;;AAuEA;;;;;;;AAMAC,QAAQ,CAACmB,iBAAT,CAA2B,aAA3B,IAA4CT,WAA5C","names":["Pattern","registry","__extends","_super","_this","rectHeight","rectWidth","_rect","paper","add","addElement","RectPattern","draw","call","properties","width","height","attr","Object","value","registeredClasses"],"sourceRoot":"","sources":["../../../../../../src/.internal/core/rendering/fills/RectPattern.ts"],"sourcesContent":["/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for rectangular pattern\r\n */\r\nexport interface RectPatternProperties extends PatternProperties {\r\n\trectWidth: number;\r\n\trectHeight: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Rectangular pattern\r\n */\r\nexport class RectPattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<rect>` element used in pattern.\r\n\t */\r\n\tprotected _rect: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: RectPatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.rectHeight = 1;\r\n\t\tthis.rectWidth = 1;\r\n\t\tthis._rect = this.paper.add(\"rect\");\r\n\t\tthis.addElement(this._rect);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the rectangular element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tthis.properties[\"rotationX\"] = this.width / 2;\r\n\t\tthis.properties[\"rotationY\"] = this.height / 2;\t\t\r\n\t\tif (this._rect) {\r\n\t\t\tthis._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\":(this.width - this.rectWidth) / 2, \"y\":(this.height - this.rectHeight) / 2 });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle width in pixels.\r\n\t *\r\n\t * @param value Width (px)\r\n\t */\r\n\tpublic set rectWidth(value: number) {\r\n\t\tthis.properties[\"rectWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get rectWidth(): number {\r\n\t\treturn this.properties[\"rectWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle height in pixels.\r\n\t *\r\n\t * @param value Height (px)\r\n\t */\r\n\tpublic set rectHeight(value: number) {\r\n\t\tthis.properties[\"rectHeight\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get rectHeight(): number {\r\n\t\treturn this.properties[\"rectHeight\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n"]},"metadata":{},"sourceType":"module"}