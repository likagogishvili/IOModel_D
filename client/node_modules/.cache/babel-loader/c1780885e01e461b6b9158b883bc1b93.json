{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Series } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of all [[Container]] elements for legend items.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n\n\n    Object.defineProperty(_this, \"itemContainers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n          themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n          background: RoundedRectangle.new(_this._root, {\n            themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n            themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n          })\n        }, [_this.itemContainers.template]);\n      })\n    });\n    /**\r\n     * List of legend marker elements.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    /**\r\n     * List of legend label elements.\r\n     *\r\n     * @default new ListTemplate<Label>\r\n     */\n\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n        }, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * List of legend value label elements.\r\n     *\r\n     * @default new ListTemplate<label>\r\n     */\n\n    Object.defineProperty(_this, \"valueLabels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n        }, [_this.valueLabels.template]);\n      })\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n\n    Object.defineProperty(_this, \"markerRectangles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n        }, [_this.markerRectangles.template]);\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Legend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n      this.fields.push(\"name\", \"stroke\", \"fill\");\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeItemContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var itemContainer = this.children.push(this.itemContainers.make());\n\n      itemContainer._setDataItem(dataItem);\n\n      this.itemContainers.push(itemContainer);\n      itemContainer.states.create(\"disabled\", {});\n      return itemContainer;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var marker = this.markers.make();\n      this.markers.push(marker);\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var label = this.labels.make();\n      label.states.create(\"disabled\", {});\n      return label;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeValueLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var valueLabel = this.valueLabels.make();\n      valueLabel.states.create(\"disabled\", {});\n      return valueLabel;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeMarkerRectangle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var markerRectangle = this.markerRectangles.make();\n      markerRectangle.states.create(\"disabled\", {});\n      return markerRectangle;\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      _super.prototype.processDataItem.call(this, dataItem);\n\n      var itemContainer = this.makeItemContainer(dataItem);\n      var nameField = this.get(\"nameField\");\n      var fillField = this.get(\"fillField\");\n      var strokeField = this.get(\"strokeField\");\n\n      if (itemContainer) {\n        var clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n        var item_1 = dataItem.dataContext;\n\n        if (item_1 && item_1.set) {\n          item_1.set(\"legendDataItem\", dataItem);\n        }\n\n        itemContainer._setDataItem(dataItem);\n\n        dataItem.set(\"itemContainer\", itemContainer);\n        var marker = this.makeMarker();\n\n        if (marker) {\n          itemContainer.children.push(marker);\n\n          marker._setDataItem(dataItem);\n\n          dataItem.set(\"marker\", marker);\n          var useDefaultMarker = this.get(\"useDefaultMarker\");\n          var markerRectangle_1 = marker.children.push(this.makeMarkerRectangle());\n          var fill = dataItem.get(\"fill\");\n          var stroke = dataItem.get(\"stroke\");\n          dataItem.set(\"markerRectangle\", markerRectangle_1);\n\n          if (item_1 && item_1.get) {\n            fill = item_1.get(fillField, fill);\n            stroke = item_1.get(strokeField, stroke);\n          }\n\n          if (!stroke) {\n            stroke = fill;\n          }\n\n          if (!useDefaultMarker) {\n            if (item_1 && item_1.createLegendMarker) {\n              item_1.createLegendMarker();\n            }\n          } else {\n            if (item_1.on) {\n              item_1.on(fillField, function () {\n                markerRectangle_1.set(\"fill\", item_1.get(fillField));\n              });\n              item_1.on(strokeField, function () {\n                markerRectangle_1.set(\"stroke\", item_1.get(strokeField));\n              });\n            }\n          }\n\n          markerRectangle_1.setAll({\n            fill: fill,\n            stroke: stroke\n          }); // this solves if template field is set on slice\n\n          var component = item_1.component;\n\n          if (component && component.updateLegendMarker) {\n            component.updateLegendMarker(item_1);\n          }\n        }\n\n        var label_1 = this.makeLabel();\n\n        if (label_1) {\n          itemContainer.children.push(label_1);\n\n          label_1._setDataItem(dataItem);\n\n          dataItem.set(\"label\", label_1);\n          label_1.text.on(\"text\", function () {\n            itemContainer.set(\"ariaLabel\", label_1.text._getText() + \"; \" + _this._t(\"Press ENTER to toggle\"));\n          });\n\n          if (item_1 && item_1.get) {\n            dataItem.set(\"name\", item_1.get(nameField));\n          }\n\n          var name_1 = dataItem.get(\"name\");\n\n          if (name_1) {\n            label_1.set(\"text\", name_1);\n          }\n        }\n\n        var valueLabel = this.makeValueLabel();\n\n        if (valueLabel) {\n          itemContainer.children.push(valueLabel);\n\n          valueLabel._setDataItem(dataItem);\n\n          dataItem.set(\"valueLabel\", valueLabel);\n        }\n\n        if (item_1 && item_1.show) {\n          this._disposers.push(item_1.on(\"visible\", function (visible) {\n            itemContainer.set(\"disabled\", !visible);\n          }));\n\n          if (!item_1.get(\"visible\")) {\n            itemContainer.set(\"disabled\", true);\n          }\n\n          if (clickTarget != \"none\") {\n            var clickContainer = itemContainer;\n\n            if (clickTarget == \"marker\") {\n              clickContainer = marker;\n            }\n\n            this._addClickEvents(clickContainer, item_1, dataItem);\n          }\n        } // Sort children\n\n\n        this.children.values.sort(function (a, b) {\n          var targetA = a.dataItem.dataContext;\n          var targetB = b.dataItem.dataContext;\n\n          if (targetA && targetB) {\n            var indexA = _this.data.indexOf(targetA);\n\n            var indexB = _this.data.indexOf(targetB);\n\n            if (indexA > indexB) {\n              return 1;\n            } else if (indexA < indexB) {\n              return -1;\n            }\n          }\n\n          return 0;\n        });\n      }\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"_addClickEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (container, item, dataItem) {\n      var _this = this;\n\n      container.set(\"cursorOverStyle\", \"pointer\");\n      container.events.on(\"pointerover\", function () {\n        var component = item.component;\n\n        if (component && component.hoverDataItem) {\n          component.hoverDataItem(item);\n        }\n      });\n      container.events.on(\"pointerout\", function () {\n        var component = item.component;\n\n        if (component && component.hoverDataItem) {\n          component.unhoverDataItem(item);\n        }\n      });\n      container.events.on(\"click\", function () {\n        var labelText = dataItem.get(\"label\").text._getText();\n\n        if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n          item.show();\n          container.set(\"disabled\", false);\n\n          _this._root.readerAlert(_this._t(\"%1 shown\", _this._root.locale, labelText));\n        } else if (item.hide) {\n          item.hide();\n          container.set(\"disabled\", true);\n\n          _this._root.readerAlert(_this._t(\"%1 hidden\", _this._root.locale, labelText));\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var dataContext = dataItem.dataContext;\n\n      if (dataContext && dataContext.get) {\n        var di = dataContext.get(\"legendDataItem\");\n\n        if (di == dataItem) {\n          dataContext.set(\"legendDataItem\", undefined);\n        }\n      }\n\n      var itemContainer = dataItem.get(\"itemContainer\");\n\n      if (itemContainer) {\n        this.itemContainers.removeValue(itemContainer);\n        itemContainer.dispose();\n      }\n\n      var marker = dataItem.get(\"marker\");\n\n      if (marker) {\n        this.markers.removeValue(marker);\n        marker.dispose();\n      }\n\n      var markerRectangle = dataItem.get(\"markerRectangle\");\n\n      if (markerRectangle) {\n        this.markerRectangles.removeValue(markerRectangle);\n        markerRectangle.dispose();\n      }\n\n      var label = dataItem.get(\"label\");\n\n      if (label) {\n        this.labels.removeValue(label);\n        label.dispose();\n      }\n\n      var valueLabel = dataItem.get(\"valueLabel\");\n\n      if (valueLabel) {\n        this.valueLabels.removeValue(valueLabel);\n        valueLabel.dispose();\n      }\n    }\n  });\n  Object.defineProperty(Legend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Legend\"\n  });\n  Object.defineProperty(Legend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([Legend.className])\n  });\n  return Legend;\n}(Series);\n\nexport { Legend };","map":{"version":3,"mappings":"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","names":["Series","Container","Label","RoundedRectangle","Template","ListTemplate","$utils","__extends","Object","new","_new","_this","_root","themeTags","mergeTags","itemContainers","template","get","themeTagsSelf","background","markers","labels","valueLabels","markerRectangles","_settings","fields","push","_super","_afterNew","call","dataItem","itemContainer","children","make","_setDataItem","states","create","marker","label","valueLabel","markerRectangle","processDataItem","makeItemContainer","nameField","fillField","strokeField","clickTarget","item_1","dataContext","set","makeMarker","useDefaultMarker","markerRectangle_1","makeMarkerRectangle","fill","stroke","createLegendMarker","on","setAll","component","updateLegendMarker","label_1","makeLabel","text","_getText","_t","name_1","makeValueLabel","show","_disposers","visible","clickContainer","_addClickEvents","values","sort","a","b","targetA","targetB","indexA","data","indexOf","indexB","container","item","events","hoverDataItem","unhoverDataItem","labelText","isHidden","readerAlert","locale","hide","di","undefined","removeValue","dispose","classNames","concat","Legend","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Legend.ts"],"sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { Entity, IEntitySettings } from \"../../core/util/Entity\";\nimport type { Color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface ILegendDataItem extends ISeriesDataItem {\n\n\t/**\n\t * [[Container]] element holding all other legend item elements, labels,\n\t * markers, etc.\n\t */\n\titemContainer: Container;\n\n\t/**\n\t * Marker element.\n\t */\n\tmarker: Container;\n\n\t/**\n\t * Marker rectangle element.\n\t */\n\tmarkerRectangle: RoundedRectangle;\n\n\t/**\n\t * Label element.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Value label element.\n\t */\n\tvalueLabel: Label;\n\n\t/**\n\t * Marker fill color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Marker stroke (outline) color.\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Name of the legend item.\n\t */\n\tname?: string;\n\n}\n\nexport interface ILegendItemSettings extends IEntitySettings {\n\tvisible?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ILegendItem extends Entity {\n\t_settings: ILegendItemSettings;\n\tisHidden?: () => boolean;\n\tshow?: () => void;\n\thide?: () => void;\n\tcreateLegendMarker?: () => {}\n\tcomponent?: Series;\n\t// how to define that properties of dataItem should have legendDataItem?\n}\n\n//type ILegendDataItemSettings = { [K in keyof ILegendDataItem]?: string; };\n\nexport interface ILegendSettings extends ISeriesSettings {\n\n\t/**\n\t * If set to `true` the legend will not try to mimic appearance of the actual\n\t * item but rather show default square marker.\n\t *\n\t * @default false\n\t */\n\tuseDefaultMarker?: boolean;\n\n\t/**\n\t * A key to look up in data for a name of the data item.\n\t *\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A key to look up in data for a fill of the data item.\n\t *\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A key to look up in data for a stroke of the data item.\n\t *\n\t */\n\tstrokeField?: string;\n\n\t/**\n\t * Which legend item element will be clickable to toggle related chart item:\n\t * * `\"itemContainer\"` - the whole legend item (default).\n\t * * `\"marker\"` - legend item marker.\n\t * * `\"none\"` - disables toggling of legend item.\n\t *\n\t * @default \"itemContainer\"\n\t * @since 5.0.13\n\t */\n\tclickTarget?: \"itemContainer\" | \"marker\" | \"none\"\n\n}\n\nexport interface ILegendPrivate extends ISeriesPrivate {\n}\n\nexport interface ILegendEvents extends ISeriesEvents {\n\n}\n\n/**\n * A universal legend control.\n *\n * @important\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\n */\nexport class Legend extends Series {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n\t\tthis.fields.push(\"name\", \"stroke\", \"fill\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"Legend\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Legend.className]);\n\n\tdeclare public _settings: ILegendSettings;\n\tdeclare public _privateSettings: ILegendPrivate;\n\tdeclare public _dataItemSettings: ILegendDataItem;\n\tdeclare public _events: ILegendEvents;\n\n\n\t/**\n\t * List of all [[Container]] elements for legend items.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly itemContainers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n\t\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n\t\t\t})\n\t\t}, [this.itemContainers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeItemContainer(dataItem: DataItem<this[\"_dataItemSettings\"]>): Container {\n\t\tconst itemContainer = this.children.push(this.itemContainers.make());\n\t\titemContainer._setDataItem(dataItem);\n\t\tthis.itemContainers.push(itemContainer);\n\t\titemContainer.states.create(\"disabled\", {});\n\t\treturn itemContainer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): Container {\n\t\tconst marker = this.markers.make();\n\t\tthis.markers.push(marker);\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of legend marker elements.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly markers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel.states.create(\"disabled\", {});\n\t\treturn label;\n\t}\n\n\t/**\n\t * List of legend label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n\t\t}, [this.labels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeValueLabel(): Label {\n\t\tconst valueLabel = this.valueLabels.make();\n\t\tvalueLabel.states.create(\"disabled\", {});\n\t\treturn valueLabel;\n\t}\n\n\t/**\n\t * List of legend value label elements.\n\t *\n\t * @default new ListTemplate<label>\n\t */\n\tpublic readonly valueLabels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n\t\t}, [this.valueLabels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarkerRectangle(): RoundedRectangle {\n\t\tconst markerRectangle = this.markerRectangles.make();\n\t\tmarkerRectangle.states.create(\"disabled\", {});\n\t\treturn markerRectangle;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markerRectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n\t\t}, [this.markerRectangles.template])\n\t);\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst itemContainer = this.makeItemContainer(dataItem);\n\n\t\tconst nameField = this.get(\"nameField\");\n\t\tconst fillField = this.get(\"fillField\");\n\t\tconst strokeField = this.get(\"strokeField\");\n\n\t\tif (itemContainer) {\n\t\t\tconst clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n\n\t\t\tconst item = dataItem.dataContext as ILegendItem;\n\n\t\t\tif (item && item.set) {\n\t\t\t\titem.set(<any>\"legendDataItem\", dataItem);\n\t\t\t}\n\n\t\t\titemContainer._setDataItem(dataItem);\n\t\t\tdataItem.set(\"itemContainer\", itemContainer);\n\n\t\t\tconst marker = this.makeMarker();\n\t\t\tif (marker) {\n\t\t\t\titemContainer.children.push(marker);\n\t\t\t\tmarker._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"marker\", marker);\n\n\t\t\t\tconst useDefaultMarker = this.get(\"useDefaultMarker\");\n\n\t\t\t\tconst markerRectangle = marker.children.push(this.makeMarkerRectangle());\n\n\t\t\t\tlet fill = dataItem.get(\"fill\");\n\t\t\t\tlet stroke = dataItem.get(\"stroke\");\n\n\t\t\t\tdataItem.set(\"markerRectangle\", markerRectangle);\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tfill = item.get(fillField as any, fill);\n\t\t\t\t\tstroke = item.get(strokeField as any, stroke);\n\t\t\t\t}\n\n\t\t\t\tif (!stroke) {\n\t\t\t\t\tstroke = fill;\n\t\t\t\t}\n\n\t\t\t\tif (!useDefaultMarker) {\n\t\t\t\t\tif (item && item.createLegendMarker) {\n\t\t\t\t\t\titem.createLegendMarker();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (item.on) {\n\t\t\t\t\t\titem.on(fillField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", item.get(fillField as any));\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\titem.on(strokeField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", item.get(strokeField as any));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkerRectangle.setAll({ fill, stroke });\n\n\t\t\t\t// this solves if template field is set on slice\n\t\t\t\tconst component = item.component;\n\t\t\t\tif (component && component.updateLegendMarker) {\n\t\t\t\t\tcomponent.updateLegendMarker(item as any);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst label = this.makeLabel();\n\n\t\t\tif (label) {\n\t\t\t\titemContainer.children.push(label);\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"label\", label);\n\n\t\t\t\tlabel.text.on(\"text\", () => {\n\t\t\t\t\titemContainer.set(\"ariaLabel\", label.text._getText() + \"; \" + this._t(\"Press ENTER to toggle\"));\n\t\t\t\t});\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tdataItem.set(\"name\", item.get(nameField as any) as string);\n\t\t\t\t}\n\n\t\t\t\tlet name = dataItem.get(\"name\");\n\n\t\t\t\tif (name) {\n\t\t\t\t\tlabel.set(\"text\", name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst valueLabel = this.makeValueLabel();\n\t\t\tif (valueLabel) {\n\t\t\t\titemContainer.children.push(valueLabel);\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"valueLabel\", valueLabel);\n\t\t\t}\n\n\t\t\tif (item && item.show) {\n\n\t\t\t\tthis._disposers.push(item.on(\"visible\", (visible) => {\n\t\t\t\t\titemContainer.set(\"disabled\", !visible)\n\t\t\t\t}));\n\n\t\t\t\tif (!item.get(\"visible\")) {\n\t\t\t\t\titemContainer.set(\"disabled\", true);\n\t\t\t\t}\n\n\t\t\t\tif (clickTarget != \"none\") {\n\t\t\t\t\tvar clickContainer = itemContainer;\n\t\t\t\t\tif (clickTarget == \"marker\") {\n\t\t\t\t\t\tclickContainer = marker;\n\t\t\t\t\t}\n\t\t\t\t\tthis._addClickEvents(clickContainer, item, dataItem)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort children\n\t\t\tthis.children.values.sort((a, b) => {\n\t\t\t\tvar targetA = a.dataItem!.dataContext;\n\t\t\t\tvar targetB = b.dataItem!.dataContext;\n\t\t\t\tif (targetA && targetB) {\n\t\t\t\t\tvar indexA = this.data.indexOf(targetA);\n\t\t\t\t\tvar indexB = this.data.indexOf(targetB);\n\t\t\t\t\tif (indexA > indexB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (indexA < indexB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\n\t}\n\n\n\tprotected _addClickEvents(container: Container, item: ILegendItem, dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tcontainer.set(\"cursorOverStyle\", \"pointer\");\n\t\tcontainer.events.on(\"pointerover\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.hoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"pointerout\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.unhoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"click\", () => {\n\t\t\tconst labelText = dataItem.get(\"label\").text._getText();\n\n\t\t\tif (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n\t\t\t\titem.show();\n\t\t\t\tcontainer.set(\"disabled\", false);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n\t\t\t}\n\t\t\telse if (item.hide) {\n\t\t\t\titem.hide();\n\t\t\t\tcontainer.set(\"disabled\", true);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tif (dataContext && dataContext.get) {\n\t\t\tconst di = dataContext.get(\"legendDataItem\");\n\t\t\tif (di == dataItem) {\n\t\t\t\tdataContext.set(\"legendDataItem\", undefined);\n\t\t\t}\n\t\t}\n\n\n\t\tlet itemContainer = dataItem.get(\"itemContainer\");\n\t\tif (itemContainer) {\n\t\t\tthis.itemContainers.removeValue(itemContainer);\n\t\t\titemContainer.dispose();\n\t\t}\n\n\t\tlet marker = dataItem.get(\"marker\");\n\t\tif (marker) {\n\t\t\tthis.markers.removeValue(marker);\n\t\t\tmarker.dispose();\n\t\t}\n\n\t\tlet markerRectangle = dataItem.get(\"markerRectangle\");\n\t\tif (markerRectangle) {\n\t\t\tthis.markerRectangles.removeValue(markerRectangle);\n\t\t\tmarkerRectangle.dispose();\n\t\t}\n\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tlet valueLabel = dataItem.get(\"valueLabel\");\n\t\tif (valueLabel) {\n\t\t\tthis.valueLabels.removeValue(valueLabel);\n\t\t\tvalueLabel.dispose();\n\t\t}\n\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}