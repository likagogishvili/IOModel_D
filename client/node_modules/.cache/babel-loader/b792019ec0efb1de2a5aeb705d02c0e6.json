{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { XYSeries } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n/**\r\n * Base class for all \"column-based\" series\r\n */\n\nvar BaseColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(BaseColumnSeries, _super);\n\n  function BaseColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_ph\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_pw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (listTemplate, dataItem) {\n      return this.makeColumn(dataItem, listTemplate);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeFieldNames\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._makeFieldNames.call(this);\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var categoryAxis = \"CategoryAxis\";\n      var valueAxis = \"ValueAxis\";\n\n      if (xAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n\n      if (xAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n\n      if (yAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n\n      if (yAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var len = this.dataItems.length;\n      var startIndex = Math.max(0, this.startIndex() - 2);\n      var endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n      if (xAxis.inited && yAxis.inited) {\n        for (var i = startIndex; i <= endIndex; i++) {\n          var dataItem = this.dataItems[i];\n\n          this._createGraphics(dataItem);\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var chart = this.chart;\n\n      if (chart) {\n        this._ph = chart.plotContainer.height();\n        this._pw = chart.plotContainer.width();\n      }\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var columnsTemplate = this.columns.template;\n\n      if (this.isDirty(\"fill\")) {\n        if (columnsTemplate.get(\"fill\") == null) {\n          columnsTemplate.set(\"fill\", this.get(\"fill\"));\n        }\n      }\n\n      if (this.isDirty(\"stroke\")) {\n        if (columnsTemplate.get(\"stroke\") == null) {\n          columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n        }\n      }\n\n      var index = 0;\n      var clusterCount = 0;\n      var i = 0;\n      $array.each(baseAxis.series, function (series) {\n        if (series instanceof BaseColumnSeries) {\n          var stacked = series.get(\"stacked\");\n\n          if (stacked && i == 0) {\n            clusterCount++;\n          }\n\n          if (!stacked && series.get(\"clustered\")) {\n            clusterCount++;\n          }\n        }\n\n        if (series === _this) {\n          index = clusterCount - 1;\n        }\n\n        i++;\n      });\n\n      if (!this.get(\"clustered\")) {\n        index = 0;\n        clusterCount = 1;\n      }\n\n      if (clusterCount === 0) {\n        clusterCount = 1;\n        index = 0;\n      }\n\n      var xRenderer = xAxis.get(\"renderer\");\n      var yRenderer = yAxis.get(\"renderer\");\n      var cellStartLocation = \"cellStartLocation\";\n      var cellEndLocation = \"cellEndLocation\";\n      var cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n      var cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n      var cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n      var cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n      this._aLocationX0 = cellLocationX0 + index / clusterCount * (cellLocationX1 - cellLocationX0);\n      this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\n      ;\n      this._aLocationY0 = cellLocationY0 + index / clusterCount * (cellLocationY1 - cellLocationY0);\n      this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n      if (xAxis.inited && yAxis.inited) {\n        if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n          var len = this.dataItems.length;\n          var startIndex = Math.max(0, this.startIndex() - 2);\n          var endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n          for (var i_1 = 0; i_1 < startIndex; i_1++) {\n            this._toggleColumn(this.dataItems[i_1], false);\n          }\n\n          var previous = this.dataItems[startIndex];\n\n          for (var i_2 = startIndex; i_2 <= endIndex; i_2++) {\n            var dataItem = this.dataItems[i_2];\n\n            if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n              previous = dataItem;\n\n              if (i_2 > 0 && startIndex > 0) {\n                for (var j = i_2 - 1; j >= 0; j--) {\n                  var dataItem_1 = this.dataItems[j];\n\n                  if (dataItem_1.get(\"valueX\") != null && dataItem_1.get(\"valueY\") != null) {\n                    previous = dataItem_1;\n                    break;\n                  }\n                }\n              }\n\n              break;\n            }\n          }\n\n          for (var i_3 = startIndex; i_3 <= endIndex; i_3++) {\n            var dataItem = this.dataItems[i_3];\n\n            this._updateGraphics(dataItem, previous);\n\n            if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n              previous = dataItem;\n            }\n          }\n\n          for (var i_4 = endIndex + 1; i_4 < len; i_4++) {\n            this._toggleColumn(this.dataItems[i_4], false);\n          }\n        }\n      } else {\n        this._skipped = true;\n      }\n\n      this.updateLegendMarker();\n\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_createGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      var graphics = dataItem.get(\"graphics\");\n\n      if (!graphics) {\n        graphics = this._makeGraphics(this.columns, dataItem);\n        dataItem.set(\"graphics\", graphics);\n\n        graphics._setDataItem(dataItem);\n\n        var legendDataItem = dataItem.get(\"legendDataItem\");\n\n        if (legendDataItem) {\n          var markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n          if (markerRectangle) {\n            markerRectangle.setAll({\n              fill: graphics.get(\"fill\"),\n              stroke: graphics.get(\"stroke\")\n            });\n          }\n        }\n\n        this.axisRanges.each(function (axisRange) {\n          var container = axisRange.container;\n          var graphicsArray = dataItem.get(\"rangeGraphics\", []);\n          dataItem.set(\"rangeGraphics\", graphicsArray);\n\n          var rangeGraphics = _this._makeGraphics(axisRange.columns, dataItem);\n\n          graphicsArray.push(rangeGraphics);\n          rangeGraphics.setPrivate(\"list\", axisRange.columns);\n          container.children.push(rangeGraphics);\n        });\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var _this = this;\n\n      var graphics = dataItem.get(\"graphics\"); //if (!graphics) {\n      //\tthis._createGraphics(dataItem);\n      //\tgraphics = dataItem.get(\"graphics\")!;\n      //}\n\n      var xField = this._xField;\n      var yField = this._yField;\n      var valueX = dataItem.get(xField);\n      var valueY = dataItem.get(yField);\n\n      if (valueX != null && valueY != null) {\n        var xOpenField = this._xOpenField;\n        var yOpenField = this._yOpenField;\n        var locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n        var locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n        var openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n        var openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n        var width = graphics.get(\"width\");\n        var height = graphics.get(\"height\");\n        var stacked = this.get(\"stacked\");\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var xStart = xAxis.get(\"start\");\n        var xEnd = xAxis.get(\"end\");\n        var yStart = yAxis.get(\"start\");\n        var yEnd = yAxis.get(\"end\");\n        var l_1;\n        var r_1;\n        var t_1;\n        var b_1;\n        var vcy = this.get(\"vcy\", 1);\n        var vcx = this.get(\"vcx\", 1);\n        var fitW_1 = false;\n        var fitH_1 = false;\n\n        if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          startLocation = this._aLocationY0 + openLocationY - 0.5;\n          endLocation = this._aLocationY1 + locationY - 0.5;\n\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        } else if (xAxis === baseAxis) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          t_1 = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n          if (this._yOpenField !== this._yField) {\n            b_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n          } else {\n            if (stacked) {\n              var stackToItemY = dataItem.get(\"stackToItemY\");\n\n              if (stackToItemY) {\n                b_1 = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\n              } else {\n                b_1 = yAxis.basePosition();\n              }\n            } else {\n              b_1 = yAxis.basePosition();\n            }\n          }\n\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1\n          });\n          fitH_1 = true;\n        } else if (yAxis === baseAxis) {\n          var startLocation = this._aLocationY0 + openLocationY - 0.5;\n          var endLocation = this._aLocationY1 + locationY - 0.5;\n\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n          if (this._xOpenField !== this._xField) {\n            l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n          } else {\n            if (stacked) {\n              var stackToItemX = dataItem.get(\"stackToItemX\");\n\n              if (stackToItemX) {\n                l_1 = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\n              } else {\n                l_1 = xAxis.basePosition();\n              }\n            } else {\n              l_1 = xAxis.basePosition();\n            }\n          }\n\n          fitW_1 = true;\n          dataItem.setRaw(\"point\", {\n            x: r_1,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        }\n\n        this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n\n        if (l_1 < xStart && r_1 < xStart || l_1 > xEnd && r_1 > xEnd || t_1 < yStart && b_1 < yStart || t_1 > yEnd && b_1 > yEnd) {\n          this._toggleColumn(dataItem, false);\n        } else {\n          this._toggleColumn(dataItem, true);\n        }\n\n        var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n        if (rangeGraphics) {\n          $array.each(rangeGraphics, function (graphics) {\n            _this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n          });\n        }\n\n        this._applyGraphicsStates(dataItem, previousDataItem);\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateSeriesGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, graphics, l, r, t, b, fitW, fitH) {\n      var width = graphics.get(\"width\");\n      var height = graphics.get(\"height\");\n      var maxWidth = graphics.get(\"maxWidth\");\n      var maxHeight = graphics.get(\"maxHeight\");\n      var ptl = this.getPoint(l, t);\n      var pbr = this.getPoint(r, b);\n      var tooltipPoint = dataItem.get(\"point\");\n\n      if (tooltipPoint) {\n        var point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n        tooltipPoint.x = point.x + this._x;\n        tooltipPoint.y = point.y + this._y;\n      }\n\n      l = ptl.x;\n      r = pbr.x;\n      t = ptl.y;\n      b = pbr.y;\n\n      if ($type.isNumber(width)) {\n        var offset = (r - l - width) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      if ($type.isNumber(height)) {\n        var offset = (b - t - height) / 2;\n        t += offset;\n        b -= offset;\n      }\n\n      if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        t += offset;\n        b -= offset;\n      }\n\n      if (this.get(\"adjustBulletPosition\")) {\n        if (fitW) {\n          r = Math.min(Math.max(0, r), this._pw);\n          l = Math.min(Math.max(0, l), this._pw);\n        }\n\n        if (fitH) {\n          t = Math.min(Math.max(0, t), this._ph);\n          b = Math.min(Math.max(0, b), this._ph);\n        }\n      }\n\n      dataItem.setRaw(\"left\", l);\n      dataItem.setRaw(\"right\", r);\n      dataItem.setRaw(\"top\", t);\n      dataItem.setRaw(\"bottom\", b);\n      graphics.setPrivate(\"width\", r - l);\n      graphics.setPrivate(\"height\", b - t);\n      graphics.set(\"x\", l);\n      graphics.set(\"y\", b - (b - t));\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_handleDataSetChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._handleDataSetChange.call(this);\n\n      $array.each(this._dataItems, function (dataItem) {\n        _this._toggleColumn(dataItem, false);\n      });\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_applyGraphicsStates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var graphics = dataItem.get(\"graphics\");\n      var dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n      var riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n      var dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n      var riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n      if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var open_1;\n        var close_1;\n        var previousClose = void 0;\n\n        if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._yOpenField);\n          close_1 = dataItem.get(this._yField);\n          previousClose = previousDataItem.get(this._yField);\n        } else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._xOpenField);\n          close_1 = dataItem.get(this._xField);\n          previousClose = previousDataItem.get(this._xField);\n        }\n\n        if ($type.isNumber(open_1) && $type.isNumber(close_1)) {\n          if (close_1 < open_1) {\n            if (dropFromOpen) {\n              dropFromOpen.apply();\n            }\n          } else {\n            if (riseFromOpen) {\n              riseFromOpen.apply();\n            }\n          }\n\n          if ($type.isNumber(previousClose)) {\n            if (close_1 < previousClose) {\n              if (dropFromPrevious) {\n                dropFromPrevious.apply();\n              }\n            } else {\n              if (riseFromPrevious) {\n                riseFromPrevious.apply();\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var graphics = dataItem.get(\"graphics\");\n\n      if (graphics) {\n        this.columns.removeValue(graphics);\n        graphics.dispose();\n      }\n\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          var list = graphics.getPrivate(\"list\");\n\n          if (list) {\n            list.removeValue(graphics);\n          }\n\n          graphics.dispose();\n        });\n      }\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n\n              if (graphics) {\n                promises.push(graphics.hide(duration));\n              }\n\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.hide(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_toggleColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, visible) {\n      var graphics = dataItem.get(\"graphics\");\n\n      if (graphics) {\n        graphics.setPrivate(\"visible\", visible);\n      }\n\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          graphics.setPrivate(\"visible\", visible);\n        });\n      }\n\n      var bullets = dataItem.bullets;\n\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.setPrivate(\"hidden\", !visible);\n        });\n      }\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n\n              if (graphics) {\n                promises.push(graphics.show(duration));\n              }\n\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.show(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      var legendDataItem = this.get(\"legendDataItem\");\n\n      if (this.get(\"useLastColorForLegendMarker\")) {\n        if (!dataItem) {\n          var lastDataItem = this.dataItems[this.endIndex() - 1];\n\n          if (lastDataItem) {\n            dataItem = lastDataItem;\n          }\n        }\n      }\n\n      if (legendDataItem) {\n        var graphics_1 = this.columns.template;\n\n        if (dataItem) {\n          var column = dataItem.get(\"graphics\");\n\n          if (column) {\n            graphics_1 = column;\n          }\n        }\n\n        var markerRectangle_1 = legendDataItem.get(\"markerRectangle\");\n\n        if (markerRectangle_1) {\n          if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n            $array.each(visualSettings, function (setting) {\n              markerRectangle_1.set(setting, graphics_1.get(setting, _this.get(setting)));\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_getTooltipTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n        return _super.prototype._getTooltipTarget.call(this, dataItem);\n      }\n\n      var column = dataItem.get(\"graphics\");\n\n      if (column) {\n        return column;\n      }\n\n      return this;\n    }\n  });\n  Object.defineProperty(BaseColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"BaseColumnSeries\"\n  });\n  Object.defineProperty(BaseColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\n  });\n  return BaseColumnSeries;\n}(XYSeries);\n\nexport { BaseColumnSeries };","map":{"version":3,"mappings":";AAUA,SAASA,QAAT,QAAqG,YAArG;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,yBAAvB;AAmEA;;;;AAGA;AAAA;AAAA;EAA+CC;;EAA/C;IAAA;;IAwBCC;sBAAA;wBAAA;oBAAA;aAAwB;IAAxB;IACAA;sBAAA;wBAAA;oBAAA;aAAwB;IAAxB;;EA+oBA;;;;;;WAppBA,UAAwBC,YAAxB,EAA8DC,QAA9D,EAA2G;MAC1G,OAAO,KAAKC,UAAL,CAAgBD,QAAhB,EAA0BD,YAA1B,CAAP;IACA;;;;;;WAKD;MACCG,iBAAMC,eAAN,CAAqBC,IAArB,CAAqB,IAArB;;MAEA,IAAMC,KAAK,GAAG,KAAKC,GAAL,CAAS,OAAT,CAAd;MACA,IAAMC,KAAK,GAAG,KAAKD,GAAL,CAAS,OAAT,CAAd;MAEA,IAAME,YAAY,GAAG,cAArB;MACA,IAAMC,SAAS,GAAG,WAAlB;;MAEA,IAAIJ,KAAK,CAACK,MAAN,CAAgCF,YAAhC,CAAJ,EAAmD;QAClD,IAAI,CAAC,KAAKF,GAAL,CAAS,oBAAT,CAAL,EAAqC;UACpC,KAAKK,WAAL,GAAmB,KAAKC,OAAxB;QACA;MACD;;MAED,IAAIP,KAAK,CAACK,MAAN,CAA4BD,SAA5B,CAAJ,EAA4C;QAC3C,IAAI,CAAC,KAAKH,GAAL,CAAS,iBAAT,CAAL,EAAkC;UACjC,KAAKK,WAAL,GAAmB,KAAKC,OAAxB;QACA;MACD;;MAED,IAAIL,KAAK,CAACG,MAAN,CAAgCF,YAAhC,CAAJ,EAAmD;QAClD,IAAI,CAAC,KAAKF,GAAL,CAAS,oBAAT,CAAL,EAAqC;UACpC,KAAKO,WAAL,GAAmB,KAAKC,OAAxB;QACA;MACD;;MAED,IAAIP,KAAK,CAACG,MAAN,CAA4BD,SAA5B,CAAJ,EAA4C;QAC3C,IAAI,CAAC,KAAKH,GAAL,CAAS,iBAAT,CAAL,EAAkC;UACjC,KAAKO,WAAL,GAAmB,KAAKC,OAAxB;QACA;MACD;IACD;;;;;;WAGD;MACCZ,iBAAMa,gBAAN,CAAsBX,IAAtB,CAAsB,IAAtB;;MAEA,IAAMC,KAAK,GAAG,KAAKC,GAAL,CAAS,OAAT,CAAd;MACA,IAAMC,KAAK,GAAG,KAAKD,GAAL,CAAS,OAAT,CAAd;MAEA,IAAMU,GAAG,GAAG,KAAKC,SAAL,CAAeC,MAA3B;MACA,IAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKF,UAAL,KAAoB,CAAhC,CAAnB;MACA,IAAMG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAL,KAAkB,CAA3B,EAA8BN,GAAG,GAAG,CAApC,CAAjB;;MAEA,IAAIX,KAAK,CAACmB,MAAN,IAAgBjB,KAAK,CAACiB,MAA1B,EAAkC;QACjC,KAAK,IAAIC,CAAC,GAAGN,UAAb,EAAyBM,CAAC,IAAIH,QAA9B,EAAwCG,CAAC,EAAzC,EAA6C;UAC5C,IAAIzB,QAAQ,GAAG,KAAKiB,SAAL,CAAeQ,CAAf,CAAf;;UACA,KAAKC,eAAL,CAAqB1B,QAArB;QACA;MACD;IACD;;;;;;WAED;MAAA;;MACC,IAAM2B,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QACV,KAAKC,GAAL,GAAWD,KAAK,CAACE,aAAN,CAAoBC,MAApB,EAAX;QACA,KAAKC,GAAL,GAAWJ,KAAK,CAACE,aAAN,CAAoBG,KAApB,EAAX;MACA;;MAED,IAAM3B,KAAK,GAAG,KAAKC,GAAL,CAAS,OAAT,CAAd;MACA,IAAMC,KAAK,GAAG,KAAKD,GAAL,CAAS,OAAT,CAAd;MACA,IAAM2B,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MAEA,IAAM4B,eAAe,GAAG,KAAKC,OAAL,CAAaC,QAArC;;MACA,IAAI,KAAKC,OAAL,CAAa,MAAb,CAAJ,EAA0B;QACzB,IAAIH,eAAe,CAAC5B,GAAhB,CAAoB,MAApB,KAA+B,IAAnC,EAAyC;UACxC4B,eAAe,CAACI,GAAhB,CAAoB,MAApB,EAA4B,KAAKhC,GAAL,CAAS,MAAT,CAA5B;QACA;MACD;;MAED,IAAI,KAAK+B,OAAL,CAAa,QAAb,CAAJ,EAA4B;QAC3B,IAAIH,eAAe,CAAC5B,GAAhB,CAAoB,QAApB,KAAiC,IAArC,EAA2C;UAC1C4B,eAAe,CAACI,GAAhB,CAAoB,QAApB,EAA8B,KAAKhC,GAAL,CAAS,QAAT,CAA9B;QACA;MACD;;MAED,IAAIiC,KAAK,GAAG,CAAZ;MACA,IAAIC,YAAY,GAAG,CAAnB;MACA,IAAIf,CAAC,GAAG,CAAR;MAEA9B,MAAM,CAAC8C,IAAP,CAAYR,QAAQ,CAACS,MAArB,EAA6B,UAACA,MAAD,EAAO;QACnC,IAAIA,MAAM,YAAYC,gBAAtB,EAAwC;UACvC,IAAMC,OAAO,GAAGF,MAAM,CAACpC,GAAP,CAAW,SAAX,CAAhB;;UAEA,IAAIsC,OAAO,IAAInB,CAAC,IAAI,CAApB,EAAuB;YACtBe,YAAY;UACZ;;UAED,IAAI,CAACI,OAAD,IAAYF,MAAM,CAACpC,GAAP,CAAW,WAAX,CAAhB,EAAyC;YACxCkC,YAAY;UACZ;QACD;;QAED,IAAIE,MAAM,KAAKG,KAAf,EAAqB;UACpBN,KAAK,GAAGC,YAAY,GAAG,CAAvB;QACA;;QACDf,CAAC;MACD,CAjBD;;MAmBA,IAAI,CAAC,KAAKnB,GAAL,CAAS,WAAT,CAAL,EAA4B;QAC3BiC,KAAK,GAAG,CAAR;QACAC,YAAY,GAAG,CAAf;MACA;;MAED,IAAIA,YAAY,KAAK,CAArB,EAAwB;QACvBA,YAAY,GAAG,CAAf;QACAD,KAAK,GAAG,CAAR;MACA;;MAED,IAAMO,SAAS,GAAGzC,KAAK,CAACC,GAAN,CAAU,UAAV,CAAlB;MACA,IAAMyC,SAAS,GAAGxC,KAAK,CAACD,GAAN,CAAU,UAAV,CAAlB;MAEA,IAAM0C,iBAAiB,GAAG,mBAA1B;MACA,IAAMC,eAAe,GAAG,iBAAxB;MAEA,IAAMC,cAAc,GAAGJ,SAAS,CAACxC,GAAV,CAAc0C,iBAAd,EAAiC,CAAjC,CAAvB;MACA,IAAMG,cAAc,GAAGL,SAAS,CAACxC,GAAV,CAAc2C,eAAd,EAA+B,CAA/B,CAAvB;MAEA,IAAMG,cAAc,GAAGL,SAAS,CAACzC,GAAV,CAAc0C,iBAAd,EAAiC,CAAjC,CAAvB;MACA,IAAMK,cAAc,GAAGN,SAAS,CAACzC,GAAV,CAAc2C,eAAd,EAA+B,CAA/B,CAAvB;MAEA,KAAKK,YAAL,GAAoBJ,cAAc,GAAIX,KAAK,GAAGC,YAAT,IAA0BW,cAAc,GAAGD,cAA3C,CAArC;MACA,KAAKK,YAAL,GAAoBL,cAAc,GAAG,CAACX,KAAK,GAAG,CAAT,IAAcC,YAAd,IAA8BW,cAAc,GAAGD,cAA/C,CAArC;MAAoG;MAEpG,KAAKM,YAAL,GAAoBJ,cAAc,GAAIb,KAAK,GAAGC,YAAT,IAA0Ba,cAAc,GAAGD,cAA3C,CAArC;MACA,KAAKK,YAAL,GAAoBL,cAAc,GAAG,CAACb,KAAK,GAAG,CAAT,IAAcC,YAAd,IAA8Ba,cAAc,GAAGD,cAA/C,CAArC;;MAEA,IAAI/C,KAAK,CAACmB,MAAN,IAAgBjB,KAAK,CAACiB,MAA1B,EAAkC;QACjC,IAAI,KAAKkC,UAAL,IAAmB,KAAKC,YAAxB,IAAwC,KAAKC,WAA7C,IAA4D,KAAKvB,OAAL,CAAa,KAAb,CAA5D,IAAmF,KAAKA,OAAL,CAAa,KAAb,CAAnF,IAA0G,KAAKwB,UAAnH,EAA+H;UAC9H,IAAM7C,GAAG,GAAG,KAAKC,SAAL,CAAeC,MAA3B;UAEA,IAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKF,UAAL,KAAoB,CAAhC,CAAjB;UACA,IAAIG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAL,KAAkB,CAA3B,EAA8BN,GAAG,GAAG,CAApC,CAAf;;UAEA,KAAK,IAAI8C,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG3C,UAApB,EAAgC2C,GAAC,EAAjC,EAAqC;YACpC,KAAKC,aAAL,CAAmB,KAAK9C,SAAL,CAAe6C,GAAf,CAAnB,EAAsC,KAAtC;UACA;;UACD,IAAIE,QAAQ,GAAG,KAAK/C,SAAL,CAAeE,UAAf,CAAf;;UAEA,KAAK,IAAI8C,GAAC,GAAG9C,UAAb,EAAyB8C,GAAC,IAAI3C,QAA9B,EAAwC2C,GAAC,EAAzC,EAA6C;YAC5C,IAAIjE,QAAQ,GAAG,KAAKiB,SAAL,CAAegD,GAAf,CAAf;;YACA,IAAIjE,QAAQ,CAACM,GAAT,CAAa,QAAb,KAA0B,IAA1B,IAAkCN,QAAQ,CAACM,GAAT,CAAa,QAAb,KAA0B,IAAhE,EAAsE;cACrE0D,QAAQ,GAAGhE,QAAX;;cACA,IAAIiE,GAAC,GAAG,CAAJ,IAAS9C,UAAU,GAAG,CAA1B,EAA6B;gBAC5B,KAAK,IAAI+C,CAAC,GAAGD,GAAC,GAAG,CAAjB,EAAoBC,CAAC,IAAI,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;kBAChC,IAAIC,UAAQ,GAAG,KAAKlD,SAAL,CAAeiD,CAAf,CAAf;;kBACA,IAAIC,UAAQ,CAAC7D,GAAT,CAAa,QAAb,KAA0B,IAA1B,IAAkC6D,UAAQ,CAAC7D,GAAT,CAAa,QAAb,KAA0B,IAAhE,EAAsE;oBACrE0D,QAAQ,GAAGG,UAAX;oBACA;kBACA;gBACD;cACD;;cACD;YACA;UACD;;UAED,KAAK,IAAIC,GAAC,GAAGjD,UAAb,EAAyBiD,GAAC,IAAI9C,QAA9B,EAAwC8C,GAAC,EAAzC,EAA6C;YAC5C,IAAIpE,QAAQ,GAAG,KAAKiB,SAAL,CAAemD,GAAf,CAAf;;YACA,KAAKC,eAAL,CAAqBrE,QAArB,EAA+BgE,QAA/B;;YACA,IAAIhE,QAAQ,CAACM,GAAT,CAAa,QAAb,KAA0B,IAA1B,IAAkCN,QAAQ,CAACM,GAAT,CAAa,QAAb,KAA0B,IAAhE,EAAsE;cACrE0D,QAAQ,GAAGhE,QAAX;YACA;UACD;;UAED,KAAK,IAAIsE,GAAC,GAAGhD,QAAQ,GAAG,CAAxB,EAA2BgD,GAAC,GAAGtD,GAA/B,EAAoCsD,GAAC,EAArC,EAAyC;YACxC,KAAKP,aAAL,CAAmB,KAAK9C,SAAL,CAAeqD,GAAf,CAAnB,EAAsC,KAAtC;UACA;QACD;MACD,CAzCD,MA0CK;QACJ,KAAKC,QAAL,GAAgB,IAAhB;MACA;;MACD,KAAKC,kBAAL;;MACAtE,iBAAMuE,eAAN,CAAqBrE,IAArB,CAAqB,IAArB;IACA;;;;;;WAED,UAA0BJ,QAA1B,EAAuE;MAAvE;;MACC,IAAI0E,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAf;;MACA,IAAI,CAACoE,QAAL,EAAe;QACdA,QAAQ,GAAG,KAAKC,aAAL,CAAmB,KAAKxC,OAAxB,EAAiCnC,QAAjC,CAAX;QACAA,QAAQ,CAACsC,GAAT,CAAa,UAAb,EAAyBoC,QAAzB;;QACAA,QAAQ,CAACE,YAAT,CAAsB5E,QAAtB;;QAEA,IAAM6E,cAAc,GAAG7E,QAAQ,CAACM,GAAT,CAAa,gBAAb,CAAvB;;QACA,IAAIuE,cAAJ,EAAoB;UACnB,IAAMC,eAAe,GAAGD,cAAc,CAACvE,GAAf,CAAmB,iBAAnB,CAAxB;;UACA,IAAIwE,eAAJ,EAAqB;YACpBA,eAAe,CAACC,MAAhB,CAAuB;cAAEC,IAAI,EAAEN,QAAQ,CAACpE,GAAT,CAAa,MAAb,CAAR;cAA8B2E,MAAM,EAAEP,QAAQ,CAACpE,GAAT,CAAa,QAAb;YAAtC,CAAvB;UACA;QACD;;QAED,KAAK4E,UAAL,CAAgBzC,IAAhB,CAAqB,UAAC0C,SAAD,EAAU;UAC9B,IAAMC,SAAS,GAAGD,SAAS,CAACC,SAA5B;UACA,IAAMC,aAAa,GAAoBrF,QAAQ,CAACM,GAAT,CAAa,eAAb,EAA8B,EAA9B,CAAvC;UACAN,QAAQ,CAACsC,GAAT,CAAa,eAAb,EAA8B+C,aAA9B;;UAEA,IAAMC,aAAa,GAAGzC,KAAI,CAAC8B,aAAL,CAAmBQ,SAAS,CAAChD,OAA7B,EAAsCnC,QAAtC,CAAtB;;UACAqF,aAAa,CAACE,IAAd,CAAmBD,aAAnB;UACAA,aAAa,CAACE,UAAd,CAAyB,MAAzB,EAAiCL,SAAS,CAAChD,OAA3C;UACAiD,SAAS,CAACK,QAAV,CAAmBF,IAAnB,CAAwBD,aAAxB;QACA,CATD;MAUA;IACD;;;;;;WAED,UAA0BtF,QAA1B,EAAyE0F,gBAAzE,EAA8H;MAA9H;;MACC,IAAIhB,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAf,CAD6H,CAG7H;MACA;MACA;MACA;;MAEA,IAAMqF,MAAM,GAAG,KAAK/E,OAApB;MACA,IAAMgF,MAAM,GAAG,KAAK9E,OAApB;MAEA,IAAM+E,MAAM,GAAG7F,QAAQ,CAACM,GAAT,CAAaqF,MAAb,CAAf;MACA,IAAMG,MAAM,GAAG9F,QAAQ,CAACM,GAAT,CAAasF,MAAb,CAAf;;MAEA,IAAIC,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAAhC,EAAsC;QACrC,IAAMC,UAAU,GAAG,KAAKpF,WAAxB;QACA,IAAMqF,UAAU,GAAG,KAAKnF,WAAxB;QAEA,IAAMoF,SAAS,GAAG,KAAK3F,GAAL,CAAS,WAAT,EAAsBN,QAAQ,CAACM,GAAT,CAAa,WAAb,EAA0B,GAA1B,CAAtB,CAAlB;QACA,IAAM4F,SAAS,GAAG,KAAK5F,GAAL,CAAS,WAAT,EAAsBN,QAAQ,CAACM,GAAT,CAAa,WAAb,EAA0B,GAA1B,CAAtB,CAAlB;QAEA,IAAM6F,aAAa,GAAG,KAAK7F,GAAL,CAAS,eAAT,EAA0BN,QAAQ,CAACM,GAAT,CAAa,eAAb,EAA8B2F,SAA9B,CAA1B,CAAtB;QACA,IAAMG,aAAa,GAAG,KAAK9F,GAAL,CAAS,eAAT,EAA0BN,QAAQ,CAACM,GAAT,CAAa,eAAb,EAA8B4F,SAA9B,CAA1B,CAAtB;QAEA,IAAMlE,KAAK,GAAG0C,QAAQ,CAACpE,GAAT,CAAa,OAAb,CAAd;QACA,IAAMwB,MAAM,GAAG4C,QAAQ,CAACpE,GAAT,CAAa,QAAb,CAAf;QAEA,IAAMsC,OAAO,GAAG,KAAKtC,GAAL,CAAS,SAAT,CAAhB;QAEA,IAAMD,KAAK,GAAG,KAAKC,GAAL,CAAS,OAAT,CAAd;QACA,IAAMC,KAAK,GAAG,KAAKD,GAAL,CAAS,OAAT,CAAd;QACA,IAAM2B,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;QAEA,IAAM+F,MAAM,GAAGhG,KAAK,CAACC,GAAN,CAAU,OAAV,CAAf;QACA,IAAMgG,IAAI,GAAGjG,KAAK,CAACC,GAAN,CAAU,KAAV,CAAb;QAEA,IAAMiG,MAAM,GAAGhG,KAAK,CAACD,GAAN,CAAU,OAAV,CAAf;QACA,IAAMkG,IAAI,GAAGjG,KAAK,CAACD,GAAN,CAAU,KAAV,CAAb;QAEA,IAAImG,GAAJ;QACA,IAAIC,GAAJ;QACA,IAAIC,GAAJ;QACA,IAAIC,GAAJ;QAEA,IAAIC,GAAG,GAAG,KAAKvG,GAAL,CAAS,KAAT,EAAgB,CAAhB,CAAV;QACA,IAAIwG,GAAG,GAAG,KAAKxG,GAAL,CAAS,KAAT,EAAgB,CAAhB,CAAV;QAEA,IAAIyG,MAAI,GAAG,KAAX;QACA,IAAIC,MAAI,GAAG,KAAX;;QAEA,IAAIzG,KAAK,CAACG,MAAN,CAAgC,cAAhC,KAAmDL,KAAK,CAACK,MAAN,CAAgC,cAAhC,CAAvD,EAAwG;UAEvG,IAAIuG,aAAa,GAAG,KAAK3D,YAAL,GAAoB6C,aAApB,GAAoC,GAAxD;UACA,IAAIe,WAAW,GAAG,KAAK3D,YAAL,GAAoB0C,SAApB,GAAgC,GAAlD;;UAEA,IAAIjE,KAAK,YAAYvC,OAArB,EAA8B;YAC7B,IAAI0H,MAAM,GAAW,CAACD,WAAW,GAAGD,aAAf,KAAiC,IAAIjF,KAAK,CAACoF,KAA3C,IAAoD,CAAzE;YACAH,aAAa,IAAIE,MAAjB;YACAD,WAAW,IAAIC,MAAf;UACA;;UAEDV,GAAC,GAAGpG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC+F,UAArC,EAAiDkB,aAAjD,EAAgEH,GAAhE,CAAJ;UACAJ,GAAC,GAAGrG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC2F,MAArC,EAA6CuB,WAA7C,EAA0DJ,GAA1D,CAAJ;UAEAG,aAAa,GAAG,KAAKzD,YAAL,GAAoB4C,aAApB,GAAoC,GAApD;UACAc,WAAW,GAAG,KAAKzD,YAAL,GAAoByC,SAApB,GAAgC,GAA9C;;UAEA,IAAIpE,MAAM,YAAYrC,OAAtB,EAA+B;YAC9B,IAAI0H,MAAM,GAAW,CAACD,WAAW,GAAGD,aAAf,KAAiC,IAAInF,MAAM,CAACsF,KAA5C,IAAqD,CAA1E;YACAH,aAAa,IAAIE,MAAjB;YACAD,WAAW,IAAIC,MAAf;UACA;;UAEDR,GAAC,GAAGpG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqCgG,UAArC,EAAiDiB,aAAjD,EAAgEJ,GAAhE,CAAJ;UACAD,GAAC,GAAGrG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqC4F,MAArC,EAA6CsB,WAA7C,EAA0DL,GAA1D,CAAJ;UAEA7G,QAAQ,CAACuH,MAAT,CAAgB,OAAhB,EAAyB;YAAEC,CAAC,EAAEf,GAAC,GAAG,CAACC,GAAC,GAAGD,GAAL,IAAU,CAAnB;YAAsBgB,CAAC,EAAEd,GAAC,GAAG,CAACC,GAAC,GAAGD,GAAL,IAAU;UAAvC,CAAzB;QACA,CA3BD,MA4BK,IAAItG,KAAK,KAAK4B,QAAd,EAAwB;UAE5B,IAAIgF,aAAa,GAAG,KAAK3D,YAAL,GAAoB6C,aAApB,GAAoC,GAAxD;UACA,IAAIe,WAAW,GAAG,KAAK3D,YAAL,GAAoB0C,SAApB,GAAgC,GAAlD;;UAEA,IAAIjE,KAAK,YAAYvC,OAArB,EAA8B;YAC7B,IAAI0H,MAAM,GAAW,CAACD,WAAW,GAAGD,aAAf,KAAiC,IAAIjF,KAAK,CAACoF,KAA3C,IAAoD,CAAzE;YACAH,aAAa,IAAIE,MAAjB;YACAD,WAAW,IAAIC,MAAf;UACA;;UAEDV,GAAC,GAAGpG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC+F,UAArC,EAAiDkB,aAAjD,EAAgEH,GAAhE,CAAJ;UACAJ,GAAC,GAAGrG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC2F,MAArC,EAA6CuB,WAA7C,EAA0DJ,GAA1D,CAAJ;UACAH,GAAC,GAAGpG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqC4F,MAArC,EAA6CM,SAA7C,EAAwDW,GAAxD,CAAJ;;UAEA,IAAI,KAAKhG,WAAL,KAAqB,KAAKC,OAA9B,EAAuC;YACtC8F,GAAC,GAAGrG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqCgG,UAArC,EAAiDI,aAAjD,EAAgES,GAAhE,CAAJ;UACA,CAFD,MAGK;YACJ,IAAIjE,OAAJ,EAAa;cACZ,IAAI8E,YAAY,GAAG1H,QAAQ,CAACM,GAAT,CAAa,cAAb,CAAnB;;cACA,IAAIoH,YAAJ,EAAkB;gBACjBd,GAAC,GAAGrG,KAAK,CAAC+G,oBAAN,CAA2BI,YAA3B,EAAyC9B,MAAzC,EAAiDQ,aAAjD,EAAiEsB,YAAY,CAACC,SAAb,CAAoCrH,GAApC,CAAwC,KAAxC,CAAjE,CAAJ;cACA,CAFD,MAGK;gBACJsG,GAAC,GAAGrG,KAAK,CAACqH,YAAN,EAAJ;cACA;YACD,CARD,MASK;cACJhB,GAAC,GAAGrG,KAAK,CAACqH,YAAN,EAAJ;YACA;UACD;;UACD5H,QAAQ,CAACuH,MAAT,CAAgB,OAAhB,EAAyB;YAAEC,CAAC,EAAEf,GAAC,GAAG,CAACC,GAAC,GAAGD,GAAL,IAAU,CAAnB;YAAsBgB,CAAC,EAAEd;UAAzB,CAAzB;UAEAK,MAAI,GAAG,IAAP;QACA,CAnCI,MAoCA,IAAIzG,KAAK,KAAK0B,QAAd,EAAwB;UAC5B,IAAIgF,aAAa,GAAG,KAAKzD,YAAL,GAAoB4C,aAApB,GAAoC,GAAxD;UACA,IAAIc,WAAW,GAAG,KAAKzD,YAAL,GAAoByC,SAApB,GAAgC,GAAlD;;UAEA,IAAIpE,MAAM,YAAYrC,OAAtB,EAA+B;YAC9B,IAAI0H,MAAM,GAAW,CAACD,WAAW,GAAGD,aAAf,KAAiC,IAAInF,MAAM,CAACsF,KAA5C,IAAqD,CAA1E;YACAH,aAAa,IAAIE,MAAjB;YACAD,WAAW,IAAIC,MAAf;UACA;;UAEDR,GAAC,GAAGpG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqCgG,UAArC,EAAiDiB,aAAjD,EAAgEJ,GAAhE,CAAJ;UACAD,GAAC,GAAGrG,KAAK,CAAC+G,oBAAN,CAA2BtH,QAA3B,EAAqC4F,MAArC,EAA6CsB,WAA7C,EAA0DL,GAA1D,CAAJ;UACAH,GAAC,GAAGrG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC2F,MAArC,EAA6CM,SAA7C,EAAwDa,GAAxD,CAAJ;;UAEA,IAAI,KAAKnG,WAAL,KAAqB,KAAKC,OAA9B,EAAuC;YACtC6F,GAAC,GAAGpG,KAAK,CAACgH,oBAAN,CAA2BrH,QAA3B,EAAqC+F,UAArC,EAAiDI,aAAjD,EAAgEW,GAAhE,CAAJ;UACA,CAFD,MAGK;YACJ,IAAIlE,OAAJ,EAAa;cACZ,IAAIiF,YAAY,GAAG7H,QAAQ,CAACM,GAAT,CAAa,cAAb,CAAnB;;cACA,IAAIuH,YAAJ,EAAkB;gBACjBpB,GAAC,GAAGpG,KAAK,CAACgH,oBAAN,CAA2BQ,YAA3B,EAAyClC,MAAzC,EAAiDQ,aAAjD,EAAiE0B,YAAY,CAACF,SAAb,CAAoCrH,GAApC,CAAwC,KAAxC,CAAjE,CAAJ;cACA,CAFD,MAGK;gBACJmG,GAAC,GAAGpG,KAAK,CAACuH,YAAN,EAAJ;cACA;YACD,CARD,MASK;cACJnB,GAAC,GAAGpG,KAAK,CAACuH,YAAN,EAAJ;YACA;UACD;;UAEDb,MAAI,GAAG,IAAP;UAEA/G,QAAQ,CAACuH,MAAT,CAAgB,OAAhB,EAAyB;YAAEC,CAAC,EAAEd,GAAL;YAAQe,CAAC,EAAEd,GAAC,GAAG,CAACC,GAAC,GAAGD,GAAL,IAAU;UAAzB,CAAzB;QACA;;QAED,KAAKmB,qBAAL,CAA2B9H,QAA3B,EAAqC0E,QAArC,EAAgD+B,GAAhD,EAAmDC,GAAnD,EAAsDC,GAAtD,EAAyDC,GAAzD,EAA4DG,MAA5D,EAAkEC,MAAlE;;QAEA,IAAKP,GAAC,GAAGJ,MAAJ,IAAcK,GAAC,GAAGL,MAAnB,IAA+BI,GAAC,GAAGH,IAAJ,IAAYI,GAAC,GAAGJ,IAA/C,IAAyDK,GAAC,GAAGJ,MAAJ,IAAcK,GAAC,GAAGL,MAA3E,IAAuFI,GAAC,GAAGH,IAAJ,IAAYI,GAAC,GAAGJ,IAA3G,EAAkH;UACjH,KAAKzC,aAAL,CAAmB/D,QAAnB,EAA6B,KAA7B;QACA,CAFD,MAGK;UACJ,KAAK+D,aAAL,CAAmB/D,QAAnB,EAA6B,IAA7B;QACA;;QAED,IAAIsF,aAAa,GAAGtF,QAAQ,CAACM,GAAT,CAAa,eAAb,CAApB;;QACA,IAAIgF,aAAJ,EAAmB;UAClB3F,MAAM,CAAC8C,IAAP,CAAY6C,aAAZ,EAA2B,UAACZ,QAAD,EAAS;YACnC7B,KAAI,CAACiF,qBAAL,CAA2B9H,QAA3B,EAAqC0E,QAArC,EAA+C+B,GAA/C,EAAkDC,GAAlD,EAAqDC,GAArD,EAAwDC,GAAxD,EAA2DG,MAA3D,EAAiEC,MAAjE;UACA,CAFD;QAGA;;QAED,KAAKe,oBAAL,CAA0B/H,QAA1B,EAAoC0F,gBAApC;MACA;IACD;;;;;;WAED,UAAgC1F,QAAhC,EAA+E0E,QAA/E,EAAmGsD,CAAnG,EAA8GC,CAA9G,EAAyHC,CAAzH,EAAoIC,CAApI,EAA+IC,IAA/I,EAA8JC,IAA9J,EAA2K;MAC1K,IAAMrG,KAAK,GAAG0C,QAAQ,CAACpE,GAAT,CAAa,OAAb,CAAd;MACA,IAAMwB,MAAM,GAAG4C,QAAQ,CAACpE,GAAT,CAAa,QAAb,CAAf;MACA,IAAMgI,QAAQ,GAAG5D,QAAQ,CAACpE,GAAT,CAAa,UAAb,CAAjB;MACA,IAAMiI,SAAS,GAAG7D,QAAQ,CAACpE,GAAT,CAAa,WAAb,CAAlB;MAEA,IAAMkI,GAAG,GAAG,KAAKC,QAAL,CAAcT,CAAd,EAAiBE,CAAjB,CAAZ;MACA,IAAMQ,GAAG,GAAG,KAAKD,QAAL,CAAcR,CAAd,EAAiBE,CAAjB,CAAZ;MAEA,IAAMQ,YAAY,GAAG3I,QAAQ,CAACM,GAAT,CAAa,OAAb,CAArB;;MAEA,IAAIqI,YAAJ,EAAkB;QACjB,IAAMC,KAAK,GAAG,KAAKH,QAAL,CAAcE,YAAY,CAACnB,CAA3B,EAA8BmB,YAAY,CAAClB,CAA3C,CAAd;QACAkB,YAAY,CAACnB,CAAb,GAAiBoB,KAAK,CAACpB,CAAN,GAAU,KAAKqB,EAAhC;QACAF,YAAY,CAAClB,CAAb,GAAiBmB,KAAK,CAACnB,CAAN,GAAU,KAAKqB,EAAhC;MACA;;MAEDd,CAAC,GAAGQ,GAAG,CAAChB,CAAR;MACAS,CAAC,GAAGS,GAAG,CAAClB,CAAR;MAEAU,CAAC,GAAGM,GAAG,CAACf,CAAR;MACAU,CAAC,GAAGO,GAAG,CAACjB,CAAR;;MAEA,IAAI7H,KAAK,CAACmJ,QAAN,CAAe/G,KAAf,CAAJ,EAA2B;QAC1B,IAAMmF,MAAM,GAAW,CAAEc,CAAC,GAAGD,CAAL,GAAUhG,KAAX,IAAoB,CAA3C;QACAgG,CAAC,IAAIb,MAAL;QACAc,CAAC,IAAId,MAAL;MACA;;MAED,IAAIvH,KAAK,CAACmJ,QAAN,CAAeT,QAAf,KAA4BA,QAAQ,GAAGlH,IAAI,CAAC4H,GAAL,CAASf,CAAC,GAAGD,CAAb,CAA3C,EAA4D;QAC3D,IAAMb,MAAM,GAAW,CAAEc,CAAC,GAAGD,CAAL,GAAUM,QAAX,IAAuB,CAA9C;QACAN,CAAC,IAAIb,MAAL;QACAc,CAAC,IAAId,MAAL;MACA;;MAED,IAAIvH,KAAK,CAACmJ,QAAN,CAAejH,MAAf,CAAJ,EAA4B;QAC3B,IAAMqF,MAAM,GAAW,CAAEgB,CAAC,GAAGD,CAAL,GAAUpG,MAAX,IAAqB,CAA5C;QACAoG,CAAC,IAAIf,MAAL;QACAgB,CAAC,IAAIhB,MAAL;MACA;;MAED,IAAIvH,KAAK,CAACmJ,QAAN,CAAeR,SAAf,KAA6BA,SAAS,GAAGnH,IAAI,CAAC4H,GAAL,CAASb,CAAC,GAAGD,CAAb,CAA7C,EAA8D;QAC7D,IAAMf,MAAM,GAAW,CAAEgB,CAAC,GAAGD,CAAL,GAAUK,SAAX,IAAwB,CAA/C;QACAL,CAAC,IAAIf,MAAL;QACAgB,CAAC,IAAIhB,MAAL;MACA;;MAED,IAAI,KAAK7G,GAAL,CAAS,sBAAT,CAAJ,EAAsC;QACrC,IAAI8H,IAAJ,EAAU;UACTH,CAAC,GAAG7G,IAAI,CAACG,GAAL,CAASH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY4G,CAAZ,CAAT,EAAyB,KAAKlG,GAA9B,CAAJ;UACAiG,CAAC,GAAG5G,IAAI,CAACG,GAAL,CAASH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY2G,CAAZ,CAAT,EAAyB,KAAKjG,GAA9B,CAAJ;QACA;;QAED,IAAIsG,IAAJ,EAAU;UACTH,CAAC,GAAG9G,IAAI,CAACG,GAAL,CAASH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY6G,CAAZ,CAAT,EAAyB,KAAKtG,GAA9B,CAAJ;UACAuG,CAAC,GAAG/G,IAAI,CAACG,GAAL,CAASH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY8G,CAAZ,CAAT,EAAyB,KAAKvG,GAA9B,CAAJ;QACA;MACD;;MAED5B,QAAQ,CAACuH,MAAT,CAAgB,MAAhB,EAAwBS,CAAxB;MACAhI,QAAQ,CAACuH,MAAT,CAAgB,OAAhB,EAAyBU,CAAzB;MACAjI,QAAQ,CAACuH,MAAT,CAAgB,KAAhB,EAAuBW,CAAvB;MACAlI,QAAQ,CAACuH,MAAT,CAAgB,QAAhB,EAA0BY,CAA1B;MAEAzD,QAAQ,CAACc,UAAT,CAAoB,OAApB,EAA6ByC,CAAC,GAAGD,CAAjC;MACAtD,QAAQ,CAACc,UAAT,CAAoB,QAApB,EAA8B2C,CAAC,GAAGD,CAAlC;MACAxD,QAAQ,CAACpC,GAAT,CAAa,GAAb,EAAkB0F,CAAlB;MACAtD,QAAQ,CAACpC,GAAT,CAAa,GAAb,EAAkB6F,CAAC,IAAIA,CAAC,GAAGD,CAAR,CAAnB;IACA;;;;;;WAED;MAAA;;MACChI,iBAAM+I,oBAAN,CAA0B7I,IAA1B,CAA0B,IAA1B;;MACAT,MAAM,CAAC8C,IAAP,CAAY,KAAKyG,UAAjB,EAA6B,UAAClJ,QAAD,EAAS;QACrC6C,KAAI,CAACkB,aAAL,CAAmB/D,QAAnB,EAA6B,KAA7B;MACA,CAFD;IAGA;;;;;;WAED,UAA4BA,QAA5B,EAA2E0F,gBAA3E,EAAgI;MAE/H,IAAMhB,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAjB;MAEA,IAAM6I,YAAY,GAAGzE,QAAQ,CAAC0E,MAAT,CAAgBC,MAAhB,CAAuB,cAAvB,CAArB;MACA,IAAMC,YAAY,GAAG5E,QAAQ,CAAC0E,MAAT,CAAgBC,MAAhB,CAAuB,cAAvB,CAArB;MAEA,IAAME,gBAAgB,GAAG7E,QAAQ,CAAC0E,MAAT,CAAgBC,MAAhB,CAAuB,kBAAvB,CAAzB;MACA,IAAMG,gBAAgB,GAAG9E,QAAQ,CAAC0E,MAAT,CAAgBC,MAAhB,CAAuB,kBAAvB,CAAzB;;MAEA,IAAIF,YAAY,IAAII,gBAAhB,IAAoCD,YAApC,IAAoDE,gBAAxD,EAA0E;QACzE,IAAMnJ,KAAK,GAAG,KAAKC,GAAL,CAAS,OAAT,CAAd;QACA,IAAMC,KAAK,GAAG,KAAKD,GAAL,CAAS,OAAT,CAAd;QACA,IAAM2B,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;QAEA,IAAImJ,MAAJ;QACA,IAAIC,OAAJ;QACA,IAAIC,aAAa,SAAjB;;QAEA,IAAI1H,QAAQ,KAAK5B,KAAb,IAAsBE,KAAK,CAACG,MAAN,CAA6B,WAA7B,CAA1B,EAAqE;UACpE+I,MAAI,GAAGzJ,QAAQ,CAACM,GAAT,CAAa,KAAKO,WAAlB,CAAP;UACA6I,OAAK,GAAG1J,QAAQ,CAACM,GAAT,CAAa,KAAKQ,OAAlB,CAAR;UAEA6I,aAAa,GAAGjE,gBAAgB,CAACpF,GAAjB,CAAqB,KAAKQ,OAA1B,CAAhB;QACA,CALD,MAMK,IAAImB,QAAQ,KAAK1B,KAAb,IAAsBF,KAAK,CAACK,MAAN,CAA6B,WAA7B,CAA1B,EAAqE;UACzE+I,MAAI,GAAGzJ,QAAQ,CAACM,GAAT,CAAa,KAAKK,WAAlB,CAAP;UACA+I,OAAK,GAAG1J,QAAQ,CAACM,GAAT,CAAa,KAAKM,OAAlB,CAAR;UAEA+I,aAAa,GAAGjE,gBAAgB,CAACpF,GAAjB,CAAqB,KAAKM,OAA1B,CAAhB;QACA;;QAED,IAAIhB,KAAK,CAACmJ,QAAN,CAAeU,MAAf,KAAwB7J,KAAK,CAACmJ,QAAN,CAAeW,OAAf,CAA5B,EAAmD;UAClD,IAAIA,OAAK,GAAGD,MAAZ,EAAkB;YACjB,IAAIN,YAAJ,EAAkB;cACjBA,YAAY,CAACS,KAAb;YACA;UACD,CAJD,MAKK;YACJ,IAAIN,YAAJ,EAAkB;cACjBA,YAAY,CAACM,KAAb;YACA;UACD;;UACD,IAAIhK,KAAK,CAACmJ,QAAN,CAAeY,aAAf,CAAJ,EAAmC;YAClC,IAAID,OAAK,GAAGC,aAAZ,EAA2B;cAC1B,IAAIJ,gBAAJ,EAAsB;gBACrBA,gBAAgB,CAACK,KAAjB;cACA;YACD,CAJD,MAKK;cACJ,IAAIJ,gBAAJ,EAAsB;gBACrBA,gBAAgB,CAACI,KAAjB;cACA;YACD;UACD;QACD;MACD;IACD;;EAED;;;;;;;;WAGA,UAAuB5J,QAAvB,EAAoE;MACnEE,iBAAM2J,eAAN,CAAqBzJ,IAArB,CAAqB,IAArB,EAAsBJ,QAAtB;;MACA,IAAM0E,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAjB;;MACA,IAAIoE,QAAJ,EAAc;QACb,KAAKvC,OAAL,CAAa2H,WAAb,CAAyBpF,QAAzB;QACAA,QAAQ,CAACqF,OAAT;MACA;;MAED,IAAMzE,aAAa,GAAGtF,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAtB;;MACA,IAAIgF,aAAJ,EAAmB;QAClB3F,MAAM,CAAC8C,IAAP,CAAY6C,aAAZ,EAA2B,UAACZ,QAAD,EAAS;UACnC,IAAMsF,IAAI,GAAGtF,QAAQ,CAACuF,UAAT,CAAoB,MAApB,CAAb;;UACA,IAAID,IAAJ,EAAU;YACTA,IAAI,CAACF,WAAL,CAAiBpF,QAAjB;UACA;;UACDA,QAAQ,CAACqF,OAAT;QACA,CAND;MAOA;IACD;;EAED;;;;;;;;;;;;WAOA,UAA0B/J,QAA1B,EAAyEkK,QAAzE,EAA0F;;;;;;cACnFC,QAAQ,GAAG,CAACjK,iBAAMkK,YAAN,CAAkBhK,IAAlB,CAAkB,IAAlB,EAAmBJ,QAAnB,EAA6BkK,QAA7B,CAAD,CAAX;cACAxF,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAX;;cACN,IAAIoE,QAAJ,EAAc;gBACbyF,QAAQ,CAAC5E,IAAT,CAAcb,QAAQ,CAAC2F,IAAT,CAAcH,QAAd,CAAd;cACA;;cAEK5E,aAAa,GAAGtF,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAhB;;cACN,IAAIgF,aAAJ,EAAmB;gBAClB3F,MAAM,CAAC8C,IAAP,CAAY6C,aAAZ,EAA2B,UAACZ,QAAD,EAAS;kBACnCyF,QAAQ,CAAC5E,IAAT,CAAcb,QAAQ,CAAC2F,IAAT,CAAcH,QAAd,CAAd;gBACA,CAFD;cAGA;;cAED;cAAA;cAAA,EAAMI,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAN;;;cAAAK;;;;;;;;IACA;;;;;;WAED,UAAwBxK,QAAxB,EAAuEyK,OAAvE,EAAuF;MACtF,IAAM/F,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAjB;;MACA,IAAIoE,QAAJ,EAAc;QACbA,QAAQ,CAACc,UAAT,CAAoB,SAApB,EAA+BiF,OAA/B;MACA;;MAED,IAAMnF,aAAa,GAAGtF,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAtB;;MACA,IAAIgF,aAAJ,EAAmB;QAClB3F,MAAM,CAAC8C,IAAP,CAAY6C,aAAZ,EAA2B,UAACZ,QAAD,EAAS;UACnCA,QAAQ,CAACc,UAAT,CAAoB,SAApB,EAA+BiF,OAA/B;QACA,CAFD;MAGA;;MAED,IAAMC,OAAO,GAAG1K,QAAQ,CAAC0K,OAAzB;;MACA,IAAIA,OAAJ,EAAa;QACZ/K,MAAM,CAAC8C,IAAP,CAAYiI,OAAZ,EAAqB,UAACC,MAAD,EAAO;UAC3BA,MAAM,CAACnF,UAAP,CAAkB,QAAlB,EAA4B,CAACiF,OAA7B;QACA,CAFD;MAGA;IACD;;EAED;;;;;;;;;;;;WAOA,UAA0BzK,QAA1B,EAAyEkK,QAAzE,EAA0F;;;;;;cACnFC,QAAQ,GAAG,CAACjK,iBAAM0K,YAAN,CAAkBxK,IAAlB,CAAkB,IAAlB,EAAmBJ,QAAnB,EAA6BkK,QAA7B,CAAD,CAAX;cACAxF,QAAQ,GAAG1E,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAX;;cACN,IAAIoE,QAAJ,EAAc;gBACbyF,QAAQ,CAAC5E,IAAT,CAAcb,QAAQ,CAACmG,IAAT,CAAcX,QAAd,CAAd;cACA;;cAEK5E,aAAa,GAAGtF,QAAQ,CAACM,GAAT,CAAa,eAAb,CAAhB;;cACN,IAAIgF,aAAJ,EAAmB;gBAClB3F,MAAM,CAAC8C,IAAP,CAAY6C,aAAZ,EAA2B,UAACZ,QAAD,EAAS;kBACnCyF,QAAQ,CAAC5E,IAAT,CAAcb,QAAQ,CAACmG,IAAT,CAAcX,QAAd,CAAd;gBACA,CAFD;cAGA;;cAED;cAAA;cAAA,EAAMI,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAN;;;cAAAK;;;;;;;;IACA;;EAED;;;;;;;;WAGA,UAA0BxK,QAA1B,EAAwE;MAAxE;;MACC,IAAI6E,cAAc,GAAG,KAAKvE,GAAL,CAAS,gBAAT,CAArB;;MAEA,IAAI,KAAKA,GAAL,CAAS,6BAAT,CAAJ,EAA6C;QAC5C,IAAI,CAACN,QAAL,EAAe;UACd,IAAM8K,YAAY,GAAG,KAAK7J,SAAL,CAAe,KAAKK,QAAL,KAAkB,CAAjC,CAArB;;UACA,IAAIwJ,YAAJ,EAAkB;YACjB9K,QAAQ,GAAG8K,YAAX;UACA;QACD;MACD;;MAED,IAAIjG,cAAJ,EAAoB;QAEnB,IAAIkG,UAAQ,GAAkC,KAAK5I,OAAL,CAAaC,QAA3D;;QACA,IAAIpC,QAAJ,EAAc;UACb,IAAIgL,MAAM,GAAGhL,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAb;;UACA,IAAI0K,MAAJ,EAAY;YACXD,UAAQ,GAAGC,MAAX;UACA;QACD;;QAED,IAAMC,iBAAe,GAAGpG,cAAc,CAACvE,GAAf,CAAmB,iBAAnB,CAAxB;;QAEA,IAAI2K,iBAAJ,EAAqB;UACpB,IAAI,CAACpG,cAAc,CAACvE,GAAf,CAAmB,eAAnB,EAAoCA,GAApC,CAAwC,UAAxC,CAAL,EAA0D;YACzDX,MAAM,CAAC8C,IAAP,CAAY/C,cAAZ,EAA4B,UAACwL,OAAD,EAAa;cACxCD,iBAAe,CAAC3I,GAAhB,CAAoB4I,OAApB,EAA6BH,UAAQ,CAACzK,GAAT,CAAa4K,OAAb,EAAsBrI,KAAI,CAACvC,GAAL,CAAS4K,OAAT,CAAtB,CAA7B;YACA,CAFD;UAGA;QACD;MACD;IAED;;;;;;WAED,UAA4BlL,QAA5B,EAAyE;MACxE,IAAI,KAAKM,GAAL,CAAS,qBAAT,KAAmC,QAAvC,EAAiD;QAChD,OAAOJ,iBAAMiL,iBAAN,CAAuB/K,IAAvB,CAAuB,IAAvB,EAAwBJ,QAAxB,CAAP;MACA;;MAED,IAAIgL,MAAM,GAAGhL,QAAQ,CAACM,GAAT,CAAa,UAAb,CAAb;;MACA,IAAI0K,MAAJ,EAAY;QACX,OAAOA,MAAP;MACA;;MACD,OAAO,IAAP;IACA;;EAhqBDlL;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CN,QAAQ,CAAC4L,UAAT,CAAoBC,MAApB,CAA2B,CAAC1I,gBAAgB,CAAC2I,SAAlB,CAA3B;EAA1C;EAgqBD;AAAC,CAxqBD,CAA+C9L,QAA/C;;SAAsBmD","names":["XYSeries","Percent","visualSettings","$array","$type","__extends","Object","listTemplate","dataItem","makeColumn","_super","_makeFieldNames","call","xAxis","get","yAxis","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_prepareChildren","len","dataItems","length","startIndex","Math","max","endIndex","min","inited","i","_createGraphics","chart","_ph","plotContainer","height","_pw","width","baseAxis","columnsTemplate","columns","template","isDirty","set","index","clusterCount","each","series","BaseColumnSeries","stacked","_this","xRenderer","yRenderer","cellStartLocation","cellEndLocation","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","i_1","_toggleColumn","previous","i_2","j","dataItem_1","i_3","_updateGraphics","i_4","_skipped","updateLegendMarker","_updateChildren","graphics","_makeGraphics","_setDataItem","legendDataItem","markerRectangle","setAll","fill","stroke","axisRanges","axisRange","container","graphicsArray","rangeGraphics","push","setPrivate","children","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","locationX","locationY","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l_1","r_1","t_1","b_1","vcy","vcx","fitW_1","fitH_1","startLocation","endLocation","offset","value","getDataItemPositionX","getDataItemPositionY","setRaw","x","y","stackToItemY","component","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","r","t","b","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","point","_x","_y","isNumber","abs","_handleDataSetChange","_dataItems","dropFromOpen","states","lookup","riseFromOpen","dropFromPrevious","riseFromPrevious","open_1","close_1","previousClose","apply","disposeDataItem","removeValue","dispose","list","getPrivate","duration","promises","hideDataItem","hide","Promise","all","_a","visible","bullets","bullet","showDataItem","show","lastDataItem","graphics_1","column","markerRectangle_1","setting","_getTooltipTarget","classNames","concat","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/series/BaseColumnSeries.ts"],"sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker();\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}