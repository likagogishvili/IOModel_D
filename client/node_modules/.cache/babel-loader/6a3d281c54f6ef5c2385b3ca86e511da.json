{"ast":null,"code":"/**\r\n * Pointed rectangle module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PointedShape } from \"./PointedShape\";\nimport * as $math from \"../utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link IPointedRectangleEvents} for a list of available events\r\n * @see {@link IPointedRectangleAdapters} for a list of available Adapters\r\n */\n\nvar PointedRectangle =\n/** @class */\nfunction (_super) {\n  __extends(PointedRectangle, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PointedRectangle() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PointedRectangle\";\n    _this.element = _this.paper.add(\"path\");\n    _this.cornerRadius = 6;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PointedRectangle.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    var cr = this.cornerRadius;\n    var w = this.innerWidth;\n    var h = this.innerHeight;\n\n    if (w > 0 && h > 0) {\n      var x = this.pointerX;\n      var y = this.pointerY;\n      var bwh = this.pointerBaseWidth / 2;\n      var maxcr = $math.min(w / 2, h / 2);\n      var crtl = $math.fitToRange(cr, 0, maxcr);\n      var crtr = $math.fitToRange(cr, 0, maxcr);\n      var crbr = $math.fitToRange(cr, 0, maxcr);\n      var crbl = $math.fitToRange(cr, 0, maxcr); // corner coordinates\n      // top left\n\n      var xtl = 0;\n      var ytl = 0; // top right\n\n      var xtr = w;\n      var ytr = 0; // bottom right\n\n      var xbr = w;\n      var ybr = h; // bottom left\n\n      var xbl = 0;\n      var ybl = h;\n      var lineT = void 0;\n      var lineR = void 0;\n      var lineB = void 0;\n      var lineL = void 0; // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n      // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n\n      var d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n      var d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl); // top\n\n      if (d1 > 0 && d2 > 0) {\n        var stemX = $math.fitToRange(x, crtl + bwh, w - bwh - crtr);\n        y = $math.fitToRange(y, -Infinity, 0);\n        lineT = \"M\" + crtl + \",0 L\" + (stemX - bwh) + \",0 L\" + x + \",\" + y + \" L\" + (stemX + bwh) + \",0 L\" + (w - crtr) + \",0\";\n      } else {\n        lineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\n      } // bottom\n\n\n      if (d1 < 0 && d2 < 0) {\n        var stemX = $math.fitToRange(x, crbl + bwh, w - bwh - crbr);\n        y = $math.fitToRange(y, h, Infinity);\n        lineB = \" L\" + (w - crbr) + \",\" + h + \" L\" + (stemX + bwh) + \",\" + h + \" L\" + x + \",\" + y + \" L\" + (stemX - bwh) + \",\" + h + \" L\" + crbl + \",\" + h;\n      } else {\n        lineB = \" L\" + crbl + \",\" + h;\n      } // left\n\n\n      if (d1 < 0 && d2 > 0) {\n        var stemY = $math.fitToRange(y, crtl + bwh, h - crbl - bwh);\n        x = $math.fitToRange(x, -Infinity, 0);\n        lineL = \" L0,\" + (h - crbl) + \" L0,\" + (stemY + bwh) + \" L\" + x + \",\" + y + \" L0,\" + (stemY - bwh) + \" L0,\" + crtl;\n      } else {\n        lineL = \" L0,\" + crtl;\n      } // right\n\n\n      if (d1 > 0 && d2 < 0) {\n        var stemY = $math.fitToRange(y, crtr + bwh, h - bwh - crbr);\n        x = $math.fitToRange(x, w, Infinity);\n        lineR = \" L\" + w + \",\" + crtr + \" L\" + w + \",\" + (stemY - bwh) + \" L\" + x + \",\" + y + \" L\" + w + \",\" + (stemY + bwh) + \" L\" + w + \",\" + (h - crbr);\n      } else {\n        lineR = \" L\" + w + \",\" + (h - crbr);\n      }\n\n      var arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\n      var arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\n      var arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\n      var arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\n      this.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;\n    }\n  };\n\n  Object.defineProperty(PointedRectangle.prototype, \"cornerRadius\", {\n    /**\r\n     * @return Corner radius (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cornerRadius\");\n    },\n\n    /**\r\n     * Radius of rectangle's border in pixels.\r\n     *\r\n     * @default 0\r\n     * @param value  Corner radius (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cornerRadius\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PointedRectangle;\n}(PointedShape);\n\nexport { PointedRectangle };","map":{"version":3,"mappings":"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","names":["PointedShape","$math","__extends","_super","_this","className","element","paper","add","cornerRadius","applyTheme","PointedRectangle","draw","call","cr","w","innerWidth","h","innerHeight","x","pointerX","y","pointerY","bwh","pointerBaseWidth","maxcr","min","crtl","fitToRange","crtr","crbr","crbl","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","lineT","lineR","lineB","lineL","d1","d2","stemX","Infinity","stemY","arcTR","arcBR","arcBL","arcTL","path","Object","getPropertyValue","value","setPropertyValue"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/PointedRectangle.ts"],"sourcesContent":["/**\r\n * Pointed rectangle module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PointedShape, IPointedShapeProperties, IPointedShapeAdapters, IPointedShapeEvents } from \"./PointedShape\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleProperties extends IPointedShapeProperties {\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleEvents extends IPointedShapeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PointedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPointedRectangleAdapters extends IPointedShapeAdapters, IPointedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link IPointedRectangleEvents} for a list of available events\r\n * @see {@link IPointedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class PointedRectangle extends PointedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPointedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPointedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPointedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PointedRectangle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.cornerRadius = 6;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet cr = this.cornerRadius;\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\t\tif (w > 0 && h > 0) {\r\n\t\t\tlet x = this.pointerX;\r\n\t\t\tlet y = this.pointerY;\r\n\t\t\tlet bwh = this.pointerBaseWidth / 2;\r\n\r\n\t\t\tlet maxcr: number = $math.min(w / 2, h / 2);\r\n\t\t\tlet crtl: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crtr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbl: number = $math.fitToRange(cr, 0, maxcr);\r\n\r\n\t\t\t// corner coordinates\r\n\t\t\t// top left\r\n\t\t\tlet xtl = 0;\r\n\t\t\tlet ytl = 0;\r\n\t\t\t// top right\r\n\t\t\tlet xtr = w;\r\n\t\t\tlet ytr = 0;\r\n\t\t\t// bottom right\r\n\t\t\tlet xbr = w;\r\n\t\t\tlet ybr = h;\r\n\t\t\t// bottom left\r\n\t\t\tlet xbl = 0;\r\n\t\t\tlet ybl = h;\r\n\r\n\t\t\tlet lineT;\r\n\t\t\tlet lineR;\r\n\t\t\tlet lineB;\r\n\t\t\tlet lineL;\r\n\r\n\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n\r\n\t\t\t// top\r\n\t\t\tif (d1 > 0 && d2 > 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crtl + bwh, w - bwh - crtr);\r\n\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (stemX - bwh) + \",0 L\" + x + \",\" + y + \" L\" + (stemX + bwh) + \",0 L\" + (w - crtr) + \",0\";\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\tif (d1 < 0 && d2 < 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crbl + bwh, w - bwh - crbr);\r\n\t\t\t\ty = $math.fitToRange(y, h, Infinity);\r\n\t\t\t\tlineB = \" L\" + (w - crbr) + \",\" + h + \" L\" + (stemX + bwh) + \",\" + h + \" L\" + x + \",\" + y + \" L\" + (stemX - bwh) + \",\" + h + \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineB = \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\tif (d1 < 0 && d2 > 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtl + bwh, h - crbl - bwh);\r\n\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\r\n\t\t\t\tlineL = \" L0,\" + (h - crbl) + \" L0,\" + (stemY + bwh) + \" L\" + x + \",\" + y + \" L0,\" + (stemY - bwh) + \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineL = \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\t// right\r\n\t\t\tif (d1 > 0 && d2 < 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtr + bwh, h - bwh - crbr);\r\n\t\t\t\tx = $math.fitToRange(x, w, Infinity);\r\n\t\t\t\tlineR = \" L\" + w + \",\" + crtr + \" L\" + w + \",\" + (stemY - bwh) + \" L\" + x + \",\" + y + \" L\" + w + \",\" + (stemY + bwh) + \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineR = \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\r\n\t\t\tlet arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n\t\t\tlet arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n\t\t\tlet arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n\t\t\tlet arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n\r\n\t\t\tthis.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Corner radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Corner radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}