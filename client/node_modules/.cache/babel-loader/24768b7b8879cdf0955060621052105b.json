{"ast":null,"code":"/**\r\n * Pie tick module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Tick } from \"../elements/Tick\";\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\n\nvar PieTick =\n/** @class */\nfunction (_super) {\n  __extends(PieTick, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieTick() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A label element this tick is attached to.\r\n     */\n\n\n    _this._label = new MutableValueDisposer();\n    /**\r\n     * A slice element this tick is attached to.\r\n     */\n\n    _this._slice = new MutableValueDisposer();\n    _this.className = \"PieTick\";\n    _this.element = _this.paper.add(\"polyline\");\n\n    _this._disposers.push(_this._label);\n\n    _this._disposers.push(_this._slice);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the tick element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PieTick.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    var slice = this.slice;\n    var label = this.label;\n    var series = slice.dataItem.component;\n\n    if (slice && slice.radius > 0 && label && label.text) {\n      var x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\n      var y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\n      var x1 = void 0;\n      var y1 = void 0;\n      var x2 = void 0;\n      var y2 = void 0;\n\n      if (series.alignLabels) {\n        x1 = label.pixelX - this.length;\n        y1 = label.pixelY;\n        x2 = label.pixelX;\n        y2 = y1;\n\n        if (label.horizontalCenter == \"right\") {\n          x1 += 2 * this.length;\n          x2 = x1 - this.length;\n        }\n      } else {\n        var r = label.pixelRadius(slice.radius);\n        x1 = x0 + r * slice.ix;\n        y1 = y0 + r * slice.iy;\n        x2 = x1;\n        y2 = y1;\n      }\n\n      this.element.attr({\n        \"points\": [x0, y0, x1, y1, x2, y2]\n      });\n    }\n  };\n\n  Object.defineProperty(PieTick.prototype, \"slice\", {\n    /**\r\n     * @return Slice\r\n     */\n    get: function () {\n      return this._slice.get();\n    },\n\n    /**\r\n     * Slice element tick is attached to.\r\n     *\r\n     * @param slice  Slice\r\n     */\n    set: function (slice) {\n      this._slice.set(slice, new MultiDisposer([slice.events.on(\"transformed\", this.invalidate, this), slice.events.on(\"validated\", this.invalidate, this)]));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieTick.prototype, \"label\", {\n    /**\r\n     * @return Label\r\n     */\n    get: function () {\n      return this._label.get();\n    },\n\n    /**\r\n     * Label element tick is attached to.\r\n     *\r\n     * @param label  Label\r\n     */\n    set: function (label) {\n      this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PieTick;\n}(Tick);\n\nexport { PieTick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"PieTick\"] = PieTick;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,IAAT,QAAkE,kBAAlE;AAGA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,2BAApD;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AA4BA;;;;;;;AAOA;;;;;;;AAMA;AAAA;AAAA;EAA6BC;EA2B5B;;;;;EAGA;IAAA,YACCC,qBAAO,IADR;IAbA;;;;;IAGUC,eAAS,IAAIL,oBAAJ,EAAT;IAEV;;;;IAGUK,eAAS,IAAIL,oBAAJ,EAAT;IAOTK,KAAI,CAACC,SAAL,GAAiB,SAAjB;IACAD,KAAI,CAACE,OAAL,GAAeF,KAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAf,CAAf;;IACAJ,KAAI,CAACK,UAAL,CAAgBC,IAAhB,CAAqBN,KAAI,CAACO,MAA1B;;IACAP,KAAI,CAACK,UAAL,CAAgBC,IAAhB,CAAqBN,KAAI,CAACQ,MAA1B;;IACAR,KAAI,CAACS,UAAL;;;EACA;EAED;;;;;;;EAKOC,yBAAP;IACCX,iBAAMY,IAAN,CAAUC,IAAV,CAAU,IAAV;;IAEA,IAAIC,KAAK,GAAU,KAAKA,KAAxB;IACA,IAAIC,KAAK,GAAG,KAAKA,KAAjB;IAEA,IAAIC,MAAM,GAAcF,KAAK,CAACG,QAAN,CAAeC,SAAvC;;IAEA,IAAIJ,KAAK,IAAIA,KAAK,CAACK,MAAN,GAAe,CAAxB,IAA6BJ,KAA7B,IAAsCA,KAAK,CAACK,IAAhD,EAAsD;MACrD,IAAIC,EAAE,GAAGP,KAAK,CAACQ,EAAN,GAAWR,KAAK,CAACA,KAAN,CAAYQ,EAAvB,GAA4BR,KAAK,CAACS,MAAlC,GAA2CT,KAAK,CAACU,EAAN,GAAWV,KAAK,CAACK,MAAjB,GAA0BL,KAAK,CAACW,KAApF;MACA,IAAIC,EAAE,GAAGZ,KAAK,CAACa,EAAN,GAAWb,KAAK,CAACA,KAAN,CAAYa,EAAvB,GAA4Bb,KAAK,CAACc,MAAlC,GAA2Cd,KAAK,CAACe,EAAN,GAAWf,KAAK,CAACgB,OAAjB,GAA2BhB,KAAK,CAACW,KAArF;MAEA,IAAIM,EAAE,SAAN;MACA,IAAIC,EAAE,SAAN;MAEA,IAAIC,EAAE,SAAN;MACA,IAAIC,EAAE,SAAN;;MAEA,IAAIlB,MAAM,CAACmB,WAAX,EAAwB;QACvBJ,EAAE,GAAGhB,KAAK,CAACQ,MAAN,GAAe,KAAKa,MAAzB;QACAJ,EAAE,GAAGjB,KAAK,CAACa,MAAX;QAEAK,EAAE,GAAGlB,KAAK,CAACQ,MAAX;QACAW,EAAE,GAAGF,EAAL;;QAEA,IAAIjB,KAAK,CAACsB,gBAAN,IAA0B,OAA9B,EAAuC;UACtCN,EAAE,IAAI,IAAI,KAAKK,MAAf;UACAH,EAAE,GAAGF,EAAE,GAAG,KAAKK,MAAf;QACA;MACD,CAXD,MAYK;QACJ,IAAME,CAAC,GAAGvB,KAAK,CAACwB,WAAN,CAAkBzB,KAAK,CAACK,MAAxB,CAAV;QAEAY,EAAE,GAAGV,EAAE,GAAGiB,CAAC,GAAGxB,KAAK,CAACU,EAApB;QACAQ,EAAE,GAAGN,EAAE,GAAGY,CAAC,GAAGxB,KAAK,CAACe,EAApB;QAEAI,EAAE,GAAGF,EAAL;QACAG,EAAE,GAAGF,EAAL;MACA;;MAED,KAAK7B,OAAL,CAAaqC,IAAb,CAAkB;QAAE,UAAU,CAACnB,EAAD,EAAKK,EAAL,EAASK,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB;MAAZ,CAAlB;IACA;EACD,CA1CM;;EAiDPO,sBAAW9B,iBAAX,EAAW,OAAX,EAAgB;IAOhB;;;SAGA;MACC,OAAO,KAAKF,MAAL,CAAYiC,GAAZ,EAAP;IACA,CAZe;;IALhB;;;;;SAKA,UAAiB5B,KAAjB,EAA6B;MAC5B,KAAKL,MAAL,CAAYkC,GAAZ,CAAgB7B,KAAhB,EAAuB,IAAIjB,aAAJ,CAAkB,CACxCiB,KAAK,CAAC8B,MAAN,CAAaC,EAAb,CAAgB,aAAhB,EAA+B,KAAKC,UAApC,EAAgD,IAAhD,CADwC,EAExChC,KAAK,CAAC8B,MAAN,CAAaC,EAAb,CAAgB,WAAhB,EAA6B,KAAKC,UAAlC,EAA8C,IAA9C,CAFwC,CAAlB,CAAvB;IAIA,CALe;oBAAA;;EAAA,CAAhB;EAmBAL,sBAAW9B,iBAAX,EAAW,OAAX,EAAgB;IAIhB;;;SAGA;MACC,OAAO,KAAKH,MAAL,CAAYkC,GAAZ,EAAP;IACA,CATe;;IALhB;;;;;SAKA,UAAiB3B,KAAjB,EAAyC;MACxC,KAAKP,MAAL,CAAYmC,GAAZ,CAAgB5B,KAAhB,EAAuBA,KAAK,CAAC6B,MAAN,CAAaC,EAAb,CAAgB,aAAhB,EAA+B,KAAKC,UAApC,EAAgD,IAAhD,EAAsD,KAAtD,CAAvB;IACA,CAFe;oBAAA;;EAAA,CAAhB;EAWD;AAAC,CA3HD,CAA6BnD,IAA7B;;;AA6HA;;;;;;;AAMAG,QAAQ,CAACiD,iBAAT,CAA2B,SAA3B,IAAwCpC,OAAxC","names":["Tick","MutableValueDisposer","MultiDisposer","registry","__extends","_super","_this","className","element","paper","add","_disposers","push","_label","_slice","applyTheme","PieTick","draw","call","slice","label","series","dataItem","component","radius","text","x0","dx","pixelX","ix","scale","y0","dy","pixelY","iy","radiusY","x1","y1","x2","y2","alignLabels","length","horizontalCenter","r","pixelRadius","attr","Object","get","set","events","on","invalidate","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/elements/PieTick.ts"],"sourcesContent":["/**\r\n * Pie tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { PieSeries } from \"../series/PieSeries\"\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PieTick]].\r\n */\r\nexport interface IPieTickProperties extends ITickProperties { }\r\n\r\n/**\r\n * Defines events for [[PieTick]].\r\n */\r\nexport interface IPieTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieTickAdapters extends ITickAdapters, IPieTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\r\nexport class PieTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<AxisLabelCircular>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<Slice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieTick\";\r\n\t\tthis.element = this.paper.add(\"polyline\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: Slice = this.slice;\r\n\t\tlet label = this.label;\r\n\r\n\t\tlet series = <PieSeries>slice.dataItem.component;\r\n\r\n\t\tif (slice && slice.radius > 0 && label && label.text) {\r\n\t\t\tlet x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\r\n\t\t\tlet y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\r\n\r\n\t\t\tlet x1: number;\r\n\t\t\tlet y1: number;\r\n\r\n\t\t\tlet x2: number;\r\n\t\t\tlet y2: number;\r\n\r\n\t\t\tif (series.alignLabels) {\r\n\t\t\t\tx1 = label.pixelX - this.length;\r\n\t\t\t\ty1 = label.pixelY;\r\n\r\n\t\t\t\tx2 = label.pixelX;\r\n\t\t\t\ty2 = y1;\r\n\r\n\t\t\t\tif (label.horizontalCenter == \"right\") {\r\n\t\t\t\t\tx1 += 2 * this.length;\r\n\t\t\t\t\tx2 = x1 - this.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst r = label.pixelRadius(slice.radius);\r\n\r\n\t\t\t\tx1 = x0 + r * slice.ix;\r\n\t\t\t\ty1 = y0 + r * slice.iy;\r\n\r\n\t\t\t\tx2 = x1;\r\n\t\t\t\ty2 = y1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.attr({ \"points\": [x0, y0, x1, y1, x2, y2] });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Slice element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: Slice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Slice\r\n\t */\r\n\tpublic get slice(): Slice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Label element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: AxisLabelCircular) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): AxisLabelCircular {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieTick\"] = PieTick;\r\n"]},"metadata":{},"sourceType":"module"}