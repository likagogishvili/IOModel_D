{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Component } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n/**\r\n * A base class for all series.\r\n */\n\nvar Series =\n/** @class */\nfunction (_super) {\n  __extends(Series, _super);\n\n  function Series() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_aggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_selectionAggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_psi\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_pei\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A chart series belongs to.\r\n     */\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * List of bullets to use for the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n     */\n\n    Object.defineProperty(_this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    /**\r\n     * A [[Container]] series' bullets are stored in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Series.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this.valueFields.push(\"value\");\n\n      _super.prototype._afterNew.call(this);\n\n      this.setPrivate(\"customData\", {});\n\n      this._disposers.push(this.bullets.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"push\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"setIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"insertIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"removeIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"moveIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else {\n          throw new Error(\"Unknown IListEvent type\");\n        }\n      }));\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.bulletsContainer.dispose(); // can be in a different parent\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"startIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(this.getPrivate(\"startIndex\", 0), len);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"endIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(this.getPrivate(\"endIndex\", len), len);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_handleBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItems) {\n      $array.each(dataItems, function (dataItem) {\n        var bullets = dataItem.bullets;\n\n        if (bullets) {\n          $array.each(bullets, function (bullet) {\n            bullet.dispose();\n          });\n          dataItem.bullets = undefined;\n        }\n      });\n      this.markDirtyValues();\n    }\n  });\n  /**\r\n   * Looks up and returns a data item by its ID.\r\n   *\r\n   * @param   id  ID\r\n   * @return      Data item\r\n   */\n\n  Object.defineProperty(Series.prototype, \"getDataItemById\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return $array.find(this.dataItems, function (dataItem) {\n        return dataItem.get(\"id\") == id;\n      });\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      if (this._shouldMakeBullet(dataItem)) {\n        dataItem.bullets = [];\n        this.bullets.each(function (bulletFunction) {\n          _this._makeBullet(dataItem, bulletFunction);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_shouldMakeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      return true;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, bulletFunction, index) {\n      var bullet = bulletFunction(this._root, this, dataItem);\n\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n\n        if (sprite) {\n          sprite._setDataItem(dataItem);\n\n          sprite.setRaw(\"position\", \"absolute\");\n          this.bulletsContainer.children.push(sprite);\n        }\n\n        bullet._index = index;\n        bullet.series = this;\n        dataItem.bullets.push(bullet);\n      }\n\n      return bullet;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n\n      this._aggregatesCalculated = false;\n      this._selectionAggregatesCalculated = false;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var startIndex = this.startIndex();\n      var endIndex = this.endIndex();\n\n      if (this.isPrivateDirty(\"baseValueSeries\")) {\n        var baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\n        if (baseValueSeries) {\n          this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", function () {\n            _this.markDirtyValues();\n          }));\n        }\n      }\n\n      var calculateAggregates = this.get(\"calculateAggregates\");\n\n      if (calculateAggregates) {\n        if (this._valuesDirty && !this._dataProcessed) {\n          if (!this._aggregatesCalculated) {\n            this._calculateAggregates(0, this.dataItems.length);\n\n            this._aggregatesCalculated = true;\n          }\n        }\n\n        if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n          if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {// void\n          } else {\n            this._calculateAggregates(startIndex, endIndex);\n          }\n\n          this._selectionAggregatesCalculated = true;\n        }\n      }\n\n      if (this.isDirty(\"tooltip\")) {\n        var tooltip = this.get(\"tooltip\");\n\n        if (tooltip) {\n          tooltip.hide(0);\n          tooltip.set(\"tooltipTarget\", this);\n        }\n      }\n\n      if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n        var markerRectangle = void 0;\n        var legendDataItem = this.get(\"legendDataItem\");\n\n        if (legendDataItem) {\n          markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n          if (markerRectangle) {\n            if (this.isVisible()) {\n              if (this.isDirty(\"stroke\")) {\n                var stroke = this.get(\"stroke\");\n                markerRectangle.set(\"stroke\", stroke);\n              }\n\n              if (this.isDirty(\"fill\")) {\n                var fill = this.get(\"fill\");\n                markerRectangle.set(\"fill\", fill);\n              }\n            }\n          }\n        }\n\n        this.updateLegendMarker(undefined);\n      }\n\n      if (this.bullets.length > 0) {\n        var startIndex_1 = this.startIndex();\n        var endIndex_1 = this.endIndex();\n\n        for (var i = startIndex_1; i < endIndex_1; i++) {\n          var dataItem = this.dataItems[i];\n\n          if (!dataItem.bullets) {\n            this._makeBullets(dataItem);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_calculateAggregates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (startIndex, endIndex) {\n      var _this = this;\n\n      var fields = this._valueFields;\n\n      if (!fields) {\n        throw new Error(\"No value fields are set for the series.\");\n      }\n\n      var sum = {};\n      var absSum = {};\n      var count = {};\n      var low = {};\n      var high = {};\n      var open = {};\n      var close = {};\n      var average = {};\n      var previous = {};\n      $array.each(fields, function (key) {\n        sum[key] = 0;\n        absSum[key] = 0;\n        count[key] = 0;\n      });\n      $array.each(fields, function (key) {\n        var change = key + \"Change\";\n        var changePercent = key + \"ChangePercent\";\n        var changePrevious = key + \"ChangePrevious\";\n        var changePreviousPercent = key + \"ChangePreviousPercent\";\n        var changeSelection = key + \"ChangeSelection\";\n        var changeSelectionPercent = key + \"ChangeSelectionPercent\";\n        var openKey = \"valueY\";\n\n        if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\n          openKey = \"valueX\";\n        }\n\n        var baseValueSeries = _this.getPrivate(\"baseValueSeries\");\n\n        for (var i = startIndex; i < endIndex; i++) {\n          var dataItem = _this.dataItems[i];\n          var value = dataItem.get(key);\n\n          if (value != null) {\n            count[key]++;\n            sum[key] += value;\n            absSum[key] += Math.abs(value);\n            average[key] = sum[key] / count[key];\n\n            if (low[key] > value || low[key] == null) {\n              low[key] = value;\n            }\n\n            if (high[key] < value || high[key] == null) {\n              high[key] = value;\n            }\n\n            close[key] = value;\n\n            if (open[key] == null) {\n              open[key] = value;\n              previous[key] = value;\n\n              if (baseValueSeries) {\n                open[openKey] = baseValueSeries._getBase(openKey);\n              }\n            }\n\n            if (startIndex === 0) {\n              dataItem.setRaw(change, value - open[openKey]);\n              dataItem.setRaw(changePercent, (value - open[openKey]) / open[openKey] * 100);\n            }\n\n            dataItem.setRaw(changePrevious, value - previous[openKey]);\n            dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n            dataItem.setRaw(changeSelection, value - open[openKey]);\n            dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n            previous[key] = value;\n          }\n        }\n      });\n      $array.each(fields, function (key) {\n        _this.setPrivate(key + \"AverageSelection\", average[key]);\n\n        _this.setPrivate(key + \"CountSelection\", count[key]);\n\n        _this.setPrivate(key + \"SumSelection\", sum[key]);\n\n        _this.setPrivate(key + \"AbsoluteSumSelection\", absSum[key]);\n\n        _this.setPrivate(key + \"LowSelection\", low[key]);\n\n        _this.setPrivate(key + \"HighSelection\", high[key]);\n\n        _this.setPrivate(key + \"OpenSelection\", open[key]);\n\n        _this.setPrivate(key + \"CloseSelection\", close[key]);\n      });\n\n      if (startIndex === 0 && endIndex === this.dataItems.length) {\n        $array.each(fields, function (key) {\n          _this.setPrivate(key + \"Average\", average[key]);\n\n          _this.setPrivate(key + \"Count\", count[key]);\n\n          _this.setPrivate(key + \"Sum\", sum[key]);\n\n          _this.setPrivate(key + \"AbsoluteSum\", absSum[key]);\n\n          _this.setPrivate(key + \"Low\", low[key]);\n\n          _this.setPrivate(key + \"High\", high[key]);\n\n          _this.setPrivate(key + \"Open\", open[key]);\n\n          _this.setPrivate(key + \"Close\", close[key]);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._updateChildren.call(this);\n\n      this._psi = this.startIndex();\n      this._pei = this.endIndex();\n\n      if (this.isDirty(\"visible\")) {\n        this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n      } // Apply heat rules\n\n\n      if (this._valuesDirty && this.get(\"heatRules\") != null) {\n        var rules = this.get(\"heatRules\", []);\n        $array.each(rules, function (rule) {\n          var minValue = rule.minValue || _this.getPrivate(rule.dataField + \"Low\") || 0;\n          var maxValue = rule.maxValue || _this.getPrivate(rule.dataField + \"High\") || 0;\n          $array.each(rule.target._entities, function (target) {\n            var value = target.dataItem.get(rule.dataField);\n\n            if (!$type.isNumber(value)) {\n              return;\n            }\n\n            var percent;\n\n            if (rule.logarithmic) {\n              percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / (Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E);\n            } else {\n              percent = (value - minValue) / (maxValue - minValue);\n            }\n\n            if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n              percent = 0.5;\n            } // fixes problems if all values are the same\n\n\n            var propertyValue;\n\n            if ($type.isNumber(rule.min)) {\n              propertyValue = rule.min + (rule.max - rule.min) * percent;\n            } else if (rule.min instanceof Color) {\n              propertyValue = Color.interpolate(percent, rule.min, rule.max);\n            } else if (rule.min instanceof Percent) {\n              propertyValue = percentInterpolate(percent, rule.min, rule.max);\n            }\n\n            if (rule.customFunction) {\n              rule.customFunction.call(_this, target, minValue, maxValue, value);\n            } else {\n              target.set(rule.key, propertyValue);\n            }\n          });\n        });\n      }\n\n      if (this.bullets.length > 0) {\n        var count = this.dataItems.length;\n        var startIndex = this.startIndex();\n        var endIndex = this.endIndex();\n\n        if (endIndex < count) {\n          endIndex++;\n        }\n\n        if (startIndex > 0) {\n          startIndex--;\n        }\n\n        for (var i = 0; i < startIndex; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n\n        for (var i = startIndex; i < endIndex; i++) {\n          this._positionBullets(this.dataItems[i]);\n        }\n\n        for (var i = endIndex; i < count; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          _this._positionBullet(bullet);\n\n          var sprite = bullet.get(\"sprite\");\n\n          if (bullet.get(\"dynamic\")) {\n            if (sprite) {\n              sprite._markDirtyKey(\"fill\");\n\n              sprite.markDirtySize();\n            }\n\n            if (sprite instanceof Container) {\n              sprite.walkChildren(function (child) {\n                child._markDirtyKey(\"fill\");\n\n                child.markDirtySize();\n              });\n            }\n          }\n\n          if (sprite instanceof Label && sprite.get(\"populateText\")) {\n            sprite.text.markDirtyText();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_hideBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          var sprite = bullet.get(\"sprite\");\n\n          if (sprite) {\n            sprite.setPrivate(\"visible\", false);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bullet) {}\n  });\n  Object.defineProperty(Series.prototype, \"_placeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      chart.bulletsContainer.children.moveValue(this.bulletsContainer);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_removeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bulletsContainer = this.bulletsContainer;\n\n      if (bulletsContainer.parent) {\n        bulletsContainer.parent.children.removeValue(bulletsContainer);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var bullets = dataItem.bullets;\n\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.dispose();\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_getItemReaderLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return \"\";\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(Series.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").show(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(Series.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").hide(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_sequencedShowHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (show, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var startIndex_2, endIndex_2;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.get(\"sequencedInterpolation\")) return [3\n              /*break*/\n              , 4];\n\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"interpolationDuration\", 0);\n              }\n\n              if (!(duration > 0)) return [3\n              /*break*/\n              , 2];\n              startIndex_2 = this.startIndex();\n              endIndex_2 = this.endIndex();\n              return [4\n              /*yield*/\n              , Promise.all($array.map(this.dataItems, function (dataItem, i) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var realDuration, delay;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        realDuration = duration || 0;\n\n                        if (i < startIndex_2 - 10 || i > endIndex_2 + 10) {\n                          realDuration = 0;\n                        }\n\n                        delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex_2 - startIndex_2);\n                        return [4\n                        /*yield*/\n                        , $time.sleep(delay * (i - startIndex_2))];\n\n                      case 1:\n                        _a.sent();\n\n                        if (!show) return [3\n                        /*break*/\n                        , 3];\n                        return [4\n                        /*yield*/\n                        , this.showDataItem(dataItem, realDuration)];\n\n                      case 2:\n                        _a.sent();\n\n                        return [3\n                        /*break*/\n                        , 5];\n\n                      case 3:\n                        return [4\n                        /*yield*/\n                        , this.hideDataItem(dataItem, realDuration)];\n\n                      case 4:\n                        _a.sent();\n\n                        _a.label = 5;\n\n                      case 5:\n                        return [2\n                        /*return*/\n                        ];\n                    }\n                  });\n                });\n              }))];\n\n            case 1:\n              _a.sent();\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 2:\n              return [4\n              /*yield*/\n              , Promise.all($array.map(this.dataItems, function (dataItem) {\n                if (show) {\n                  return _this.showDataItem(dataItem, 0);\n                } else {\n                  return _this.hideDataItem(dataItem, 0);\n                }\n              }))];\n\n            case 3:\n              _a.sent();\n\n              _a.label = 4;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"updateLegendValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var legendDataItem = dataItem.get(\"legendDataItem\");\n\n      if (legendDataItem) {\n        var valueLabel = legendDataItem.get(\"valueLabel\");\n\n        if (valueLabel) {\n          var text = valueLabel.text;\n          var txt = \"\";\n\n          valueLabel._setDataItem(dataItem);\n\n          txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n          valueLabel.set(\"text\", txt);\n          text.markDirtyText();\n        }\n\n        var label = legendDataItem.get(\"label\");\n\n        if (label) {\n          var text = label.text;\n          var txt = \"\";\n\n          label._setDataItem(dataItem);\n\n          txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n          label.set(\"text\", txt);\n          text.markDirtyText();\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  Object.defineProperty(Series.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._onHide.call(this);\n\n      var tooltip = this.getTooltip();\n\n      if (tooltip) {\n        tooltip.hide();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"hoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"unhoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Series.prototype, \"_getBase\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var dataItem = this.dataItems[this.startIndex()];\n\n      if (dataItem) {\n        return dataItem.get(key);\n      }\n\n      return 0;\n    }\n  });\n  Object.defineProperty(Series, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Series\"\n  });\n  Object.defineProperty(Series, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Component.classNames.concat([Series.className])\n  });\n  return Series;\n}(Component);\n\nexport { Series };","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAAiH,6BAAjH;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AAEA,SAASC,IAAT,QAAqB,yBAArB;AAGA,SAASC,SAAT,QAA0B,6BAA1B;AAKA,SAASC,KAAT,QAAsB,yBAAtB;AAyMA;;;;AAGA;AAAA;AAAA;EAAqCC;;EAArC;IAAA;;IASCC;sBAAA;wBAAA;oBAAA;aAA2C;IAA3C;IACAA;sBAAA;wBAAA;oBAAA;aAAoD;IAApD;IACAA;sBAAA;wBAAA;oBAAA;aAAoC;IAApC;IAEAA;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;;IAAA;IAEA;;;;IAGAA;sBAAA;wBAAA;oBAAA;;IAAA;IAEA;;;;;;IAKAA;sBAAA;wBAAA;oBAAA;aAAsI,IAAIX,IAAJ;IAAtI;IAEA;;;;;;IAKAW;sBAAA;wBAAA;oBAAA;aAA8CH,SAAS,CAACI,GAAV,CAAcC,KAAI,CAACC,KAAnB,EAA0B;QAACC,KAAK,EAACR,IAAP;QAAaS,MAAM,EAACT,IAApB;QAA0BU,QAAQ,EAAC;MAAnC,CAA1B;IAA9C;;EAylBA;;;;;;WAvlBA;MAAA;;MACC,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,OAAtB;;MAEAC,iBAAMC,SAAN,CAAeC,IAAf,CAAe,IAAf;;MAEA,KAAKC,UAAL,CAAgB,YAAhB,EAA8B,EAA9B;;MAEA,KAAKC,UAAL,CAAgBL,IAAhB,CAAqB,KAAKM,OAAL,CAAaC,MAAb,CAAoBC,KAApB,CAA0B,UAACC,MAAD,EAAO;QACrD,IAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;UAC5BhB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFD,MAEO,IAAIH,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;UAClChB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;UACtChB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;UACzChB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;UACzChB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;UACvChB,KAAI,CAACiB,cAAL,CAAoBjB,KAAI,CAACkB,SAAzB;QACA,CAFM,MAEA;UACN,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;QACA;MACD,CAhBoB,CAArB;IAiBA;;;;;;WAED;MACC,KAAKC,gBAAL,CAAsBC,OAAtB,GADD,CACkC;;MACjCd,iBAAMe,QAAN,CAAcb,IAAd,CAAc,IAAd;IACA;;;;;;WAED;MACC,IAAIc,GAAG,GAAG,KAAKL,SAAL,CAAeM,MAAzB;MACA,OAAOC,IAAI,CAACC,GAAL,CAAS,KAAKC,UAAL,CAAgB,YAAhB,EAA8B,CAA9B,CAAT,EAA2CJ,GAA3C,CAAP;IACA;;;;;;WAED;MACC,IAAIA,GAAG,GAAG,KAAKL,SAAL,CAAeM,MAAzB;MACA,OAAOC,IAAI,CAACC,GAAL,CAAS,KAAKC,UAAL,CAAgB,UAAhB,EAA4BJ,GAA5B,CAAT,EAA2CA,GAA3C,CAAP;IACA;;;;;;WAED,UAAyBL,SAAzB,EAA6E;MAC5E3B,MAAM,CAACqC,IAAP,CAAYV,SAAZ,EAAuB,UAACW,QAAD,EAAS;QAC/B,IAAMjB,OAAO,GAAGiB,QAAQ,CAACjB,OAAzB;;QACA,IAAGA,OAAH,EAAW;UACVrB,MAAM,CAACqC,IAAP,CAAYhB,OAAZ,EAAqB,UAACkB,MAAD,EAAO;YAC3BA,MAAM,CAACT,OAAP;UACA,CAFD;UAIAQ,QAAQ,CAACjB,OAAT,GAAmBmB,SAAnB;QACA;MACD,CATD;MAWA,KAAKC,eAAL;IACA;;EAED;;;;;;;;;;;WAMA,UAAuBC,EAAvB,EAAiC;MAChC,OAAO1C,MAAM,CAAC2C,IAAP,CAAY,KAAKhB,SAAjB,EAA4B,UAACW,QAAD,EAAc;QAChD,OAAOA,QAAQ,CAACM,GAAT,CAAa,IAAb,KAAsBF,EAA7B;MACA,CAFM,CAAP;IAGA;;;;;;WAED,UAAuBJ,QAAvB,EAAoE;MAApE;;MACC,IAAG,KAAKO,iBAAL,CAAuBP,QAAvB,CAAH,EAAoC;QACnCA,QAAQ,CAACjB,OAAT,GAAmB,EAAnB;QAEA,KAAKA,OAAL,CAAagB,IAAb,CAAkB,UAACS,cAAD,EAAe;UAChCrC,KAAI,CAACsC,WAAL,CAAiBT,QAAjB,EAA2BQ,cAA3B;QACA,CAFD;MAGA;IACD;;;;;;WAED,UAA4BE,SAA5B,EAA0E;MACzE,OAAO,IAAP;IACA;;;;;;WAED,UAAsBV,QAAtB,EAAqEQ,cAArE,EAAsLG,KAAtL,EAAmM;MAClM,IAAMV,MAAM,GAAGO,cAAc,CAAC,KAAKpC,KAAN,EAAa,IAAb,EAAmB4B,QAAnB,CAA7B;;MACA,IAAGC,MAAH,EAAU;QACT,IAAIW,MAAM,GAAGX,MAAM,CAACK,GAAP,CAAW,QAAX,CAAb;;QAEA,IAAIM,MAAJ,EAAY;UACXA,MAAM,CAACC,YAAP,CAAoBb,QAApB;;UACAY,MAAM,CAACE,MAAP,CAAc,UAAd,EAA0B,UAA1B;UACA,KAAKvB,gBAAL,CAAsBwB,QAAtB,CAA+BtC,IAA/B,CAAoCmC,MAApC;QACA;;QACDX,MAAM,CAACe,MAAP,GAAgBL,KAAhB;QACAV,MAAM,CAACgB,MAAP,GAAgB,IAAhB;QACAjB,QAAQ,CAACjB,OAAT,CAAkBN,IAAlB,CAAuBwB,MAAvB;MACA;;MACD,OAAOA,MAAP;IACA;;;;;;WAED;MACCvB,iBAAMwC,WAAN,CAAiBtC,IAAjB,CAAiB,IAAjB;;MACA,KAAKuC,qBAAL,GAA6B,KAA7B;MACA,KAAKC,8BAAL,GAAsC,KAAtC;IACA;;;;;;WAED;MAAA;;MACC1C,iBAAM2C,gBAAN,CAAsBzC,IAAtB,CAAsB,IAAtB;;MAEA,IAAI0C,UAAU,GAAG,KAAKA,UAAL,EAAjB;MACA,IAAIC,QAAQ,GAAG,KAAKA,QAAL,EAAf;;MAGA,IAAG,KAAKC,cAAL,CAAoB,iBAApB,CAAH,EAA0C;QACzC,IAAMC,eAAe,GAAG,KAAK3B,UAAL,CAAgB,iBAAhB,CAAxB;;QACA,IAAG2B,eAAH,EAAmB;UAClB,KAAK3C,UAAL,CAAgBL,IAAhB,CAAqBgD,eAAe,CAACC,SAAhB,CAA0B,YAA1B,EAAwC;YAC5DvD,KAAI,CAACgC,eAAL;UACA,CAFoB,CAArB;QAGA;MACD;;MAED,IAAMwB,mBAAmB,GAAG,KAAKrB,GAAL,CAAS,qBAAT,CAA5B;;MACA,IAAGqB,mBAAH,EAAuB;QACtB,IAAI,KAAKC,YAAL,IAAqB,CAAC,KAAKC,cAA/B,EAA+C;UAC9C,IAAI,CAAC,KAAKV,qBAAV,EAAiC;YAChC,KAAKW,oBAAL,CAA0B,CAA1B,EAA6B,KAAKzC,SAAL,CAAeM,MAA5C;;YACA,KAAKwB,qBAAL,GAA6B,IAA7B;UACA;QACD;;QAED,IAAI,CAAC,KAAKY,IAAL,IAAaT,UAAb,IAA2B,KAAKU,IAAL,IAAaT,QAAzC,KAAsD,CAAC,KAAKH,8BAAhE,EAAgG;UAC/F,IAAIE,UAAU,KAAK,CAAf,IAAoBC,QAAQ,KAAK,KAAKlC,SAAL,CAAeM,MAAhD,IAA0D,KAAKwB,qBAAnE,EAA0F,CACzF;UACA,CAFD,MAGK;YACJ,KAAKW,oBAAL,CAA0BR,UAA1B,EAAsCC,QAAtC;UACA;;UAED,KAAKH,8BAAL,GAAsC,IAAtC;QACA;MACD;;MAED,IAAG,KAAKa,OAAL,CAAa,SAAb,CAAH,EAA2B;QAC1B,IAAIC,OAAO,GAAG,KAAK5B,GAAL,CAAS,SAAT,CAAd;;QACA,IAAG4B,OAAH,EAAW;UACVA,OAAO,CAACC,IAAR,CAAa,CAAb;UACAD,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6B,IAA7B;QACA;MACD;;MAED,IAAI,KAAKH,OAAL,CAAa,MAAb,KAAwB,KAAKA,OAAL,CAAa,QAAb,CAA5B,EAAoD;QAEnD,IAAII,eAAe,SAAnB;QACA,IAAMC,cAAc,GAAG,KAAKhC,GAAL,CAAS,gBAAT,CAAvB;;QACA,IAAIgC,cAAJ,EAAoB;UACnBD,eAAe,GAAGC,cAAc,CAAChC,GAAf,CAAmB,iBAAnB,CAAlB;;UAEA,IAAI+B,eAAJ,EAAqB;YACpB,IAAG,KAAKE,SAAL,EAAH,EAAoB;cACnB,IAAI,KAAKN,OAAL,CAAa,QAAb,CAAJ,EAA4B;gBAC3B,IAAIO,MAAM,GAAG,KAAKlC,GAAL,CAAS,QAAT,CAAb;gBACA+B,eAAe,CAACD,GAAhB,CAAoB,QAApB,EAA8BI,MAA9B;cACA;;cACD,IAAI,KAAKP,OAAL,CAAa,MAAb,CAAJ,EAA0B;gBACzB,IAAIQ,IAAI,GAAG,KAAKnC,GAAL,CAAS,MAAT,CAAX;gBACA+B,eAAe,CAACD,GAAhB,CAAoB,MAApB,EAA4BK,IAA5B;cACA;YACD;UACD;QACD;;QACD,KAAKC,kBAAL,CAAwBxC,SAAxB;MACA;;MAGD,IAAI,KAAKnB,OAAL,CAAaY,MAAb,GAAsB,CAA1B,EAA6B;QAC5B,IAAIgD,YAAU,GAAG,KAAKrB,UAAL,EAAjB;QACA,IAAIsB,UAAQ,GAAG,KAAKrB,QAAL,EAAf;;QAEA,KAAK,IAAIsB,CAAC,GAAGF,YAAb,EAAyBE,CAAC,GAAGD,UAA7B,EAAuCC,CAAC,EAAxC,EAA4C;UAC3C,IAAI7C,QAAQ,GAAG,KAAKX,SAAL,CAAewD,CAAf,CAAf;;UACA,IAAI,CAAC7C,QAAQ,CAACjB,OAAd,EAAuB;YACtB,KAAK+D,YAAL,CAAkB9C,QAAlB;UACA;QACD;MACD;IAED;;;;;;WAED,UAA+BsB,UAA/B,EAAmDC,QAAnD,EAAmE;MAAnE;;MACC,IAAIwB,MAAM,GAAG,KAAKC,YAAlB;;MAEA,IAAI,CAACD,MAAL,EAAa;QACZ,MAAM,IAAIzD,KAAJ,CAAU,yCAAV,CAAN;MACA;;MAED,IAAM2D,GAAG,GAAgC,EAAzC;MACA,IAAMC,MAAM,GAAgC,EAA5C;MACA,IAAMC,KAAK,GAAgC,EAA3C;MACA,IAAMC,GAAG,GAAgC,EAAzC;MACA,IAAMC,IAAI,GAAgC,EAA1C;MACA,IAAMC,IAAI,GAAgC,EAA1C;MACA,IAAMC,KAAK,GAAgC,EAA3C;MACA,IAAMC,OAAO,GAAgC,EAA7C;MACA,IAAMC,QAAQ,GAAgC,EAA9C;MAEA/F,MAAM,CAACqC,IAAP,CAAYgD,MAAZ,EAAoB,UAACW,GAAD,EAAI;QACvBT,GAAG,CAACS,GAAD,CAAH,GAAW,CAAX;QACAR,MAAM,CAACQ,GAAD,CAAN,GAAc,CAAd;QACAP,KAAK,CAACO,GAAD,CAAL,GAAa,CAAb;MACA,CAJD;MAMAhG,MAAM,CAACqC,IAAP,CAAYgD,MAAZ,EAAoB,UAACW,GAAD,EAAI;QACvB,IAAIxE,MAAM,GAAGwE,GAAG,GAAG,QAAnB;QACA,IAAIC,aAAa,GAAGD,GAAG,GAAG,eAA1B;QACA,IAAIE,cAAc,GAAGF,GAAG,GAAG,gBAA3B;QACA,IAAIG,qBAAqB,GAAGH,GAAG,GAAG,uBAAlC;QACA,IAAII,eAAe,GAAGJ,GAAG,GAAG,iBAA5B;QACA,IAAIK,sBAAsB,GAAGL,GAAG,GAAG,wBAAnC;QAEA,IAAIM,OAAO,GAAG,QAAd;;QAEA,IAAGN,GAAG,IAAI,QAAP,IAAmBA,GAAG,IAAI,YAA1B,IAA0CA,GAAG,IAAI,WAAjD,IAAgEA,GAAG,IAAI,YAA1E,EAAuF;UACtFM,OAAO,GAAG,QAAV;QACA;;QAED,IAAMvC,eAAe,GAAGtD,KAAI,CAAC2B,UAAL,CAAgB,iBAAhB,CAAxB;;QAEA,KAAK,IAAI+C,CAAC,GAAGvB,UAAb,EAAyBuB,CAAC,GAAGtB,QAA7B,EAAuCsB,CAAC,EAAxC,EAA4C;UAC3C,IAAM7C,QAAQ,GAAG7B,KAAI,CAACkB,SAAL,CAAewD,CAAf,CAAjB;UAEA,IAAIoB,KAAK,GAAGjE,QAAQ,CAACM,GAAT,CAAkBoD,GAAlB,CAAZ;;UAEA,IAAIO,KAAK,IAAI,IAAb,EAAmB;YAClBd,KAAK,CAACO,GAAD,CAAL;YACAT,GAAG,CAACS,GAAD,CAAH,IAAYO,KAAZ;YAEAf,MAAM,CAACQ,GAAD,CAAN,IAAe9D,IAAI,CAACsE,GAAL,CAASD,KAAT,CAAf;YAEAT,OAAO,CAACE,GAAD,CAAP,GAAeT,GAAG,CAACS,GAAD,CAAH,GAAWP,KAAK,CAACO,GAAD,CAA/B;;YAEA,IAAIN,GAAG,CAACM,GAAD,CAAH,GAAWO,KAAX,IAAoBb,GAAG,CAACM,GAAD,CAAH,IAAY,IAApC,EAA0C;cACzCN,GAAG,CAACM,GAAD,CAAH,GAAWO,KAAX;YACA;;YACD,IAAIZ,IAAI,CAACK,GAAD,CAAJ,GAAYO,KAAZ,IAAqBZ,IAAI,CAACK,GAAD,CAAJ,IAAa,IAAtC,EAA4C;cAC3CL,IAAI,CAACK,GAAD,CAAJ,GAAYO,KAAZ;YACA;;YAEDV,KAAK,CAACG,GAAD,CAAL,GAAaO,KAAb;;YAEA,IAAIX,IAAI,CAACI,GAAD,CAAJ,IAAa,IAAjB,EAAuB;cACtBJ,IAAI,CAACI,GAAD,CAAJ,GAAYO,KAAZ;cACAR,QAAQ,CAACC,GAAD,CAAR,GAAgBO,KAAhB;;cAEA,IAAGxC,eAAH,EAAmB;gBAClB6B,IAAI,CAACU,OAAD,CAAJ,GAAgBvC,eAAe,CAAC0C,QAAhB,CAAyBH,OAAzB,CAAhB;cACA;YACD;;YAED,IAAI1C,UAAU,KAAK,CAAnB,EAAsB;cACrBtB,QAAQ,CAACc,MAAT,CAAsB5B,MAAtB,EAA+B+E,KAAK,GAAGX,IAAI,CAACU,OAAD,CAA3C;cACAhE,QAAQ,CAACc,MAAT,CAAsB6C,aAAtB,EAAsC,CAACM,KAAK,GAAGX,IAAI,CAACU,OAAD,CAAb,IAA0BV,IAAI,CAACU,OAAD,CAA9B,GAA0C,GAAhF;YACA;;YAEDhE,QAAQ,CAACc,MAAT,CAAsB8C,cAAtB,EAAuCK,KAAK,GAAGR,QAAQ,CAACO,OAAD,CAAvD;YACAhE,QAAQ,CAACc,MAAT,CAAsB+C,qBAAtB,EAA8C,CAACI,KAAK,GAAGR,QAAQ,CAACO,OAAD,CAAjB,IAA8BP,QAAQ,CAACO,OAAD,CAAtC,GAAkD,GAAhG;YACAhE,QAAQ,CAACc,MAAT,CAAsBgD,eAAtB,EAAwCG,KAAK,GAAGX,IAAI,CAACU,OAAD,CAApD;YACAhE,QAAQ,CAACc,MAAT,CAAsBiD,sBAAtB,EAA+C,CAACE,KAAK,GAAGX,IAAI,CAACU,OAAD,CAAb,IAA0BV,IAAI,CAACU,OAAD,CAA9B,GAA0C,GAAzF;YAEAP,QAAQ,CAACC,GAAD,CAAR,GAAgBO,KAAhB;UACA;QACD;MACD,CA5DD;MA8DAvG,MAAM,CAACqC,IAAP,CAAYgD,MAAZ,EAAoB,UAACW,GAAD,EAAI;QACvBvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,kBAA5B,EAAiDF,OAAO,CAACE,GAAD,CAAxD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,gBAA5B,EAA+CP,KAAK,CAACO,GAAD,CAApD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,cAA5B,EAA6CT,GAAG,CAACS,GAAD,CAAhD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,sBAA5B,EAAqDR,MAAM,CAACQ,GAAD,CAA3D;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,cAA5B,EAA6CN,GAAG,CAACM,GAAD,CAAhD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,eAA5B,EAA8CL,IAAI,CAACK,GAAD,CAAlD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,eAA5B,EAA8CJ,IAAI,CAACI,GAAD,CAAlD;;QACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,gBAA5B,EAA+CH,KAAK,CAACG,GAAD,CAApD;MACA,CATD;;MAWA,IAAIpC,UAAU,KAAK,CAAf,IAAoBC,QAAQ,KAAK,KAAKlC,SAAL,CAAeM,MAApD,EAA4D;QAC3DjC,MAAM,CAACqC,IAAP,CAAYgD,MAAZ,EAAoB,UAACW,GAAD,EAAI;UACvBvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,SAA5B,EAAwCF,OAAO,CAACE,GAAD,CAA/C;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,OAA5B,EAAsCP,KAAK,CAACO,GAAD,CAA3C;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,KAA5B,EAAoCT,GAAG,CAACS,GAAD,CAAvC;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,aAA5B,EAA4CR,MAAM,CAACQ,GAAD,CAAlD;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,KAA5B,EAAoCN,GAAG,CAACM,GAAD,CAAvC;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,MAA5B,EAAqCL,IAAI,CAACK,GAAD,CAAzC;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,MAA5B,EAAqCJ,IAAI,CAACI,GAAD,CAAzC;;UACAvF,KAAI,CAACU,UAAL,CAAsB6E,GAAG,GAAG,OAA5B,EAAsCH,KAAK,CAACG,GAAD,CAA3C;QACA,CATD;MAUA;IACD;;;;;;WAED;MAAA;;MACChF,iBAAM0F,eAAN,CAAqBxF,IAArB,CAAqB,IAArB;;MAEA,KAAKmD,IAAL,GAAY,KAAKT,UAAL,EAAZ;MACA,KAAKU,IAAL,GAAY,KAAKT,QAAL,EAAZ;;MAEA,IAAG,KAAKU,OAAL,CAAa,SAAb,CAAH,EAA2B;QAC1B,KAAK1C,gBAAL,CAAsB6C,GAAtB,CAA0B,SAA1B,EAAqC,KAAK9B,GAAL,CAAS,SAAT,CAArC;MACA,CARF,CAWC;;;MACA,IAAI,KAAKsB,YAAL,IAAqB,KAAKtB,GAAL,CAAS,WAAT,KAAyB,IAAlD,EAAwD;QACvD,IAAM+D,KAAK,GAAG,KAAK/D,GAAL,CAAS,WAAT,EAAsB,EAAtB,CAAd;QACA5C,MAAM,CAACqC,IAAP,CAAYsE,KAAZ,EAAmB,UAACC,IAAD,EAAK;UACvB,IAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAL,IAAiBpG,KAAI,CAAC2B,UAAL,CAAsBwE,IAAI,CAACE,SAAL,GAAiB,KAAvC,CAAjB,IAAmE,CAApF;UACA,IAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAL,IAAiBtG,KAAI,CAAC2B,UAAL,CAAsBwE,IAAI,CAACE,SAAL,GAAiB,MAAvC,CAAjB,IAAoE,CAArF;UAEA9G,MAAM,CAACqC,IAAP,CAAYuE,IAAI,CAACI,MAAL,CAAYC,SAAxB,EAAmC,UAACD,MAAD,EAAO;YACzC,IAAMT,KAAK,GAAGS,MAAM,CAAC1E,QAAP,CAAgBM,GAAhB,CAAoBgE,IAAI,CAACE,SAAzB,CAAd;;YAEA,IAAI,CAAC7G,KAAK,CAACiH,QAAN,CAAeX,KAAf,CAAL,EAA4B;cAC3B;YACA;;YAED,IAAIY,OAAJ;;YACA,IAAIP,IAAI,CAACQ,WAAT,EAAsB;cACrBD,OAAO,GAAG,CAACjF,IAAI,CAACmF,GAAL,CAASd,KAAT,IAAkBrE,IAAI,CAACoF,MAAvB,GAAgCpF,IAAI,CAACmF,GAAL,CAASR,QAAT,IAAqB3E,IAAI,CAACoF,MAA3D,KAAuEpF,IAAI,CAACmF,GAAL,CAASN,QAAT,IAAqB7E,IAAI,CAACoF,MAA1B,GAAmCpF,IAAI,CAACmF,GAAL,CAASR,QAAT,IAAqB3E,IAAI,CAACoF,MAApI,CAAV;YACA,CAFD,MAGK;cACJH,OAAO,GAAG,CAACZ,KAAK,GAAGM,QAAT,KAAsBE,QAAQ,GAAGF,QAAjC,CAAV;YACA;;YAED,IAAI5G,KAAK,CAACiH,QAAN,CAAeX,KAAf,MAA0B,CAACtG,KAAK,CAACiH,QAAN,CAAeC,OAAf,CAAD,IAA4BjF,IAAI,CAACsE,GAAL,CAASW,OAAT,KAAqBI,QAA3E,CAAJ,EAA0F;cACzFJ,OAAO,GAAG,GAAV;YACA,CAjBwC,CAmBzC;;;YACA,IAAIK,aAAJ;;YACA,IAAIvH,KAAK,CAACiH,QAAN,CAAeN,IAAI,CAACzE,GAApB,CAAJ,EAA8B;cAC7BqF,aAAa,GAAGZ,IAAI,CAACzE,GAAL,GAAW,CAACyE,IAAI,CAACa,GAAL,GAAWb,IAAI,CAACzE,GAAjB,IAAwBgF,OAAnD;YACA,CAFD,MAGK,IAAIP,IAAI,CAACzE,GAAL,YAAoBtC,KAAxB,EAA+B;cACnC2H,aAAa,GAAG3H,KAAK,CAAC6H,WAAN,CAAkBP,OAAlB,EAA2BP,IAAI,CAACzE,GAAhC,EAAqCyE,IAAI,CAACa,GAA1C,CAAhB;YACA,CAFI,MAGA,IAAIb,IAAI,CAACzE,GAAL,YAAoBpC,OAAxB,EAAiC;cACrCyH,aAAa,GAAG1H,kBAAkB,CAACqH,OAAD,EAAUP,IAAI,CAACzE,GAAf,EAAoByE,IAAI,CAACa,GAAzB,CAAlC;YACA;;YAED,IAAIb,IAAI,CAACe,cAAT,EAAyB;cACxBf,IAAI,CAACe,cAAL,CAAoBzG,IAApB,CAAyBT,KAAzB,EAA+BuG,MAA/B,EAAuCH,QAAvC,EAAiDE,QAAjD,EAA2DR,KAA3D;YACA,CAFD,MAGK;cACJS,MAAM,CAACtC,GAAP,CAAWkC,IAAI,CAACZ,GAAhB,EAAqBwB,aAArB;YACA;UACD,CArCD;QAsCA,CA1CD;MA2CA;;MAED,IAAI,KAAKnG,OAAL,CAAaY,MAAb,GAAsB,CAA1B,EAA6B;QAC5B,IAAIwD,KAAK,GAAG,KAAK9D,SAAL,CAAeM,MAA3B;QACA,IAAI2B,UAAU,GAAG,KAAKA,UAAL,EAAjB;QACA,IAAIC,QAAQ,GAAG,KAAKA,QAAL,EAAf;;QAEA,IAAGA,QAAQ,GAAG4B,KAAd,EAAoB;UACnB5B,QAAQ;QACR;;QACD,IAAGD,UAAU,GAAG,CAAhB,EAAkB;UACjBA,UAAU;QACV;;QAED,KAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,UAApB,EAAgCuB,CAAC,EAAjC,EAAqC;UACpC,KAAKyC,YAAL,CAAkB,KAAKjG,SAAL,CAAewD,CAAf,CAAlB;QACA;;QAED,KAAK,IAAIA,CAAC,GAAGvB,UAAb,EAAyBuB,CAAC,GAAGtB,QAA7B,EAAuCsB,CAAC,EAAxC,EAA4C;UAC3C,KAAK0C,gBAAL,CAAsB,KAAKlG,SAAL,CAAewD,CAAf,CAAtB;QACA;;QAED,KAAK,IAAIA,CAAC,GAAGtB,QAAb,EAAuBsB,CAAC,GAAGM,KAA3B,EAAkCN,CAAC,EAAnC,EAAuC;UACtC,KAAKyC,YAAL,CAAkB,KAAKjG,SAAL,CAAewD,CAAf,CAAlB;QACA;MACD;IACD;;;;;;WAED,UAAwB7C,QAAxB,EAAqE;MAArE;;MACC,IAAGA,QAAQ,CAACjB,OAAZ,EAAoB;QACnBrB,MAAM,CAACqC,IAAP,CAAYC,QAAQ,CAACjB,OAArB,EAA8B,UAACkB,MAAD,EAAO;UACpC9B,KAAI,CAACqH,eAAL,CAAqBvF,MAArB;;UACA,IAAMW,MAAM,GAAGX,MAAM,CAACK,GAAP,CAAW,QAAX,CAAf;;UAEA,IAAGL,MAAM,CAACK,GAAP,CAAW,SAAX,CAAH,EAAyB;YAExB,IAAGM,MAAH,EAAU;cACTA,MAAM,CAAC6E,aAAP,CAAqB,MAArB;;cACA7E,MAAM,CAAC8E,aAAP;YACA;;YACD,IAAG9E,MAAM,YAAY9C,SAArB,EAA+B;cAC9B8C,MAAM,CAAC+E,YAAP,CAAoB,UAACC,KAAD,EAAM;gBACzBA,KAAK,CAACH,aAAN,CAAoB,MAApB;;gBACAG,KAAK,CAACF,aAAN;cACA,CAHD;YAIA;UACD;;UAED,IAAG9E,MAAM,YAAY7C,KAAlB,IAA2B6C,MAAM,CAACN,GAAP,CAAW,cAAX,CAA9B,EAAgE;YAC/DM,MAAM,CAACiF,IAAP,CAAYC,aAAZ;UACA;QACD,CArBD;MAsBA;IACD;;;;;;WAED,UAAuB9F,QAAvB,EAAoE;MACnE,IAAIA,QAAQ,CAACjB,OAAb,EAAsB;QACrBrB,MAAM,CAACqC,IAAP,CAAYC,QAAQ,CAACjB,OAArB,EAA8B,UAACkB,MAAD,EAAO;UACpC,IAAIW,MAAM,GAAGX,MAAM,CAACK,GAAP,CAAW,QAAX,CAAb;;UACA,IAAIM,MAAJ,EAAY;YACXA,MAAM,CAAC/B,UAAP,CAAkB,SAAlB,EAA6B,KAA7B;UACA;QACD,CALD;MAMA;IACD;;;;;;WAED,UAAuBkH,OAAvB,EAAsC,CACrC;;;;;;WAED,UAA8BC,KAA9B,EAAyC;MACxCA,KAAK,CAACzG,gBAAN,CAAuBwB,QAAvB,CAAgCkF,SAAhC,CAA0C,KAAK1G,gBAA/C;IACA;;;;;;WAED;MACC,IAAMA,gBAAgB,GAAG,KAAKA,gBAA9B;;MACA,IAAGA,gBAAgB,CAAC2G,MAApB,EAA2B;QAC1B3G,gBAAgB,CAAC2G,MAAjB,CAAwBnF,QAAxB,CAAiCoF,WAAjC,CAA6C5G,gBAA7C;MACA;IACD;;EAED;;;;;;;;WAGA,UAAuBS,QAAvB,EAAoE;MACnE,IAAMjB,OAAO,GAAGiB,QAAQ,CAACjB,OAAzB;;MAEA,IAAGA,OAAH,EAAW;QACVrB,MAAM,CAACqC,IAAP,CAAYhB,OAAZ,EAAqB,UAACkB,MAAD,EAAO;UAC3BA,MAAM,CAACT,OAAP;QACA,CAFD;MAGA;IACD;;;;;;WAED;MACC,OAAO,EAAP;IACA;;EAED;;;;;;;;;;;;WAOA,UAA0BQ,QAA1B,EAAyEoG,QAAzE,EAA0F;;;;;;cACnFC,QAAQ,GAAG,CAAC3H,iBAAM4H,YAAN,CAAkB1H,IAAlB,CAAkB,IAAlB,EAAmBoB,QAAnB,EAA6BoG,QAA7B,CAAD,CAAX;cACArH,OAAO,GAAGiB,QAAQ,CAACjB,OAAnB;;cACN,IAAGA,OAAH,EAAW;gBACVrB,MAAM,CAACqC,IAAP,CAAYhB,OAAZ,EAAqB,UAACkB,MAAD,EAAO;kBAC3BoG,QAAQ,CAAC5H,IAAT,CAAcwB,MAAM,CAACK,GAAP,CAAW,QAAX,EAAqBiG,IAArB,CAA0BH,QAA1B,CAAd;gBACA,CAFD;cAGA;;cACD;cAAA;cAAA,EAAMI,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAN;;;cAAAK;;;;;;;;IACA;;EAED;;;;;;;;;;;;WAOA,UAA0B1G,QAA1B,EAAyEoG,QAAzE,EAA0F;;;;;;cACnFC,QAAQ,GAAG,CAAC3H,iBAAMiI,YAAN,CAAkB/H,IAAlB,CAAkB,IAAlB,EAAmBoB,QAAnB,EAA6BoG,QAA7B,CAAD,CAAX;cACArH,OAAO,GAAGiB,QAAQ,CAACjB,OAAnB;;cACN,IAAGA,OAAH,EAAW;gBACVrB,MAAM,CAACqC,IAAP,CAAYhB,OAAZ,EAAqB,UAACkB,MAAD,EAAO;kBAC3BoG,QAAQ,CAAC5H,IAAT,CAAcwB,MAAM,CAACK,GAAP,CAAW,QAAX,EAAqB6B,IAArB,CAA0BiE,QAA1B,CAAd;gBACA,CAFD;cAGA;;cACD;cAAA;cAAA,EAAMI,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAN;;;cAAAK;;;;;;;;IACA;;;;;;WAGD,UAAmCH,IAAnC,EAAkDH,QAAlD,EAAmE;;;;;;;;;mBAC9D,KAAK9F,GAAL,CAAS,wBAAT;cAAA;cAAA;;cAEH,IAAI,CAAC3C,KAAK,CAACiH,QAAN,CAAewB,QAAf,CAAL,EAA+B;gBAC9BA,QAAQ,GAAG,KAAK9F,GAAL,CAAS,uBAAT,EAAkC,CAAlC,CAAX;cACA;;oBAEG8F,QAAQ,GAAG,IAAX;cAAA;cAAA;cACGQ,eAAa,KAAKtF,UAAL,EAAb;cACAuF,aAAW,KAAKtF,QAAL,EAAX;cAEN;cAAA;cAAA,EAAMiF,OAAO,CAACC,GAAR,CAAY/I,MAAM,CAACoJ,GAAP,CAAW,KAAKzH,SAAhB,EAA2B,UAAOW,QAAP,EAAiB6C,CAAjB,EAAkB;gBAAA;;;;;wBAC1DkE,YAAY,GAAGX,QAAQ,IAAI,CAA3B;;wBAEJ,IAAIvD,CAAC,GAAG+D,YAAU,GAAG,EAAjB,IAAuB/D,CAAC,GAAGgE,UAAQ,GAAG,EAA1C,EAA8C;0BAC7CE,YAAY,GAAG,CAAf;wBACA;;wBAGGC,KAAK,GAAG,KAAK1G,GAAL,CAAS,gBAAT,EAA2B,CAA3B,IAAgCyG,YAAY,IAAIF,UAAQ,GAAGD,YAAf,CAApD;wBAEJ;wBAAA;wBAAA,EAAMhJ,KAAK,CAACqJ,KAAN,CAAYD,KAAK,IAAInE,CAAC,GAAG+D,YAAR,CAAjB,CAAN;;;wBAAAF;;6BAEIH;wBAAA;wBAAA;wBACH;wBAAA;wBAAA,EAAM,KAAKD,YAAL,CAAkBtG,QAAlB,EAA4B+G,YAA5B,CAAN;;;wBAAAL;;;;;;;wBAGA;wBAAA;wBAAA,EAAM,KAAKC,YAAL,CAAkB3G,QAAlB,EAA4B+G,YAA5B,CAAN;;;wBAAAL;;;;;;;;;;iBAhB6D;cAkB9D,CAlBiB,CAAZ,CAAN;;;cAAAA;;;;;;;cAqBA;cAAA;cAAA,EAAMF,OAAO,CAACC,GAAR,CAAY/I,MAAM,CAACoJ,GAAP,CAAW,KAAKzH,SAAhB,EAA2B,UAACW,QAAD,EAAS;gBACrD,IAAIuG,IAAJ,EAAU;kBACT,OAAOpI,KAAI,CAACmI,YAAL,CAAkBtG,QAAlB,EAA4B,CAA5B,CAAP;gBACA,CAFD,MAGK;kBACJ,OAAO7B,KAAI,CAACwI,YAAL,CAAkB3G,QAAlB,EAA4B,CAA5B,CAAP;gBACA;cACD,CAPiB,CAAZ,CAAN;;;cAAA0G;;;;;;;;;;;IAUF;;EAED;;;;;;;;WAGA,UAAyB1G,QAAzB,EAAsE;MACrE,IAAMsC,cAAc,GAAGtC,QAAQ,CAACM,GAAT,CAAa,gBAAb,CAAvB;;MAEA,IAAIgC,cAAJ,EAAoB;QACnB,IAAM4E,UAAU,GAAG5E,cAAc,CAAChC,GAAf,CAAmB,YAAnB,CAAnB;;QACA,IAAI4G,UAAJ,EAAgB;UACf,IAAMrB,IAAI,GAAGqB,UAAU,CAACrB,IAAxB;UACA,IAAIsB,GAAG,GAAG,EAAV;;UACAD,UAAU,CAACrG,YAAX,CAAwBb,QAAxB;;UACAmH,GAAG,GAAG,KAAK7G,GAAL,CAAS,iBAAT,EAA4BuF,IAAI,CAACvF,GAAL,CAAS,MAAT,EAAiB,EAAjB,CAA5B,CAAN;UAEA4G,UAAU,CAAC9E,GAAX,CAAe,MAAf,EAAuB+E,GAAvB;UACAtB,IAAI,CAACC,aAAL;QACA;;QAED,IAAMsB,KAAK,GAAG9E,cAAc,CAAChC,GAAf,CAAmB,OAAnB,CAAd;;QACA,IAAI8G,KAAJ,EAAW;UACV,IAAMvB,IAAI,GAAGuB,KAAK,CAACvB,IAAnB;UACA,IAAIsB,GAAG,GAAG,EAAV;;UACAC,KAAK,CAACvG,YAAN,CAAmBb,QAAnB;;UACAmH,GAAG,GAAG,KAAK7G,GAAL,CAAS,iBAAT,EAA4BuF,IAAI,CAACvF,GAAL,CAAS,MAAT,EAAiB,EAAjB,CAA5B,CAAN;UAEA8G,KAAK,CAAChF,GAAN,CAAU,MAAV,EAAkB+E,GAAlB;UACAtB,IAAI,CAACC,aAAL;QACA;MACD;IACD;;EAED;;;;;;;;WAGA,UAA0BpF,SAA1B,EAAyE,CACxE;;;;;;WAED;MACChC,iBAAM2I,OAAN,CAAazI,IAAb,CAAa,IAAb;;MAEA,IAAMsD,OAAO,GAAG,KAAKoF,UAAL,EAAhB;;MACA,IAAGpF,OAAH,EAAW;QACVA,OAAO,CAACC,IAAR;MACA;IACD;;EAED;;;;;;;;WAGA,UAAqBzB,SAArB,EAAmE,CAAI;;EAEvE;;;;;;;;WAGA,UAAuBA,SAAvB,EAAqE,CAAI;;EAEzE;;;;;;;;WAGA,UAAgBgD,GAAhB,EAAwB;MACvB,IAAM1D,QAAQ,GAAG,KAAKX,SAAL,CAAe,KAAKiC,UAAL,EAAf,CAAjB;;MACA,IAAItB,QAAJ,EAAc;QACb,OAAOA,QAAQ,CAACM,GAAT,CAAaoD,GAAb,CAAP;MACA;;MACD,OAAO,CAAP;IACA;;EAxnBDzF;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CZ,SAAS,CAACkK,UAAV,CAAqBC,MAArB,CAA4B,CAACC,MAAM,CAACC,SAAR,CAA5B;EAA1C;EAwnBD;AAAC,CA1nBD,CAAqCrK,SAArC;;SAAsBoK","names":["Component","List","Color","percentInterpolate","Percent","$array","$type","$time","p100","Container","Label","__extends","Object","new","_this","_root","width","height","position","valueFields","push","_super","_afterNew","call","setPrivate","_disposers","bullets","events","onAll","change","type","_handleBullets","dataItems","Error","bulletsContainer","dispose","_dispose","len","length","Math","min","getPrivate","each","dataItem","bullet","undefined","markDirtyValues","id","find","get","_shouldMakeBullet","bulletFunction","_makeBullet","_dataItem","index","sprite","_setDataItem","setRaw","children","_index","series","_clearDirty","_aggregatesCalculated","_selectionAggregatesCalculated","_prepareChildren","startIndex","endIndex","isPrivateDirty","baseValueSeries","onPrivate","calculateAggregates","_valuesDirty","_dataProcessed","_calculateAggregates","_psi","_pei","isDirty","tooltip","hide","set","markerRectangle","legendDataItem","isVisible","stroke","fill","updateLegendMarker","startIndex_1","endIndex_1","i","_makeBullets","fields","_valueFields","sum","absSum","count","low","high","open","close","average","previous","key","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","value","abs","_getBase","_updateChildren","rules","rule","minValue","dataField","maxValue","target","_entities","isNumber","percent","logarithmic","log","LOG10E","Infinity","propertyValue","max","interpolate","customFunction","_hideBullets","_positionBullets","_positionBullet","_markDirtyKey","markDirtySize","walkChildren","child","text","markDirtyText","_bullet","chart","moveValue","parent","removeValue","duration","promises","showDataItem","show","Promise","all","_a","hideDataItem","startIndex_2","endIndex_2","map","realDuration","delay","sleep","valueLabel","txt","label","_onHide","getTooltip","classNames","concat","Series","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Series.ts"],"sourcesContent":["import { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport type { Root } from \"../../core/Root\";\nimport { p100 } from \"../../core/util/Percent\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport { Container } from \"../../core/render/Container\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax: any;\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, value?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\n\tvalue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking?:number;\n\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorkingOpen?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorkingClose?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n\n\tbaseValueSeries?: Series;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\");\n\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"customData\", {});\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tpublic startIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"startIndex\", 0), len);\n\t}\n\n\tpublic endIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"endIndex\", len), len)\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis.markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t}\n\t\t\tbullet._index = index;\n\t\t\tbullet.series = this;\n\t\t\tdataItem.bullets!.push(bullet);\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tlet startIndex = this.startIndex();\n\t\tlet endIndex = this.endIndex();\n\n\n\t\tif(this.isPrivateDirty(\"baseValueSeries\")){\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tif(baseValueSeries){\n\t\t\t\tthis._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n\t\t\t\t\tthis.markDirtyValues();\n\t\t\t\t}))\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tif(this.isVisible()){\n\t\t\t\t\t\tif (this.isDirty(\"stroke\")) {\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\t\tlet fill = this.get(\"fill\");\t\t\t\t\t\t\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\n\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet changeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tlet openKey = \"valueY\";\n\n\t\t\tif(key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\"){\n\t\t\t\topenKey = \"valueX\";\n\t\t\t}\n\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\n\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tcount[key]++;\n\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\tprevious[key] = value;\n\n\t\t\t\t\t\tif(baseValueSeries){\n\t\t\t\t\t\t\topen[openKey] = baseValueSeries._getBase(openKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\n\t\t\t\t\tprevious[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.startIndex();\n\t\tthis._pei = this.endIndex();\n\n\t\tif(this.isDirty(\"visible\")){\n\t\t\tthis.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n\t\t}\n\n\n\t\t// Apply heat rules\n\t\tif (this._valuesDirty && this.get(\"heatRules\") != null) {\n\t\t\tconst rules = this.get(\"heatRules\", []);\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet percent: number;\n\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\tlet propertyValue;\n\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").show(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").hide(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.startIndex();\n\t\t\t\tconst endIndex = this.endIndex();\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\tif (legendDataItem) {\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tconst text = valueLabel.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tconst text = label.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _getBase(key: any): number {\n\t\tconst dataItem = this.dataItems[this.startIndex()];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(key);\n\t\t}\n\t\treturn 0;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}