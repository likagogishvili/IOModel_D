{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { BaseColumnSeries } from \"./BaseColumnSeries\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nvar ColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeries, _super);\n\n  function ColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[TemplateList]] of all columns in series.\r\n     *\r\n     * `columns.template` can be used to set default settings for all columns,\r\n     * or to change on existing ones.\r\n     */\n\n\n    Object.defineProperty(_this, \"columns\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template]);\n      })\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(ColumnSeries.prototype, \"makeColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, listTemplate) {\n      var column = this.mainContainer.children.push(listTemplate.make());\n\n      column._setDataItem(dataItem);\n\n      listTemplate.push(column);\n      return column;\n    }\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var _this = this;\n\n      _super.prototype._processAxisRange.call(this, axisRange);\n\n      axisRange.columns = new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template, axisRange.columns.template]);\n      });\n    }\n  });\n  Object.defineProperty(ColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ColumnSeries\"\n  });\n  Object.defineProperty(ColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\n  });\n  return ColumnSeries;\n}(BaseColumnSeries);\n\nexport { ColumnSeries };","map":{"version":3,"mappings":";AAEA,SAASA,gBAAT,QAA6I,oBAA7I;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;;AAeA;AAAA;AAAA;EAAkCC;;EAAlC;IAAA;IAiBC;;;;;;;;IAMAC;sBAAA;wBAAA;oBAAA;aAA0D,IAAIJ,YAAJ,CACzDD,QAAQ,CAACM,GAAT,CAAa,EAAb,CADyD,EAEzD;QAAM,uBAAgB,CAACC,IAAjB,CAAsBC,KAAI,CAACC,KAA3B,EAAkC;UACvCC,QAAQ,EAAE,UAD6B;UAEvCC,SAAS,EAAER,MAAM,CAACS,SAAP,CAAiBJ,KAAI,CAACK,OAAL,CAAaC,QAAb,CAAsBC,GAAtB,CAA0B,WAA1B,EAAuC,EAAvC,CAAjB,EAA6D,CAAC,QAAD,EAAW,QAAX,CAA7D;QAF4B,CAAlC,EAGH,CAACP,KAAI,CAACK,OAAL,CAAaC,QAAd,CAHG;MAGqB,CAL8B;IAA1D;;EAsBA;EAtCA;;;;;;;;;WAGA,UAAkBE,QAAlB,EAAiEC,YAAjE,EAA6G;MAC5G,IAAMC,MAAM,GAAG,KAAKC,aAAL,CAAmBC,QAAnB,CAA4BC,IAA5B,CAAiCJ,YAAY,CAACK,IAAb,EAAjC,CAAf;;MACAJ,MAAM,CAACK,YAAP,CAAoBP,QAApB;;MACAC,YAAY,CAACI,IAAb,CAAkBH,MAAlB;MACA,OAAOA,MAAP;IACA;;;;;;WAoBD,UAA4BM,SAA5B,EAA6D;MAA7D;;MACCC,iBAAMC,iBAAN,CAAuBC,IAAvB,CAAuB,IAAvB,EAAwBH,SAAxB;;MACAA,SAAS,CAACX,OAAV,GAAoB,IAAIZ,YAAJ,CACnBD,QAAQ,CAACM,GAAT,CAAa,EAAb,CADmB,EAEnB;QAAM,uBAAgB,CAACC,IAAjB,CAAsBC,KAAI,CAACC,KAA3B,EAAkC;UACvCC,QAAQ,EAAE,UAD6B;UAEvCC,SAAS,EAAER,MAAM,CAACS,SAAP,CAAiBY,SAAS,CAACX,OAAV,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,WAA/B,EAA4C,EAA5C,CAAjB,EAAkE,CAAC,QAAD,EAAW,QAAX,CAAlE;QAF4B,CAAlC,EAGH,CAACP,KAAI,CAACK,OAAL,CAAaC,QAAd,EAAwBU,SAAS,CAACX,OAAV,CAAkBC,QAA1C,CAHG;MAGiD,CALpC,CAApB;IAOA;;EAbDT;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CN,gBAAgB,CAAC6B,UAAjB,CAA4BC,MAA5B,CAAmC,CAACC,YAAY,CAACC,SAAd,CAAnC;EAA1C;EAaD;AAAC,CA7CD,CAAkChC,gBAAlC;;SAAa+B","names":["BaseColumnSeries","Template","ListTemplate","RoundedRectangle","$utils","__extends","Object","new","_new","_this","_root","position","themeTags","mergeTags","columns","template","get","dataItem","listTemplate","column","mainContainer","children","push","make","_setDataItem","axisRange","_super","_processAxisRange","call","classNames","concat","ColumnSeries","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/series/ColumnSeries.ts"],"sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}