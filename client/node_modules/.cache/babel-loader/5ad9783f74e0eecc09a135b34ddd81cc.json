{"ast":null,"code":"/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\n\n/**\r\n * @ignore\r\n */\nvar Matrix =\n/** @class */\nfunction () {\n  function Matrix(a, b, c, d, tx, ty) {\n    if (a === void 0) {\n      a = 1;\n    }\n\n    if (b === void 0) {\n      b = 0;\n    }\n\n    if (c === void 0) {\n      c = 0;\n    }\n\n    if (d === void 0) {\n      d = 1;\n    }\n\n    if (tx === void 0) {\n      tx = 0;\n    }\n\n    if (ty === void 0) {\n      ty = 0;\n    }\n\n    Object.defineProperty(this, \"a\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"b\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"c\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"d\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n  }\n  /**\r\n   * Sets the matrix based on all the available properties\r\n   */\n\n\n  Object.defineProperty(Matrix.prototype, \"setTransform\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, pivotX, pivotY, rotation, scale) {\n      if (scale === void 0) {\n        scale = 1;\n      }\n\n      this.a = Math.cos(rotation) * scale;\n      this.b = Math.sin(rotation) * scale;\n      this.c = -Math.sin(rotation) * scale;\n      this.d = Math.cos(rotation) * scale;\n      this.tx = x - (pivotX * this.a + pivotY * this.c);\n      this.ty = y - (pivotX * this.b + pivotY * this.d);\n    }\n  });\n  /**\r\n   * Get a new position with the current transformation applied.\r\n   * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n   */\n\n  Object.defineProperty(Matrix.prototype, \"apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (origin) {\n      return {\n        x: this.a * origin.x + this.c * origin.y + this.tx,\n        y: this.b * origin.x + this.d * origin.y + this.ty\n      };\n    }\n  });\n  /**\r\n   * Get a new position with the inverse of the current transformation applied.\r\n   * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n   */\n\n  Object.defineProperty(Matrix.prototype, \"applyInverse\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (origin) {\n      var id = 1 / (this.a * this.d + this.c * -this.b);\n      return {\n        x: this.d * id * origin.x + -this.c * id * origin.y + (this.ty * this.c - this.tx * this.d) * id,\n        y: this.a * id * origin.y + -this.b * id * origin.x + (-this.ty * this.a + this.tx * this.b) * id\n      };\n    }\n  });\n  /**\r\n   * Appends the given Matrix to this Matrix.\r\n   */\n\n  Object.defineProperty(Matrix.prototype, \"append\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      var a1 = this.a;\n      var b1 = this.b;\n      var c1 = this.c;\n      var d1 = this.d;\n      this.a = matrix.a * a1 + matrix.b * c1;\n      this.b = matrix.a * b1 + matrix.b * d1;\n      this.c = matrix.c * a1 + matrix.d * c1;\n      this.d = matrix.c * b1 + matrix.d * d1;\n      this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n      this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    }\n  });\n  /**\r\n   * Prepends the given Matrix to this Matrix.\r\n   */\n\n  Object.defineProperty(Matrix.prototype, \"prepend\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      var tx1 = this.tx;\n\n      if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n        var a1 = this.a;\n        var c1 = this.c;\n        this.a = a1 * matrix.a + this.b * matrix.c;\n        this.b = a1 * matrix.b + this.b * matrix.d;\n        this.c = c1 * matrix.a + this.d * matrix.c;\n        this.d = c1 * matrix.b + this.d * matrix.d;\n      }\n\n      this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n      this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n    }\n  });\n  /**\r\n   * Copies the other matrix's properties into this matrix\r\n   */\n\n  Object.defineProperty(Matrix.prototype, \"copyFrom\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      this.a = matrix.a;\n      this.b = matrix.b;\n      this.c = matrix.c;\n      this.d = matrix.d;\n      this.tx = matrix.tx;\n      this.ty = matrix.ty;\n    }\n  });\n  return Matrix;\n}();\n\nexport { Matrix };","map":{"version":3,"mappings":"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","names":["a","b","c","d","tx","ty","Object","x","y","pivotX","pivotY","rotation","scale","Math","cos","sin","origin","id","matrix","a1","b1","c1","d1","tx1"],"sourceRoot":"","sources":["../../../../../src/.internal/core/util/Matrix.ts"],"sourcesContent":["/**\n * Modified from Pixi:\n *\n * The MIT License\n *\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport type { IPoint } from \"./IPoint\";\n\n/**\n * @ignore\n */\nexport class Matrix {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic tx: number;\n\tpublic ty: number;\n\n\tconstructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Sets the matrix based on all the available properties\n\t */\n\tsetTransform(x: number, y: number, pivotX: number, pivotY: number, rotation: number, scale: number = 1): void {\n\t\tthis.a = Math.cos(rotation) * scale;\n\t\tthis.b = Math.sin(rotation) * scale;\n\t\tthis.c = -Math.sin(rotation) * scale;\n\t\tthis.d = Math.cos(rotation) * scale;\n\t\tthis.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n\t\tthis.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\t}\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t */\n\tapply(origin: IPoint): IPoint {\n\t\treturn {\n\t\t\tx: (this.a * origin.x) + (this.c * origin.y) + this.tx,\n\t\t\ty: (this.b * origin.x) + (this.d * origin.y) + this.ty\n\t\t};\n\t}\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t */\n\tapplyInverse(origin: IPoint): IPoint {\n\t\tconst id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n\t\treturn {\n\t\t\tx: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\n\t\t\ty: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\n\t\t};\n\t}\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t */\n\tappend(matrix: Matrix): void {\n\t\tconst a1 = this.a;\n\t\tconst b1 = this.b;\n\t\tconst c1 = this.c;\n\t\tconst d1 = this.d;\n\t\tthis.a = (matrix.a * a1) + (matrix.b * c1);\n\t\tthis.b = (matrix.a * b1) + (matrix.b * d1);\n\t\tthis.c = (matrix.c * a1) + (matrix.d * c1);\n\t\tthis.d = (matrix.c * b1) + (matrix.d * d1);\n\t\tthis.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n\t\tthis.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\t}\n\n\t/**\n\t * Prepends the given Matrix to this Matrix.\n\t */\n\tprepend(matrix: Matrix): void {\n\t\tconst tx1 = this.tx;\n\t\tif (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n\t\t\tconst a1 = this.a;\n\t\t\tconst c1 = this.c;\n\t\t\tthis.a = (a1 * matrix.a) + (this.b * matrix.c);\n\t\t\tthis.b = (a1 * matrix.b) + (this.b * matrix.d);\n\t\t\tthis.c = (c1 * matrix.a) + (this.d * matrix.c);\n\t\t\tthis.d = (c1 * matrix.b) + (this.d * matrix.d);\n\t\t}\n\t\tthis.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n\t\tthis.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\t}\n\n\t/**\n\t * Copies the other matrix's properties into this matrix\n\t */\n\tcopyFrom(matrix: Matrix): void {\n\t\tthis.a = matrix.a;\n\t\tthis.b = matrix.b;\n\t\tthis.c = matrix.c;\n\t\tthis.d = matrix.d;\n\t\tthis.tx = matrix.tx;\n\t\tthis.ty = matrix.ty;\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}