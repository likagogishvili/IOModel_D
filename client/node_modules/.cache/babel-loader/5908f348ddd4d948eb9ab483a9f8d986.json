{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { XYSeries } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\n\nvar LineSeries =\n/** @class */\nfunction (_super) {\n  __extends(LineSeries, _super);\n\n  function LineSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_endIndex\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: line()\n    });\n    Object.defineProperty(_this, \"_fillGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: area()\n    });\n    Object.defineProperty(_this, \"_legendStroke\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_legendFill\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A [[TemplateList]] of all line segments in series.\r\n     *\r\n     * `strokes.template` can be used to set default settings for all line\r\n     * segments, or to change on existing ones.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n\n    Object.defineProperty(_this, \"strokes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n        }, [_this.strokes.template]);\n      })\n    });\n    /**\r\n     * A [[TemplateList]] of all segment fills in series.\r\n     *\r\n     * `fills.template` can be used to set default settings for all segment\r\n     * fills, or to change on existing ones.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n\n    Object.defineProperty(_this, \"fills\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n        }, [_this.fills.template]);\n      })\n    }); // custom set from data\n\n    Object.defineProperty(_this, \"_fillTemplate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeTemplate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_previousPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [0, 0, 0, 0]\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LineSeries.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._fillGenerator.y0(function (p) {\n        return p[3];\n      });\n\n      this._fillGenerator.x0(function (p) {\n        return p[2];\n      });\n\n      this._fillGenerator.y1(function (p) {\n        return p[1];\n      });\n\n      this._fillGenerator.x1(function (p) {\n        return p[0];\n      });\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(LineSeries.prototype, \"makeStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (strokes) {\n      var stroke = this.mainContainer.children.push(strokes.make());\n      strokes.push(stroke);\n      return stroke;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(LineSeries.prototype, \"makeFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fills) {\n      var fill = this.mainContainer.children.push(fills.make());\n      fills.push(fill);\n      return fill;\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._strokeTemplate = undefined;\n      this._fillTemplate = undefined;\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n\n      if (this.isDirty(\"stroke\")) {\n        var stroke = this.get(\"stroke\");\n        this.strokes.template.set(\"stroke\", stroke);\n        var legendStroke = this._legendStroke;\n\n        if (legendStroke) {\n          legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\n        }\n      }\n\n      if (this.isDirty(\"fill\")) {\n        var fill = this.get(\"fill\");\n        this.fills.template.set(\"fill\", fill);\n        var legendFill = this._legendFill;\n\n        if (legendFill) {\n          legendFill.states.lookup(\"default\").set(\"fill\", fill);\n        }\n      }\n\n      if (this.isDirty(\"curveFactory\")) {\n        var curveFactory = this.get(\"curveFactory\");\n\n        if (curveFactory) {\n          this._strokeGenerator.curve(curveFactory);\n\n          this._fillGenerator.curve(curveFactory);\n        }\n      }\n\n      if (xAxis.inited && yAxis.inited) {\n        if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n          this.fills.each(function (fill) {\n            fill.setPrivate(\"visible\", false);\n          });\n          this.strokes.each(function (fill) {\n            fill.setPrivate(\"visible\", false);\n          });\n          this.axisRanges.each(function (axisRange) {\n            var fills = axisRange.fills;\n\n            if (fills) {\n              fills.each(function (fill) {\n                fill.setPrivate(\"visible\", false);\n              });\n            }\n\n            var strokes = axisRange.strokes;\n\n            if (strokes) {\n              strokes.each(function (stroke) {\n                stroke.setPrivate(\"visible\", false);\n              });\n            }\n          });\n          var startIndex = this.startIndex();\n          var strokeTemplateField = this.strokes.template.get(\"templateField\");\n          var fillTemplateField = this.fills.template.get(\"templateField\");\n          var strokeTemplateFound = true;\n          var fillTemplateFound = true;\n\n          if (strokeTemplateField) {\n            strokeTemplateFound = false;\n          }\n\n          if (fillTemplateField) {\n            fillTemplateFound = false;\n          }\n\n          var _loop_1 = function (i) {\n            var dataItem = this_1.dataItems[i];\n            var hasValues = true;\n            var dataContext = dataItem.dataContext;\n\n            if (strokeTemplateField) {\n              if (dataContext[strokeTemplateField]) {\n                strokeTemplateFound = true;\n              }\n            }\n\n            if (fillTemplateField) {\n              if (dataContext[fillTemplateField]) {\n                fillTemplateFound = true;\n              }\n            }\n\n            $array.each(this_1._valueFields, function (field) {\n              if (!$type.isNumber(dataItem.get(field))) {\n                hasValues = false;\n              }\n            });\n\n            if (hasValues && strokeTemplateFound && fillTemplateFound) {\n              startIndex = i;\n              return \"break\";\n            }\n          };\n\n          var this_1 = this;\n\n          for (var i = startIndex - 1; i >= 0; i--) {\n            var state_1 = _loop_1(i);\n\n            if (state_1 === \"break\") break;\n          }\n\n          var len = this.dataItems.length;\n          var endIndex = this.endIndex();\n\n          if (endIndex < len) {\n            endIndex++;\n\n            var _loop_2 = function (i) {\n              var dataItem = this_2.dataItems[i];\n              var hasValues = true;\n              $array.each(this_2._valueFields, function (field) {\n                if (!$type.isNumber(dataItem.get(field))) {\n                  hasValues = false;\n                }\n              });\n\n              if (hasValues) {\n                endIndex = i + 1;\n                return \"break\";\n              }\n            };\n\n            var this_2 = this;\n\n            for (var i = endIndex; i < len; i++) {\n              var state_2 = _loop_2(i);\n\n              if (state_2 === \"break\") break;\n            }\n          }\n\n          if (startIndex > 0) {\n            startIndex--;\n          }\n\n          this._endIndex = endIndex;\n\n          this._clearGraphics();\n\n          this._startSegment(0, startIndex);\n        }\n      } else {\n        this._skipped = true;\n      }\n\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_clearGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.strokes.clear();\n      this.fills.clear();\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_startSegment\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (segmentIndex, dataItemIndex) {\n      var _this = this;\n\n      var endIndex = this._endIndex;\n      var currentEndIndex = endIndex;\n      var autoGapCount = this.get(\"autoGapCount\");\n      var connect = this.get(\"connect\");\n      var fill = this.makeFill(this.fills);\n      var fillTemplate = this._fillTemplate;\n      var originalTemplate = this.fills.template;\n\n      if (fillTemplate && fillTemplate != originalTemplate) {\n        fill.template = fillTemplate;\n      }\n\n      fill.setPrivate(\"visible\", true);\n      var stroke = this.makeStroke(this.strokes);\n      var strokeTemplate = this._strokeTemplate;\n\n      if (strokeTemplate && strokeTemplate != this.strokes.template) {\n        stroke.template = strokeTemplate;\n      }\n\n      stroke.setPrivate(\"visible\", true);\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var vcx = this.get(\"vcx\", 1);\n      var vcy = this.get(\"vcy\", 1);\n      var xField = this._xField;\n      var yField = this._yField;\n      var xOpenField = this._xOpenField;\n      var yOpenField = this._yOpenField;\n      var xOpenFieldValue = this.get(\"openValueXField\");\n      var yOpenFieldValue = this.get(\"openValueYField\");\n\n      if (!xOpenFieldValue) {\n        xOpenField = this._xField;\n      }\n\n      if (!yOpenFieldValue) {\n        yOpenField = this._yField;\n      }\n\n      var stacked = this.get(\"stacked\");\n      var basePosX = xAxis.basePosition();\n      var basePosY = yAxis.basePosition();\n      var baseField;\n\n      if (baseAxis === yAxis) {\n        baseField = this._yField;\n      } else {\n        baseField = this._xField;\n      }\n\n      var segments = [];\n      var points = [];\n      segments.push(points);\n      var strokeTemplateField = this.strokes.template.get(\"templateField\");\n      var fillTemplateField = this.fills.template.get(\"templateField\");\n      var locationX = this.get(\"locationX\", 0.5);\n      var locationY = this.get(\"locationY\", 0.5);\n      var openLocationX = this.get(\"openLocationX\", locationX);\n      var openLocationY = this.get(\"openLocationY\", locationY);\n      var minDistance = this.get(\"minDistance\", 0);\n      var i;\n      var fillVisible = this.fills.template.get(\"visible\");\n\n      if (this.axisRanges.length > 0) {\n        fillVisible = true;\n      }\n\n      var getOpen = false;\n\n      if (stacked || xOpenFieldValue || yOpenFieldValue) {\n        getOpen = true;\n      }\n\n      var o = {\n        points: points,\n        segments: segments,\n        stacked: stacked,\n        getOpen: getOpen,\n        basePosX: basePosX,\n        basePosY: basePosY,\n        fillVisible: fillVisible,\n        xField: xField,\n        yField: yField,\n        xOpenField: xOpenField,\n        yOpenField: yOpenField,\n        vcx: vcx,\n        vcy: vcy,\n        baseAxis: baseAxis,\n        xAxis: xAxis,\n        yAxis: yAxis,\n        locationX: locationX,\n        locationY: locationY,\n        openLocationX: openLocationX,\n        openLocationY: openLocationY,\n        minDistance: minDistance\n      };\n\n      for (i = dataItemIndex; i < currentEndIndex; i++) {\n        var dataItem = this._dataItems[i];\n        var valueX = dataItem.get(xField);\n        var valueY = dataItem.get(yField);\n\n        if (valueX == null || valueY == null) {\n          if (!connect) {\n            points = [];\n            segments.push(points);\n            o.points = points;\n          }\n        } else {\n          this._getPoints(dataItem, o);\n        }\n\n        if (strokeTemplateField) {\n          var strokeTemplate_1 = dataItem.dataContext[strokeTemplateField];\n\n          if (strokeTemplate_1) {\n            if (!(strokeTemplate_1 instanceof Template)) {\n              strokeTemplate_1 = Template.new(strokeTemplate_1);\n            }\n\n            this._strokeTemplate = strokeTemplate_1;\n\n            if (i > dataItemIndex) {\n              currentEndIndex = i;\n              break;\n            } else {\n              stroke.template = strokeTemplate_1;\n            }\n          }\n        }\n\n        if (fillTemplateField) {\n          var fillTemplate_1 = dataItem.dataContext[fillTemplateField];\n\n          if (fillTemplate_1) {\n            if (!(fillTemplate_1 instanceof Template)) {\n              fillTemplate_1 = Template.new(fillTemplate_1);\n            }\n\n            this._fillTemplate = fillTemplate_1;\n\n            if (i > dataItemIndex) {\n              currentEndIndex = i;\n              break;\n            } else {\n              fill.template = fillTemplate_1;\n            }\n          }\n        }\n\n        if (!connect) {\n          var nextItem = this.dataItems[i + 1];\n\n          if (nextItem) {\n            if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n              points = [];\n              segments.push(points);\n              o.points = points;\n            }\n          }\n        }\n      }\n\n      fill.setRaw(\"userData\", [dataItemIndex, i]);\n      stroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n      if (i === endIndex) {\n        this._endLine(points, segments[0][0]);\n      }\n\n      if (stroke) {\n        this._drawStroke(stroke, segments);\n      }\n\n      if (fill) {\n        this._drawFill(fill, segments);\n      }\n\n      this.axisRanges.each(function (axisRange) {\n        var container = axisRange.container;\n        var fills = axisRange.fills;\n\n        var fill = _this.makeFill(fills);\n\n        if (container) {\n          container.children.push(fill);\n        }\n\n        fill.setPrivate(\"visible\", true);\n\n        _this._drawFill(fill, segments);\n\n        var strokes = axisRange.strokes;\n\n        var stroke = _this.makeStroke(strokes);\n\n        if (container) {\n          container.children.push(stroke);\n        }\n\n        stroke.setPrivate(\"visible\", true);\n\n        _this._drawStroke(stroke, segments);\n\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\n      });\n\n      if (currentEndIndex < endIndex) {\n        this._startSegment(segmentIndex + 1, currentEndIndex);\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_getPoints\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, o) {\n      var points = o.points;\n      var itemLocationX = dataItem.get(\"locationX\", o.locationX);\n      var itemLocationY = dataItem.get(\"locationY\", o.locationY);\n      var xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n      var yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n      if (this._shouldInclude(xPos)) {\n        var iPoint = this.getPoint(xPos, yPos);\n        var point = [iPoint.x, iPoint.y];\n        iPoint.x += this._x;\n        iPoint.y += this._y;\n        dataItem.set(\"point\", iPoint);\n\n        if (o.fillVisible) {\n          var xPos0 = xPos;\n          var yPos0 = yPos;\n\n          if (o.baseAxis === o.xAxis) {\n            yPos0 = o.basePosY;\n          } else if (o.baseAxis === o.yAxis) {\n            xPos0 = o.basePosX;\n          }\n\n          if (o.getOpen) {\n            var valueX = dataItem.get(o.xOpenField);\n            var valueY = dataItem.get(o.yOpenField);\n\n            if (valueX != null && valueY != null) {\n              var itemLocationX_1 = dataItem.get(\"openLocationX\", o.openLocationX);\n              var itemLocationY_1 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n              if (o.stacked) {\n                var stackToItemX = dataItem.get(\"stackToItemX\");\n                var stackToItemY = dataItem.get(\"stackToItemY\");\n\n                if (stackToItemX) {\n                  xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX_1, stackToItemX.component.get(\"vcx\"));\n\n                  if ($type.isNaN(xPos0)) {\n                    xPos0 = o.basePosX;\n                  }\n                } else {\n                  if (o.yAxis === o.baseAxis) {\n                    xPos0 = o.basePosX;\n                  } else {\n                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\n                  }\n                }\n\n                if (stackToItemY) {\n                  yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY_1, stackToItemY.component.get(\"vcy\"));\n\n                  if ($type.isNaN(yPos0)) {\n                    yPos0 = o.basePosY;\n                  }\n                } else {\n                  if (o.xAxis === o.baseAxis) {\n                    yPos0 = o.basePosY;\n                  } else {\n                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\n                  }\n                }\n              } else {\n                xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\n                yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\n              }\n            }\n          }\n\n          var closeIPoint = this.getPoint(xPos0, yPos0);\n          point[2] = closeIPoint.x;\n          point[3] = closeIPoint.y;\n        }\n\n        if (o.minDistance > 0) {\n          var p0 = point[0];\n          var p1 = point[1];\n          var p2 = point[2];\n          var p3 = point[3];\n          var prev = this._previousPoint;\n          var pp0 = prev[0];\n          var pp1 = prev[1];\n          var pp2 = prev[2];\n          var pp3 = prev[3];\n\n          if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance) {\n            points.push(point);\n            this._previousPoint = point;\n          }\n        } else {\n          points.push(point);\n        }\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_endLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_points, _firstPoint) {}\n  });\n  Object.defineProperty(LineSeries.prototype, \"_drawStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, segments) {\n      var _this = this;\n\n      if (graphics.get(\"visible\")) {\n        graphics.set(\"draw\", function (display) {\n          $array.each(segments, function (segment) {\n            _this._strokeGenerator.context(display);\n\n            _this._strokeGenerator(segment);\n          });\n        });\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_drawFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, segments) {\n      var _this = this;\n\n      if (graphics.get(\"visible\")) {\n        graphics.set(\"draw\", function (display) {\n          $array.each(segments, function (segment) {\n            _this._fillGenerator.context(display);\n\n            _this._fillGenerator(segment);\n          });\n        });\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var _this = this;\n\n      _super.prototype._processAxisRange.call(this, axisRange);\n\n      axisRange.fills = new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n        }, [_this.fills.template, axisRange.fills.template]);\n      });\n      axisRange.strokes = new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n        }, [_this.strokes.template, axisRange.strokes.template]);\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(LineSeries.prototype, \"createLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      var legendDataItem = this.get(\"legendDataItem\");\n\n      if (legendDataItem) {\n        var marker = legendDataItem.get(\"marker\");\n        var markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n        if (markerRectangle) {\n          markerRectangle.setPrivate(\"visible\", false);\n        }\n\n        marker.set(\"background\", Rectangle.new(marker._root, {\n          fillOpacity: 0,\n          fill: color(0x000000)\n        }));\n        var legendStroke = marker.children.push(Graphics._new(marker._root, {\n          themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"],\n          interactive: false\n        }, [this.strokes.template]));\n        this._legendStroke = legendStroke;\n        var legendFill = marker.children.push(Graphics._new(marker._root, {\n          themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n        }, [this.fills.template]));\n        this._legendFill = legendFill;\n\n        var disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n        legendStroke.states.create(\"disabled\", {\n          fill: disabledColor,\n          stroke: disabledColor\n        });\n        legendFill.states.create(\"disabled\", {\n          fill: disabledColor,\n          stroke: disabledColor\n        });\n\n        if (this.bullets.length > 0) {\n          var bulletFunction = this.bullets.getIndex(0);\n\n          if (bulletFunction) {\n            var bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\n            if (bullet) {\n              var sprite = bullet.get(\"sprite\");\n\n              if (sprite instanceof Graphics) {\n                sprite.states.create(\"disabled\", {\n                  fill: disabledColor,\n                  stroke: disabledColor\n                });\n              }\n\n              if (sprite) {\n                sprite.set(\"tooltipText\", undefined);\n                marker.children.push(sprite);\n                sprite.setAll({\n                  x: marker.width() / 2,\n                  y: marker.height() / 2\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(LineSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"LineSeries\"\n  });\n  Object.defineProperty(LineSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: XYSeries.classNames.concat([LineSeries.className])\n  });\n  return LineSeries;\n}(XYSeries);\n\nexport { LineSeries };","map":{"version":3,"mappings":"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","names":["XYSeries","Graphics","line","area","Template","ListTemplate","color","DataItem","Rectangle","$type","$array","$utils","__extends","Object","new","_new","_this","_root","themeTags","mergeTags","strokes","template","get","fills","_fillGenerator","y0","p","x0","y1","x1","_super","_afterNew","call","stroke","mainContainer","children","push","make","fill","_strokeTemplate","undefined","_fillTemplate","xAxis","yAxis","isDirty","set","legendStroke","_legendStroke","states","lookup","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","each","setPrivate","axisRanges","axisRange","startIndex","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","i","dataItem","this_1","dataItems","hasValues","dataContext","_valueFields","field","isNumber","len","length","endIndex","this_2","_endIndex","_clearGraphics","_startSegment","_skipped","_updateChildren","clear","segmentIndex","dataItemIndex","currentEndIndex","autoGapCount","connect","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","baseAxis","vcx","vcy","xField","_xField","yField","_yField","xOpenField","_xOpenField","yOpenField","_yOpenField","xOpenFieldValue","yOpenFieldValue","stacked","basePosX","basePosition","basePosY","baseField","segments","points","locationX","locationY","openLocationX","openLocationY","minDistance","fillVisible","getOpen","o","_dataItems","valueX","valueY","_getPoints","strokeTemplate_1","fillTemplate_1","nextItem","shouldGap","setRaw","_endLine","_drawStroke","_drawFill","container","itemLocationX","itemLocationY","xPos","getDataItemPositionX","yPos","getDataItemPositionY","_shouldInclude","iPoint","getPoint","point","x","y","_x","_y","xPos0","yPos0","itemLocationX_1","itemLocationY_1","stackToItemX","stackToItemY","component","isNaN","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","Math","hypot","_points","_firstPoint","graphics","display","segment","context","_processAxisRange","_dataItem","legendDataItem","marker","markerRectangle","fillOpacity","interactive","disabledColor","interfaceColors","create","bullets","bulletFunction","getIndex","bullet","sprite","setAll","width","height","classNames","concat","LineSeries","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/series/LineSeries.ts"],"sourcesContent":["import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}