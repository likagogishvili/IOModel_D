{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\n\nvar AxisRenderer =\n/** @class */\nfunction (_super) {\n  __extends(AxisRenderer, _super);\n\n  function AxisRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // save for quick access\n\n\n    Object.defineProperty(_this, \"_axisLength\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(_this, \"_start\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_end\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_inversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_minSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * Chart the renderer is used in.\r\n     */\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_lc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_ls\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_thumbDownPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downStart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A list of ticks in the axis.\r\n     *\r\n     * `ticks.template` can be used to configure ticks.\r\n     *\r\n     * @default new ListTemplate<AxisTick>\r\n     */\n\n    Object.defineProperty(_this, \"ticks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return AxisTick._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.ticks.template]);\n      })\n    });\n    /**\r\n     * A list of grid elements in the axis.\r\n     *\r\n     * `grid.template` can be used to configure grid.\r\n     *\r\n     * @default new ListTemplate<Grid>\r\n     */\n\n    Object.defineProperty(_this, \"grid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Grid._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.grid.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.grid.template]);\n      })\n    });\n    /**\r\n     * A list of fills in the axis.\r\n     *\r\n     * `axisFills.template` can be used to configure axis fills.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n\n    Object.defineProperty(_this, \"axisFills\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), _this.get(\"themeTags\", []))\n        }, [_this.axisFills.template]);\n      })\n    });\n    /**\r\n     * A list of labels in the axis.\r\n     *\r\n     * `labels.template` can be used to configure axis labels.\r\n     *\r\n     * @default new ListTemplate<AxisLabel>\r\n     */\n\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return AxisLabel._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * An [[Axis]] renderer is for.\r\n     */\n\n    Object.defineProperty(_this, \"axis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(AxisRenderer.prototype, \"makeTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var tick = this.ticks.make();\n\n      tick._setDataItem(dataItem);\n\n      dataItem.setRaw(\"tick\", tick);\n      tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n      this.axis.labelsContainer.children.push(tick);\n      this.ticks.push(tick);\n      return tick;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"makeGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var grid = this.grid.make();\n\n      grid._setDataItem(dataItem);\n\n      dataItem.setRaw(\"grid\", grid);\n      grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n      this.axis.gridContainer.children.push(grid);\n      this.grid.push(grid);\n      return grid;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"makeAxisFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var axisFill = this.axisFills.make();\n\n      axisFill._setDataItem(dataItem);\n\n      axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n      this.axis.gridContainer.children.push(axisFill);\n      dataItem.setRaw(\"axisFill\", axisFill);\n      this.axisFills.push(axisFill);\n      return axisFill;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"makeLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var label = this.labels.make();\n      label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n      this.axis.labelsContainer.children.moveValue(label, 0);\n\n      label._setDataItem(dataItem);\n\n      dataItem.setRaw(\"label\", label);\n      this.labels.push(label);\n      return label;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"gridCount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.axisLength() / this.get(\"minGridDistance\", 50);\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._afterNew.call(this);\n\n      this.set(\"isMeasured\", false);\n      var thumb = this.thumb;\n\n      if (thumb) {\n        this._disposers.push(thumb.events.on(\"pointerdown\", function (event) {\n          _this._handleThumbDown(event.originalEvent);\n        }));\n\n        this._disposers.push(thumb.events.on(\"globalpointerup\", function (event) {\n          _this._handleThumbUp(event.originalEvent);\n        }));\n\n        this._disposers.push(thumb.events.on(\"globalpointermove\", function (event) {\n          _this._handleThumbMove(event.originalEvent);\n        }));\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this.isDirty(\"pan\")) {\n        var thumb = this.thumb;\n\n        if (thumb) {\n          var labelsContainer = this.axis.labelsContainer;\n          var pan = this.get(\"pan\");\n\n          if (pan == \"zoom\") {\n            labelsContainer.children.push(thumb);\n          } else if (pan == \"none\") {\n            labelsContainer.children.removeValue(thumb);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      }));\n      var axis = this.axis;\n      this._downStart = axis.get(\"start\");\n      this._downEnd = axis.get(\"end\");\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_event) {\n      this._thumbDownPoint = undefined;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var downPoint = this._thumbDownPoint;\n\n      if (downPoint) {\n        var point = this.toLocal(this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        }));\n        var downStart = this._downStart;\n        var downEnd = this._downEnd;\n        var extra = this._getPan(point, downPoint) * Math.min(1, downEnd - downStart) / 2;\n        this.axis.setAll({\n          start: downStart - extra,\n          end: downEnd + extra\n        });\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_getPan\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_point1, _point2) {\n      return 0;\n    }\n  });\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"positionToCoordinate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (this._inversed) {\n        return (this._end - position) * this._axisLength;\n      } else {\n        return (position - this._start) * this._axisLength;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_tooltip) {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.markDirty();\n      this._clear = true;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var start = this._start || 0;\n      var end = this._end || 1;\n      position = position * (end - start);\n\n      if (!this.get(\"inversed\")) {\n        position = start + position;\n      } else {\n        position = end - position;\n      }\n\n      return position;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRenderer.prototype, \"fixPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (this.get(\"inversed\")) {\n        return 1 - position;\n      }\n\n      return position;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updateLC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"toggleVisibility\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (sprite, position, minPosition, maxPosition) {\n      var axis = this.axis;\n      var start = axis.get(\"start\", 0);\n      var end = axis.get(\"end\", 1);\n      var updatedStart = start + (end - start) * (minPosition - 0.0001);\n      var updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n      if (position < updatedStart || position > updatedEnd) {\n        sprite.setPrivate(\"visible\", false);\n      } else {\n        sprite.setPrivate(\"visible\", true);\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_positionTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, point) {\n      var chart = this.chart;\n\n      if (chart) {\n        if (chart.inPlot(point)) {\n          tooltip.set(\"pointTo\", this._display.toGlobal(point));\n        } else {\n          tooltip.hide();\n        }\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"AxisRenderer\"\n  });\n  Object.defineProperty(AxisRenderer, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([AxisRenderer.className])\n  });\n  return AxisRenderer;\n}(Graphics);\n\nexport { AxisRenderer };","map":{"version":3,"mappings":"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","names":["Graphics","Template","ListTemplate","AxisTick","Grid","AxisLabel","$utils","__extends","Object","new","_new","_this","_root","themeTags","mergeTags","ticks","template","get","grid","axisFills","labels","dataItem","tick","make","_setDataItem","setRaw","set","axis","labelsContainer","children","push","gridContainer","axisFill","label","moveValue","axisLength","_super","_afterNew","call","thumb","_disposers","events","on","event","_handleThumbDown","originalEvent","_handleThumbUp","_handleThumbMove","_changed","isDirty","pan","removeValue","_thumbDownPoint","toLocal","documentPointToRoot","x","clientX","y","clientY","_downStart","_downEnd","_event","undefined","downPoint","point","downStart","downEnd","extra","_getPan","Math","min","setAll","start","end","_point1","_point2","position","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","sprite","minPosition","maxPosition","updatedStart","updatedEnd","setPrivate","tooltip","chart","inPlot","_display","toGlobal","hide","classNames","concat","AxisRenderer","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/axes/AxisRenderer.ts"],"sourcesContent":["import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n"]},"metadata":{},"sourceType":"module"}