{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Candlestick } from \"./Candlestick\";\n\nvar OHLC =\n/** @class */\nfunction (_super) {\n  __extends(OHLC, _super);\n\n  function OHLC() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(OHLC.prototype, \"_draw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var display = this._display;\n      display.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n      display.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n      var w = this.width();\n      var h = this.height();\n\n      if (this.get(\"orientation\") == \"vertical\") {\n        var lY = h;\n        var hY = 0;\n        display.moveTo(0, lY);\n        display.lineTo(w / 2, lY);\n        display.moveTo(w / 2, hY);\n        display.lineTo(w, hY);\n      } else {\n        var lX = 0;\n        var hX = w;\n        display.moveTo(lX, 0);\n        display.lineTo(lX, h / 2);\n        display.moveTo(hX, h / 2);\n        display.lineTo(hX, h);\n      }\n    }\n  });\n  Object.defineProperty(OHLC, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"OHLC\"\n  });\n  Object.defineProperty(OHLC, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Candlestick.classNames.concat([OHLC.className])\n  });\n  return OHLC;\n}(Candlestick);\n\nexport { OHLC };","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAAuE,eAAvE;;AASA;AAAA;AAAA;EAA0BC;;EAA1B;;EAuCC;;;;;;WA/BA;MAEC,IAAMC,OAAO,GAAG,KAAKC,QAArB;MAEAD,OAAO,CAACE,MAAR,CAAe,KAAKC,GAAL,CAAS,OAAT,EAAkB,CAAlB,CAAf,EAAqC,KAAKA,GAAL,CAAS,OAAT,EAAkB,CAAlB,CAArC;MACAH,OAAO,CAACI,MAAR,CAAe,KAAKD,GAAL,CAAS,QAAT,EAAmB,CAAnB,CAAf,EAAsC,KAAKA,GAAL,CAAS,QAAT,EAAmB,CAAnB,CAAtC;MAEA,IAAIE,CAAC,GAAG,KAAKC,KAAL,EAAR;MACA,IAAIC,CAAC,GAAG,KAAKC,MAAL,EAAR;;MAEA,IAAI,KAAKL,GAAL,CAAS,aAAT,KAA2B,UAA/B,EAA2C;QAE1C,IAAIM,EAAE,GAAGF,CAAT;QACA,IAAIG,EAAE,GAAG,CAAT;QACAV,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBO,EAAlB;QACAT,OAAO,CAACI,MAAR,CAAeC,CAAC,GAAG,CAAnB,EAAsBI,EAAtB;QAEAT,OAAO,CAACE,MAAR,CAAeG,CAAC,GAAG,CAAnB,EAAsBK,EAAtB;QACAV,OAAO,CAACI,MAAR,CAAeC,CAAf,EAAkBK,EAAlB;MACA,CATD,MAUK;QACJ,IAAIC,EAAE,GAAG,CAAT;QACA,IAAIC,EAAE,GAAGP,CAAT;QAEAL,OAAO,CAACE,MAAR,CAAeS,EAAf,EAAmB,CAAnB;QACAX,OAAO,CAACI,MAAR,CAAeO,EAAf,EAAmBJ,CAAC,GAAG,CAAvB;QAEAP,OAAO,CAACE,MAAR,CAAeU,EAAf,EAAmBL,CAAC,GAAG,CAAvB;QACAP,OAAO,CAACI,MAAR,CAAeQ,EAAf,EAAmBL,CAAnB;MACA;IACD;;EAjCDM;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0Cf,WAAW,CAACgB,UAAZ,CAAuBC,MAAvB,CAA8B,CAACC,IAAI,CAACC,SAAN,CAA9B;EAA1C;EAiCD;AAAC,CAvCD,CAA0BnB,WAA1B;;SAAakB","names":["Candlestick","__extends","display","_display","moveTo","get","lineTo","w","width","h","height","lY","hY","lX","hX","Object","classNames","concat","OHLC","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/series/OHLC.ts"],"sourcesContent":["import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}