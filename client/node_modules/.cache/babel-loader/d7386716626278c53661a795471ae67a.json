{"ast":null,"code":"/**\r\n * Module that defines everything related to building bullets.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../../core/Container\";\nimport { registry } from \"../../core/Registry\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Bullet =\n/** @class */\nfunction (_super) {\n  __extends(Bullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Bullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Bullet\";\n    _this.isMeasured = false;\n    _this.tooltipX = 0;\n    _this.tooltipY = 0;\n    _this.layout = \"none\";\n    _this.applyOnClones = true;\n    _this.copyToLegendMarker = true;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(Bullet.prototype, \"locationX\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"locationX\");\n    },\n\n    /**\r\n     * Relative horizontal location within cell. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"locationX\", value)) {\n        var dataItem = this.dataItem;\n\n        if (dataItem && dataItem.component) {\n          dataItem.component.invalidate();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Bullet.prototype, \"locationY\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"locationY\");\n    },\n\n    /**\r\n     * Relative vertical location within cell. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"locationY\", value)) {\n        var dataItem = this.dataItem;\n\n        if (dataItem && dataItem.component) {\n          dataItem.component.invalidate();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Bullet.prototype, \"xField\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"xField\");\n    },\n\n    /**\r\n     * [xField description]\r\n     *\r\n     * @todo Description\r\n     * @param value  [description]\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"xField\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Bullet.prototype, \"yField\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"yField\");\n    },\n\n    /**\r\n     * [yField description]\r\n     *\r\n     * Description\r\n     * @param value  [description]\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"yField\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Bullet.prototype, \"isDynamic\", {\n    /**\r\n     * @return Redraw on data change?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"isDynamic\");\n    },\n\n    /**\r\n     * Indicates if the bullet is \"dynamic\".\r\n     *\r\n     * In most cases the bullets remain the same, even if the underlying data\r\n     * changes.\r\n     *\r\n     * However, in cases where bullet also displays a label, or its size depends\r\n     * on data, it also needs to be redrawn when the underlying data changes.\r\n     *\r\n     * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n     * time data changes. Regular bullets will be reused as they are.\r\n     *\r\n     * @default false\r\n     * @param value  Redraw on data change?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"isDynamic\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Bullet.prototype, \"copyToLegendMarker\", {\n    /**\r\n     * @return Redraw on data change?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"copyToLegendMarker\");\n    },\n\n    /**\r\n     * Indicates if the bullet should be copied to legend marker\r\n     *\r\n     * @default false\r\n     * @param value  Redraw on data change?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"copyToLegendMarker\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Bullet;\n}(Container);\n\nexport { Bullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Bullet\"] = Bullet;\n/**\r\n * Add default responsive rules\r\n */\n\n/**\r\n * Hide bullets\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.isXS,\n  state: function (target, stateId) {\n    if (target instanceof Bullet) {\n      var state = target.states.create(stateId);\n      state.properties.disabled = true;\n      return state;\n    }\n\n    return null;\n  }\n});","map":{"version":3,"mappings":"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","names":["Container","registry","defaultRules","ResponsiveBreakpoints","__extends","_super","_this","className","isMeasured","tooltipX","tooltipY","layout","applyOnClones","copyToLegendMarker","applyTheme","Object","Bullet","getPropertyValue","value","setPropertyValue","dataItem","component","invalidate","registeredClasses","push","relevant","isXS","state","target","stateId","states","create","properties","disabled"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/elements/Bullet.ts"],"sourcesContent":["/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}