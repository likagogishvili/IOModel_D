{"ast":null,"code":"/**\r\n * XY series module.\r\n */\nimport { __extends, __values } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $time from \"../../core/utils/Time\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $path from \"../../core/rendering/Path\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar XYSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(XYSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function XYSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"XYSeriesDataItem\";\n    _this.values.customValue = {};\n    _this.values.valueX = {\n      stack: 0\n    };\n    _this.values.valueY = {\n      stack: 0\n    };\n    _this.values.openValueX = {};\n    _this.values.openValueY = {};\n    _this.values.dateX = {};\n    _this.values.dateY = {};\n    _this.values.openDateX = {};\n    _this.values.openDateY = {};\n\n    _this.setLocation(\"dateX\", 0.5, 0);\n\n    _this.setLocation(\"dateY\", 0.5, 0);\n\n    _this.setLocation(\"categoryX\", 0.5, 0);\n\n    _this.setLocation(\"categoryY\", 0.5, 0);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueX.value;\n    },\n\n    /**\r\n     * Item's numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.customValue.value;\n    },\n\n    /**\r\n     * Item's custom numeric value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"customValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueY.value;\n    },\n\n    /**\r\n     * Item's numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateX\");\n    },\n\n    /**\r\n     * Item's date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateY\");\n    },\n\n    /**\r\n     * Item's date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryX;\n    },\n\n    /**\r\n     * Item's category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryY;\n    },\n\n    /**\r\n     * Item's category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueX.value;\n    },\n\n    /**\r\n     * Item's open numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueY.value;\n    },\n\n    /**\r\n     * Item's open numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateX\");\n    },\n\n    /**\r\n     * Item's open date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateY\");\n    },\n\n    /**\r\n     * Item's open date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryX;\n    },\n\n    /**\r\n     * Item's open category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryY;\n    },\n\n    /**\r\n     * Item's open category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Return smallest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n\n  XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\n    var _this = this; //if (this.visible) {  // dumped because of non smooth zooming\n\n\n    var min;\n\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n\n    $array.each(fields, function (field) {\n      var value;\n\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n\n      value += stackValue;\n\n      if (value < min || !$type.isNumber(min)) {\n        min = value;\n      }\n    });\n    return min; //}\n  };\n  /**\r\n   * Return biggest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n\n\n  XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\n    var _this = this; //if (this.visible) { // dumped because of non smooth zooming\n\n\n    var max;\n\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n\n    $array.each(fields, function (field) {\n      var value;\n\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n\n      value += stackValue;\n\n      if (value > max || !$type.isNumber(max)) {\n        max = value;\n      }\n    });\n    return max; //}\n  };\n\n  return XYSeriesDataItem;\n}(SeriesDataItem);\n\nexport { XYSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar XYSeries =\n/** @class */\nfunction (_super) {\n  __extends(XYSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function XYSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Indicates which of the series' `dataFields` to calculate aggregate values\r\n     * for.\r\n     *\r\n     * Available data fields for all [[XYSeries]] are:\r\n     * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n     *\r\n     * [[CandlestickSeries]] adds:\r\n     * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n     *\r\n     * Available options:\r\n     * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n     *\r\n     * Defaults are as follows:\r\n     * * `valueX`: `\"close\"`\r\n     * * `valueY`: `\"close\"`\r\n     * * `openValueX`: `\"open\"`\r\n     * * `openValueY`: `\"open\"`\r\n     * * `lowValueX`: `\"low\"`\r\n     * * `lowValueY`: `\"low\"`\r\n     * * `highValueX`: `\"high\"`\r\n     * * `highValueY`: `\"high\"`\r\n     *\r\n     * Is required only if data being plotted on a `DateAxis` and\r\n     * its `groupData` is set to `true`.\r\n     *\r\n     * ```TypeScript\r\n     * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * let series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JavaScript\r\n     * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * var series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     \"groupData\": true\r\n     *   }],\r\n     *   \"yAxes\": [{\r\n     *     \"type\": \"ValueAxis\"\r\n     *   }],\r\n     *   \"series\": [{\r\n     *     \"type\": \"LineSeries\",\r\n     *     \"dataFields\": {\r\n     *       \"dateX\": \"date\",\r\n     *       \"valueY\": \"value\"\r\n     *     },\r\n     *     \"groupFields\": {\r\n     *       \"valueY\": \"average\"\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above setup will ensure, that if there are many data items within\r\n     * selected range, they will be grouped into aggregated data points, using\r\n     * average value of all the values.\r\n     *\r\n     * For example if we have 2 years worth of daily data (~700 data items), when\r\n     * fully zoomed out, the chart would show ~100 data items instead: one for\r\n     * each week in those two years.\r\n     *\r\n     * Grouping will occur automatically, based on current selection range, and\r\n     * will change dynamically when user zooms in/out the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n     * @since 4.7.0\r\n     */\n\n\n    _this.groupFields = {};\n    /**\r\n     * X axis the series is attached to.\r\n     */\n\n    _this._xAxis = new MutableValueDisposer();\n    /**\r\n     * Y axis the series is attached to.\r\n     */\n\n    _this._yAxis = new MutableValueDisposer();\n    /**\r\n     * [_xValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n\n    _this._xValueFields = [];\n    /**\r\n     * [_yValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n\n    _this._yValueFields = [];\n    /**\r\n     * @ignore\r\n     */\n\n    _this._baseInterval = {};\n    /**\r\n     * @ignore\r\n     */\n\n    _this.dataGrouped = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this.usesShowFields = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this._dataSetChanged = false;\n    _this._maxxX = 100000;\n    _this._maxxY = 100000;\n    _this._propertiesChanged = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this.outOfRange = false;\n    _this.className = \"XYSeries\";\n    _this.isMeasured = false;\n    _this.groupFields.valueX = \"close\";\n    _this.groupFields.valueY = \"close\";\n    _this.groupFields.customValue = \"close\";\n    _this.groupFields.openValueX = \"open\";\n    _this.groupFields.openValueY = \"open\";\n    _this.cursorTooltipEnabled = true;\n    _this.cursorHoverEnabled = true;\n    _this.excludeFromTotal = false;\n    _this.mainContainer.mask = new Sprite();\n\n    _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\n\n    _this.stacked = false;\n    _this.snapTooltip = false;\n    _this._showBullets = false;\n    _this.tooltip.pointerOrientation = \"horizontal\";\n    _this.properties.stackToNegative = true;\n    _this.hideTooltipWhileZooming = true;\n\n    _this.setPropertyValue(\"maskBullets\", true);\n\n    _this.tooltip.events.on(\"hidden\", function () {\n      _this.returnBulletDefaultState();\n    }, undefined, false);\n\n    _this._disposers.push(_this._xAxis);\n\n    _this._disposers.push(_this._yAxis);\n\n    _this.observe(visualProperties, function () {\n      if (_this.inited) {\n        _this._propertiesChanged = true;\n\n        if (_this.legendDataItem) {\n          _this.legendDataItem.childrenCreated = false;\n        }\n\n        if (_this.chart && _this.chart.legend) {\n          _this.chart.legend.invalidateDataItems();\n        }\n\n        _this.invalidate();\n      }\n    }, undefined, false);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  XYSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"X/Y Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  XYSeries.prototype.createDataItem = function () {\n    return new XYSeriesDataItem();\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.resetExtremes = function () {\n    this._tmin.clear();\n\n    this._tmax.clear();\n\n    this._smin.clear();\n\n    this._smax.clear();\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.dataChangeUpdate = function () {\n    this.dataGrouped = false;\n    this._baseInterval = {};\n    this._currentDataSetId = \"\";\n    this.resetExtremes();\n\n    if (this.xAxis) {\n      this.xAxis.seriesDataChangeUpdate(this);\n    }\n\n    if (this.yAxis) {\n      this.yAxis.seriesDataChangeUpdate(this);\n    }\n  };\n  /**\r\n   * (Re)validates the series' data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateData = function () {\n    this._baseInterval = {};\n    var dataFields = this.dataFields;\n\n    if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\n      this.usesShowFields = true;\n    } else {\n      this.usesShowFields = false;\n    }\n\n    this.defineFields();\n\n    if (this.data.length > 0) {\n      this.dataChangeUpdate();\n    }\n\n    _super.prototype.validateData.call(this);\n\n    this.updateItemReaderText();\n\n    if (this.chart) {\n      if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\n        throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\n      }\n    } // 4.7.21 solves 51540\n\n\n    if (this.inited && this.isHidden) {\n      this.hide(0);\n    }\n\n    this.dataGrouped = false;\n  };\n  /**\r\n   * Processes data item.\r\n   *\r\n   * @param dataItem     Data item\r\n   * @param dataContext  Raw data\r\n   * @param index        Index of the data item\r\n   */\n\n\n  XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\n    try {\n      _super.prototype.processDataItem.call(this, dataItem, dataContext);\n\n      this.xAxis.processSeriesDataItem(dataItem, \"X\");\n      this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n      this.setInitialWorkingValues(dataItem);\n    } catch (e) {\n      if (this._chart) {\n        this._chart.raiseCriticalError(e);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * When validating raw data, instead of processing data item, we update it\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item\r\n   */\n\n\n  XYSeries.prototype.updateDataItem = function (dataItem) {\n    _super.prototype.updateDataItem.call(this, dataItem); //dataItem.events.disable();\n\n\n    this.xAxis.processSeriesDataItem(dataItem, \"X\");\n    this.yAxis.processSeriesDataItem(dataItem, \"Y\"); //dataItem.events.enable();\t\t\n  };\n  /**\r\n   * Inits data item's working values.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @param index     Data item's index\r\n   */\n\n\n  XYSeries.prototype.setInitialWorkingValues = function (dataItem) {};\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis) {\n      var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\n\n      if (dataItemsX) {\n        dataItemsX.clear();\n      }\n\n      if (xAxis instanceof CategoryAxis) {\n        this.clearCatAxis(xAxis);\n      }\n    }\n\n    if (yAxis) {\n      var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\n\n      if (dataItemsY) {\n        dataItemsY.clear();\n      }\n\n      if (yAxis instanceof CategoryAxis) {\n        this.clearCatAxis(yAxis);\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.clearCatAxis = function (axis) {\n    var uid = this.uid;\n    axis.dataItems.each(function (dataItem) {\n      if (dataItem.seriesDataItems[uid]) {\n        dataItem.seriesDataItems[uid] = [];\n      }\n    });\n  };\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n\n\n  XYSeries.prototype.defineFields = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      var xAxisFieldName = xAxis.axisFieldName;\n      var xField = xAxisFieldName + \"X\";\n      var xOpenField = \"open\" + $utils.capitalize(xAxisFieldName) + \"X\";\n      var yAxisFieldName = yAxis.axisFieldName;\n      var yField = yAxisFieldName + \"Y\";\n      var yOpenField = \"open\" + $utils.capitalize(yAxisFieldName) + \"Y\";\n      this._xField = xField;\n      this._yField = yField;\n\n      if (this.dataFields[xOpenField]) {\n        this._xOpenField = xOpenField;\n      }\n\n      if (this.dataFields[yOpenField]) {\n        this._yOpenField = yOpenField;\n      }\n\n      if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n\n      if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n\n      if (this.stacked && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n\n      if (this.stacked && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n\n      if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n        if (!this._yOpenField) {\n          this._yOpenField = yField;\n        }\n      }\n\n      this._xValueFields = [];\n      this._yValueFields = [];\n      this.addValueField(xAxis, this._xValueFields, this._xField);\n      this.addValueField(xAxis, this._xValueFields, this._xOpenField);\n      this.addValueField(yAxis, this._yValueFields, this._yField);\n      this.addValueField(yAxis, this._yValueFields, this._yOpenField);\n    }\n  };\n  /**\r\n   * [axis description]\r\n   *\r\n   * @todo Description\r\n   * @param axis    Axis\r\n   * @param fields  Fields (?)\r\n   * @param field   Field\r\n   */\n\n\n  XYSeries.prototype.addValueField = function (axis, fields, field) {\n    if (axis instanceof ValueAxis) {\n      if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\n        fields.push(field);\n      }\n    }\n  };\n  /**\r\n   * Sets category field from the category axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n\n\n  XYSeries.prototype.setCategoryAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.category;\n    }\n  };\n  /**\r\n   * Sets date field from the date axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n\n\n  XYSeries.prototype.setDateAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.date;\n    }\n  };\n  /**\r\n   * Performs after-draw tasks, e.g. creates masks.\r\n   */\n\n\n  XYSeries.prototype.afterDraw = function () {\n    _super.prototype.afterDraw.call(this);\n\n    this.createMask();\n  };\n  /**\r\n   * Create a mask for the series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.createMask = function () {\n    // this mask from which we cut out ranges. does not work well if ranges overlap.\n    if (this.mainContainer.mask) {\n      var path_1 = this.getMaskPath(); // @todo: this approach won't work well on circluar or other non x/y axes\n\n      $iter.each(this.axisRanges.iterator(), function (range) {\n        if (range.axisFill.fillPath) {\n          range.axisFill.validate();\n          path_1 += range.axisFill.fillPath;\n        }\n      });\n      this.mainContainer.mask.path = path_1;\n    }\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n\n\n  XYSeries.prototype.getMaskPath = function () {\n    if (this.xAxis && this.yAxis) {\n      return $path.rectToPath({\n        x: 0,\n        y: 0,\n        width: this.xAxis.axisLength,\n        height: this.yAxis.axisLength\n      });\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Returns axis data field to use.\r\n   *\r\n   * @param axis  Axis\r\n   * @return Field name\r\n   */\n\n\n  XYSeries.prototype.getAxisField = function (axis) {\n    if (axis == this.xAxis) {\n      return this.xField;\n    }\n\n    if (axis == this.yAxis) {\n      return this.yField;\n    }\n  };\n  /**\r\n   * Validates data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateDataItems = function () {\n    var chart = this.chart;\n\n    if (chart) {\n      this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\n      this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\n    } // this helps date axis to check which baseInterval we should use\n\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      xAxis.updateAxisBySeries();\n      yAxis.updateAxisBySeries();\n    }\n\n    _super.prototype.validateDataItems.call(this);\n\n    if (xAxis && yAxis) {\n      xAxis.postProcessSeriesDataItems(this);\n      yAxis.postProcessSeriesDataItems(this);\n    }\n  };\n  /**\r\n   * Validates data range.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateDataRange = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      if (xAxis.dataRangeInvalid) {\n        xAxis.validateDataRange();\n      }\n\n      if (yAxis.dataRangeInvalid) {\n        yAxis.validateDataRange();\n      }\n    }\n\n    _super.prototype.validateDataRange.call(this);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validate = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      if (xAxis.invalid) {\n        xAxis.validate();\n      }\n\n      if (yAxis.invalid) {\n        yAxis.validate();\n      }\n\n      this.y = yAxis.pixelY;\n      this.x = xAxis.pixelX;\n      this._showBullets = true;\n      var minBulletDistance = this.minBulletDistance;\n\n      if ($type.isNumber(minBulletDistance)) {\n        if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\n          this._showBullets = false;\n        }\n      }\n    }\n\n    this.updateTooltip();\n\n    if (xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped || yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped) {\n      return;\n    }\n\n    _super.prototype.validate.call(this);\n\n    var chart = this.chart;\n    var maskBullets = this.maskBullets;\n\n    if (chart && maskBullets) {\n      if (chart.className == \"XYChart\") {\n        if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\n          if (this.yAxis) {\n            this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n\n        if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\n          if (this.xAxis) {\n            this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"xAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._xAxis.get()) {\n          var axis = this.chart.xAxes.getIndex(0);\n\n          if (!axis) {\n            throw Error(\"There are no X axes on chart.\");\n          }\n\n          this.xAxis = axis;\n        }\n\n        return this._xAxis.get();\n      }\n    },\n\n    /**\r\n     * X axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setXAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XYSeries.prototype.setXAxis = function (axis) {\n    var oldAxis = this._xAxis.get();\n\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid); // TODO why is this here ?\n\n        this._xAxis.dispose(); // temp @todo: why it is not disposed?\n\n\n        oldAxis.series.removeValue(this);\n      }\n\n      this._xAxis.set(axis, axis.registerSeries(this));\n\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"yAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._yAxis.get()) {\n          var axis = this.chart.yAxes.getIndex(0);\n\n          if (!axis) {\n            throw Error(\"There are no Y axes on chart.\");\n          }\n\n          this.yAxis = axis;\n        }\n\n        return this._yAxis.get();\n      }\n    },\n\n    /**\r\n     * Y axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setYAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XYSeries.prototype.setYAxis = function (axis) {\n    var oldAxis = this._yAxis.get();\n\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid); // TODO why is this here ?\n\n        this._yAxis.dispose(); // temp @todo: why it is not disposed?\n\n\n        oldAxis.series.removeValue(this);\n      }\n\n      this._yAxis.set(axis, axis.registerSeries(this));\n\n      if (axis.chart instanceof XYChart) {\n        axis.chart.handleYAxisSet(this);\n      }\n\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n\n      if (!this._baseAxis && xAxis && yAxis) {\n        if (yAxis instanceof DateAxis) {\n          this._baseAxis = yAxis;\n        }\n\n        if (xAxis instanceof DateAxis) {\n          this._baseAxis = xAxis;\n        }\n\n        if (yAxis instanceof CategoryAxis) {\n          this._baseAxis = yAxis;\n        }\n\n        if (xAxis instanceof CategoryAxis) {\n          this._baseAxis = xAxis;\n        }\n\n        if (!this._baseAxis) {\n          this._baseAxis = xAxis;\n        }\n      }\n\n      return this._baseAxis;\n    },\n\n    /**\r\n     * The main (base) axis.\r\n     *\r\n     * This is the axis that series fills will go to, or grow animations will\r\n     * happen from.\r\n     *\r\n     * @param value  Axis\r\n     */\n    set: function (value) {\n      if (this._baseAxis != value) {\n        this._baseAxis = value;\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds one or several (array) of data items to the existing data.\r\n   *\r\n   * @param rawDataItem One or many raw data item objects\r\n   */\n\n  XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\n    _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\n\n    var scrollbarSeries = this.scrollbarSeries;\n\n    if (scrollbarSeries) {\n      this.scrollbarSeries.addData(rawDataItem, removeCount, true);\n      this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\n    }\n  };\n\n  XYSeries.prototype.setData = function (value) {\n    _super.prototype.setData.call(this, value);\n\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.setData(value);\n    }\n  };\n  /**\r\n   * Makes the chart use particular data set.\r\n   *\r\n   * If `id` is not provided or there is no such data set, main data will be\r\n   * used.\r\n   *\r\n   * @ignore\r\n   * @since 4.7.0\r\n   * @param  id  Data set id\r\n   */\n\n\n  XYSeries.prototype.setDataSet = function (id) {\n    var changed = _super.prototype.setDataSet.call(this, id);\n\n    if (changed) {\n      this._dataSetChanged = true;\n      var dataItems = this.dataItems;\n      this.resetExtremes();\n\n      if (dataItems && dataItems.length > 0) {\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        this._prevStartIndex = undefined;\n        this._prevEndIndex = undefined;\n        this._startIndex = undefined;\n        this._endIndex = undefined;\n\n        if (!this.appeared) {\n          this.processValues(false); // this will slow down!\n        }\n\n        if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\n          this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\n\n          this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\n\n          this.dispatch(\"extremeschanged\");\n        }\n\n        if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\n          this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\n\n          this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\n\n          this.dispatch(\"extremeschanged\");\n        }\n      }\n    }\n\n    return changed;\n  };\n  /**\r\n   * Processes values after data items' were added.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n\n\n  XYSeries.prototype.processValues = function (working) {\n    _super.prototype.processValues.call(this, working);\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (!xAxis || !yAxis) {\n      return;\n    }\n\n    var dataItems = this.dataItems;\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var workingStartIndex = startIndex;\n    var workingEndIndex = endIndex;\n\n    if (!working) {\n      startIndex = 0;\n      endIndex = this.dataItems.length;\n    }\n\n    for (var i = startIndex; i < endIndex; i++) {\n      var dataItem = dataItems.getIndex(i);\n      this.getStackValue(dataItem, working);\n      var stackX = dataItem.getValue(\"valueX\", \"stack\");\n      var stackY = dataItem.getValue(\"valueY\", \"stack\");\n      minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n      minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n      maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n      maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY); // if it's stacked, pay attention to stack value\n\n      if (this.stacked) {\n        if (this.baseAxis == xAxis) {\n          if (stackY < minY) {\n            minY = stackY;\n          }\n\n          if (stackY > maxY) {\n            maxY = stackY;\n          }\n        }\n\n        if (this.baseAxis == yAxis) {\n          if (stackX < minX) {\n            minX = stackX;\n          }\n\n          if (stackX > maxX) {\n            maxX = stackX;\n          }\n        }\n      }\n    } // this is mainly for value axis to calculate total and perecent.total of each series category\n\n\n    xAxis.processSeriesDataItems();\n    yAxis.processSeriesDataItems();\n    var xAxisId = xAxis.uid;\n    var yAxisId = yAxis.uid;\n\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n\n      this._smax.setKey(xAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n\n      this._smax.setKey(yAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (!working) {\n      if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\n        this._tmin.setKey(xAxisId, minX);\n\n        this._tmax.setKey(xAxisId, maxX);\n\n        this._tmin.setKey(yAxisId, minY);\n\n        this._tmax.setKey(yAxisId, maxY);\n\n        var stackedSeries = this.stackedSeries;\n\n        if (stackedSeries) {\n          if (stackedSeries.isDisposed()) {\n            this.stackedSeries = undefined;\n          } else {\n            stackedSeries.processValues(false);\n          }\n        }\n\n        this.dispatchImmediately(\"extremeschanged\");\n      }\n    }\n\n    if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\n      minX = Infinity;\n      maxX = -Infinity;\n      minY = Infinity;\n      maxY = -Infinity;\n\n      for (var i = workingStartIndex; i < workingEndIndex; i++) {\n        var dataItem = dataItems.getIndex(i);\n        this.getStackValue(dataItem, working);\n        var stackX = dataItem.getValue(\"valueX\", \"stack\");\n        var stackY = dataItem.getValue(\"valueY\", \"stack\");\n        minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n        minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n        maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n        maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY); // if it's stacked, pay attention to stack value\n\n        if (this.stacked) {\n          if (this.baseAxis == xAxis) {\n            if (stackY < minY) {\n              minY = stackY;\n            }\n\n            if (stackY > maxY) {\n              maxY = stackY;\n            }\n          }\n\n          if (this.baseAxis == yAxis) {\n            if (stackX < minX) {\n              minX = stackX;\n            }\n\n            if (stackX > maxX) {\n              maxX = stackX;\n            }\n          }\n        }\n      }\n    }\n\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n\n      this._smax.setKey(xAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n\n      this._smax.setKey(yAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\n      this._smin.setKey(xAxisId, minX);\n\n      this._smax.setKey(xAxisId, maxX);\n\n      this._smin.setKey(yAxisId, minY);\n\n      this._smax.setKey(yAxisId, maxY);\n\n      if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\n        /// new, helps to handle issues with change percent\n        var changed = false;\n\n        if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(yAxisId);\n\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && minY < tmin || this.stackedSeries && !this.isHidden) {\n            this._tmin.setKey(yAxisId, minY);\n\n            changed = true;\n          }\n\n          var tmax = this._tmax.getKey(yAxisId);\n\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && maxY > tmax || this.stackedSeries && !this.isHidden) {\n            this._tmax.setKey(yAxisId, maxY);\n\n            changed = true;\n          }\n        }\n\n        if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(xAxisId);\n\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && minX < tmin || this.stackedSeries && !this.isHidden) {\n            this._tmin.setKey(xAxisId, minX);\n\n            changed = true;\n          }\n\n          var tmax = this._tmax.getKey(xAxisId);\n\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && maxX > tmax || this.stackedSeries && !this.isHidden) {\n            this._tmax.setKey(xAxisId, maxX);\n\n            changed = true;\n          }\n        }\n\n        if (changed) {\n          this.dispatchImmediately(\"extremeschanged\");\n        }\n\n        if (this.start == 0 && this.end == 1) {\n          // yes, its ok. otherwise min/max won't be updated when zooming out\n          this._dataSetChanged = false;\n        }\n\n        this.dispatchImmediately(\"selectionextremeschanged\");\n      }\n    }\n\n    if (!working && this.stacked) {\n      this.processValues(true);\n    }\n  };\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n\n\n  XYSeries.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n\n    this.returnBulletDefaultState();\n    this._prevTooltipDataItem = undefined;\n  };\n  /**\r\n   * Shows series tooltip at specific position.\r\n   *\r\n   * @param xPosition  X\r\n   * @param yPosition  Y\r\n   */\n\n\n  XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\n    var dataItem;\n\n    if (this.visible && !this.isHiding && !this.isShowing) {\n      var xAxis = this._xAxis.get();\n\n      var yAxis = this._yAxis.get();\n\n      if (xAxis == this.baseAxis) {\n        dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\n      }\n\n      if (yAxis == this.baseAxis) {\n        dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\n      }\n\n      var point = this.showTooltipAtDataItem(dataItem);\n\n      if (point) {\n        return point;\n      } // so that if tooltip is shown on columns or bullets for it not to be hidden\n\n\n      if (!this.tooltipText && !this.tooltipHTML) {\n        return;\n      }\n    }\n\n    this.hideTooltip();\n  };\n\n  XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    return dataItem.locations[field];\n  };\n\n  XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    return dataItem.locations[field];\n  };\n  /**\r\n   * Shows series tooltip at specific dataItem.\r\n   *\r\n   * @param dataItem\r\n   */\n\n\n  XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\n    var e_1, _a;\n\n    var cursor = this.chart.cursor;\n\n    if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\n      this.hideTooltip();\n      return;\n    }\n\n    this.returnBulletDefaultState(dataItem);\n\n    if (dataItem && dataItem.visible) {\n      this.updateLegendValue(dataItem);\n\n      if (this.cursorTooltipEnabled) {\n        this.tooltipDataItem = dataItem; // todo: add tooltipXField and tooltipYField.\n\n        var tooltipXField = this.tooltipXField;\n        var tooltipYField = this.tooltipYField;\n\n        if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\n          var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\n\n          if (tooltipPoint) {\n            if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {// void\n            } else {\n              this.tooltipX = tooltipPoint.x;\n              this.tooltipY = tooltipPoint.y;\n\n              if (this._prevTooltipDataItem != dataItem) {\n                this.dispatchImmediately(\"tooltipshownat\", {\n                  type: \"tooltipshownat\",\n                  target: this,\n                  dataItem: dataItem\n                });\n                this._prevTooltipDataItem = dataItem;\n              }\n\n              if (this.cursorHoverEnabled) {\n                try {\n                  for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var sprite = _c.value;\n\n                    if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {} else {\n                      if (!sprite.interactions.isRealHover) {\n                        sprite.dispatchImmediately(\"over\");\n                        sprite.interactions.isRealHover = true;\n                      }\n\n                      sprite.isHover = true;\n                    }\n                  }\n                } catch (e_1_1) {\n                  e_1 = {\n                    error: e_1_1\n                  };\n                } finally {\n                  try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                  } finally {\n                    if (e_1) throw e_1.error;\n                  }\n                }\n              }\n\n              if (this.showTooltip()) {\n                return $utils.spritePointToSvg({\n                  x: tooltipPoint.x,\n                  y: tooltipPoint.y\n                }, this);\n              }\n\n              return;\n            }\n          }\n        }\n      }\n    } else {\n      this.updateLegendValue(dataItem, true);\n    }\n  };\n  /**\r\n   * Returns default state to bullets when tooltip is shown at some other data\r\n   * item or hidden\r\n   */\n\n\n  XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\n    var e_2, _a;\n\n    if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\n      try {\n        for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var sprite = _c.value;\n\n          if (!sprite.isDisposed()) {\n            var fireEvent = sprite.interactions.isRealHover;\n            sprite.isHover = false;\n\n            if (fireEvent) {\n              sprite.dispatchImmediately(\"out\");\n            }\n          } else {\n            this._prevTooltipDataItem = undefined;\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n\n  XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bulletTemplate.xField;\n\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n\n    var yField = bulletTemplate.yField;\n\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n\n    if (this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      return false;\n    }\n\n    if (bulletTemplate.disabled) {\n      var disabledField = bulletTemplate.propertyFields.disabled;\n      var dataContext = dataItem.dataContext;\n\n      if (dataContext && dataContext[disabledField] === false) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.updateTooltip = function () {\n    if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\n      this.showTooltipAtDataItem(this.tooltipDataItem);\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n\n    var dataItem = bullet.dataItem; // use series xField/yField if bullet doesn't have fields set\n\n    var xField = bullet.xField;\n\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n\n    var yField = bullet.yField;\n\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      bullet.visible = false;\n    } else {\n      var bulletLocationX = this.getBulletLocationX(bullet, xField);\n      var bulletLocationY = this.getBulletLocationY(bullet, yField);\n      var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\n\n      if (point) {\n        var xOpenField = this.xOpenField;\n        var yOpenField = this.yOpenField;\n        var positionX = void 0;\n        var positionY = void 0;\n\n        if (xAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n\n          if (!xOpenField) {\n            if (xAxis == this.baseAxis) {\n              openValue = xAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n\n          if (openValue == closeValue) {\n            var baseInterval = xAxis.baseInterval;\n            var dateFormatter = xAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n\n          var middleValue = void 0;\n\n          if (xAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationX;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          }\n\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n\n          if (!xOpenField) {\n            openValue = xAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof CategoryAxis) {\n          var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\n          var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\n          positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\n          var openPositionX = void 0;\n\n          if (xOpenField) {\n            openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\n          }\n\n          if (!$type.isNumber(openPositionX)) {\n            openPositionX = 1;\n          }\n\n          positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\n        }\n\n        if (yAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n\n          if (!yOpenField) {\n            if (yAxis == this.baseAxis) {\n              openValue = yAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n\n          if (openValue == closeValue) {\n            var baseInterval = yAxis.baseInterval;\n            var dateFormatter = yAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n\n          var middleValue = void 0;\n\n          if (yAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationY;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          }\n\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n\n          if (!yOpenField) {\n            openValue = yAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof CategoryAxis) {\n          positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\n          var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\n          var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\n          positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\n          var openPositionY = void 0;\n\n          if (yOpenField) {\n            openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\n          }\n\n          if (!$type.isNumber(openPositionY)) {\n            openPositionY = 1;\n          }\n\n          positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\n        }\n\n        bullet.visible = true;\n        this.positionBulletReal(bullet, positionX, positionY);\n      } else {\n        bullet.visible = false;\n      }\n    }\n  };\n\n  XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\n    bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\n    bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\n  };\n  /**\r\n   * returns bullet x location\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.getBulletLocationX = function (bullet, field) {\n    var bulletLocation = bullet.locationX;\n    var dataItem = bullet.dataItem;\n\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n\n    return bulletLocation;\n  };\n  /**\r\n   * Returns bullet x location\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.getBulletLocationY = function (bullet, field) {\n    var bulletLocation = bullet.locationY;\n    var dataItem = bullet.dataItem;\n\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n\n    return bulletLocation;\n  };\n  /**\r\n   * This method must be called if you update Series' data fields that might\r\n   * affect stacking of the series.\r\n   *\r\n   * Since individual `dataField` changes are not being monitored, you need\r\n   * todo it manually for changes to take affect.\r\n   *\r\n   * @since 4.7.21\r\n   */\n\n\n  XYSeries.prototype.updateStacking = function () {\n    var _this = this;\n\n    this.invalidateDataItems();\n\n    if (this.chart) {\n      this.chart.series.each(function (series) {\n        if (series.baseAxis == _this.baseAxis) {\n          series.stackedSeries = undefined;\n          series.invalidateDataItems();\n          series.invalidateProcessedData();\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"stacked\", {\n    /**\r\n     * @return Can be stacked?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stacked\");\n    },\n\n    /**\r\n     * Can items from this series be included into stacks?\r\n     *\r\n     * Note: proper stacking is only possible if series have the same number\r\n     * of data items. To ensure this, don't set data directly on series\r\n     * but do this on chart instead.\r\n     *\r\n     * @default false\r\n     * @param stacked  Can be stacked?\r\n     */\n    set: function (stacked) {\n      if (this.setPropertyValue(\"stacked\", stacked, true)) {\n        this.updateStacking();\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n\n        if (!stacked) {\n          var field_1;\n\n          if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n            field_1 = this.xField;\n          }\n\n          if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n            field_1 = this.yField;\n          }\n\n          if (field_1) {\n            this.dataItems.each(function (dataItem) {\n              dataItem.setCalculatedValue(field_1, 0, \"stack\");\n            });\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\n    /**\r\n     * @return Should snap?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"snapTooltip\");\n    },\n\n    /**\r\n     * Should the nearest tooltip be shown if no data item is found on the\r\n     * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n     *\r\n     * @default false\r\n     * @param value  Should snap?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"snapTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n\n  XYSeries.prototype.show = function (duration) {\n    var _this = this;\n\n    if (this.isHidden) {\n      if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\n        this._tmin.setKey(this.yAxis.uid, undefined);\n\n        this._tmax.setKey(this.yAxis.uid, undefined);\n      }\n\n      if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\n        this._tmin.setKey(this.xAxis.uid, undefined);\n\n        this._tmax.setKey(this.xAxis.uid, undefined);\n      }\n    }\n\n    var fields;\n\n    if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n    }\n\n    if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n    }\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.defaultState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n        delay = 0;\n      }\n\n      if (_this.sequencedInterpolation && realDuration > 0) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      anim = dataItem.show(realDuration, delay, fields);\n    }); // other data sets\n\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.show(0, 0, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.show(0, 0, fields);\n        dataItem.events.enable();\n      });\n    }\n\n    var animation = _super.prototype.show.call(this, duration);\n\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n\n    if (this.hidden) {\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      this.hidden = false;\n    }\n\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n\n\n  XYSeries.prototype.hide = function (duration) {\n    var _this = this;\n\n    var fields;\n    var value;\n    var xAxis = this.xAxis;\n\n    if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\n      fields = this._xValueFields; // animate to zero if 0 is within zoomMin/zoomMax\n\n      if (this.stacked || xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue || this.stackedSeries) {\n        value = xAxis.baseValue;\n      } else {\n        value = xAxis.min;\n      }\n    }\n\n    var yAxis = this.yAxis;\n\n    if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\n      fields = this._yValueFields; // animate to zero if 0 is within zoomMin/zoomMax\n\n      if (this.stacked || yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue || this.stackedSeries) {\n        value = yAxis.baseValue;\n      } else {\n        value = yAxis.min;\n      }\n    } //if ($type.hasValue(fields)) {\n\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var delay = 0;\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n      }\n\n      if (realDuration == 0) {\n        dataItem.hide(0, 0, value, fields);\n      } else {\n        if (_this.sequencedInterpolation && realDuration > 0) {\n          delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n        }\n\n        anim = dataItem.hide(realDuration, delay, value, fields);\n      }\n    }); // other data sets\n\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.hide(0, 0, value, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.hide(0, 0, value, fields);\n        dataItem.events.enable();\n      });\n    }\n\n    var animation = _super.prototype.hide.call(this, interpolationDuration);\n\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    } // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\n\n\n    this.validateDataElements(); //}\n\n    return animation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\n    _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name); // to calculate stack values\n\n\n    var axisSeries = this.baseAxis.series;\n    $iter.each(axisSeries.iterator(), function (series) {\n      if (series.stacked || series.stackedSeries) {\n        series.invalidateProcessedData();\n      }\n    });\n  };\n  /**\r\n   * [getStackValue description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param dataItem  Data item\r\n   */\n\n\n  XYSeries.prototype.getStackValue = function (dataItem, working) {\n    // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\n    // if this series is not stacked or new stack begins, return.\n    var _this = this;\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (!this.stacked || !xAxis || !yAxis) {\n      return;\n    } else {\n      // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\n      var chart = this.chart;\n      var index = chart.series.indexOf(this);\n      var field_2;\n\n      if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n        field_2 = this.xField;\n      }\n\n      if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n        field_2 = this.yField;\n      }\n\n      if (!field_2) {\n        return;\n      } //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\n\n\n      dataItem.setCalculatedValue(field_2, 0, \"stack\");\n      $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\n        // stacking is only possible if both axes are the same\n        if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\n          // saving value\n          prevSeries.stackedSeries = _this;\n          var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\n\n          if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\n            var value = dataItem.getValue(field_2);\n            var prevValue = void 0;\n            var prevRealValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n\n            if (working) {\n              prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n            } else {\n              prevValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n            }\n\n            if (_this.stackToNegative) {\n              if (value >= 0 && prevRealValue >= 0 || value < 0 && prevRealValue < 0) {\n                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n                return false;\n              } else if (!prevSeries.stacked) {\n                return false;\n              }\n            } else {\n              dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n              return false;\n            }\n          } else if (!prevSeries.stacked) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\n    /**\r\n     * @return Stack to base line\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stackToNegative\");\n    },\n\n    /**\r\n     * This setting indicates how negative values are treated in stacked stacked\r\n     * series.\r\n     *\r\n     * If set to `true` (default), negative values will stack on the base line.\r\n     *\r\n     * If set to `false`, negative value will stack in relation to the previous\r\n     * value in the stack.\r\n     *\r\n     * @since 4.9.34\r\n     * @param  value  Stack to base line\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"stackToNegative\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xField\", {\n    /**\r\n     * [xField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yField\", {\n    /**\r\n     * [yField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\n    /**\r\n     * [xOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\n    /**\r\n     * [yOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipXField) {\n        return this._tooltipXField;\n      }\n\n      return this._xField;\n    },\n\n    /**\r\n     * [tooltipXField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipXField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipYField) {\n        return this._tooltipYField;\n      }\n\n      return this._yField;\n    },\n\n    /**\r\n     * [tooltipYField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipYField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns lowest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n  XYSeries.prototype.min = function (axis) {\n    return this._tmin.getKey(axis.uid);\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.max = function (axis) {\n    return this._tmax.getKey(axis.uid);\n  };\n  /**\r\n   * Returns lowest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.selectionMin = function (axis) {\n    var value = this._smin.getKey(axis.uid); // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.min(axis);\n    //}\t\t\n\n\n    return value;\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.selectionMax = function (axis) {\n    var value = this._smax.getKey(axis.uid); // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.max(axis);\n    //}\n\n\n    return value;\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  XYSeries.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up base axes\n      if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\n        if (this.map.hasKey(config.baseAxis)) {\n          config.baseAxis = this.map.getKey(config.baseAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\n          delete config.baseAxis;\n        }\n      } // Set up axes\n\n\n      if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\n        if (this.map.hasKey(config.xAxis)) {\n          config.xAxis = this.map.getKey(config.xAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\n          delete config.xAxis;\n        }\n      }\n\n      if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\n        if (this.map.hasKey(config.yAxis)) {\n          config.yAxis = this.map.getKey(config.yAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\n          delete config.yAxis;\n        }\n      } // Set up axis ranges\n\n\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i];\n\n          if (!$type.hasValue(range.type)) {\n            range.type = \"AxisDataItem\";\n          }\n\n          if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\n            range.component = this.map.getKey(range.axis);\n          } else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\n            range.component = this.map.getKey(range.component);\n          }\n        }\n      } // Parse date fields based on the series fields\n\n\n      if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\n        this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n   *\r\n   * @param    dataItem   Data item\r\n   * @param    xKey       Name of X data field\r\n   * @param    yKey       Name of Y data field\r\n   * @param    locationX  X location\r\n   * @param    locationY  Y location\r\n   * @param    stackKeyX  ?\r\n   * @param    stackKeyY  ?\r\n   * @returns             Coordinates\r\n   */\n\n\n  XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\n    if (this.xAxis && this.yAxis) {\n      var x = this.xAxis.getX(dataItem, xKey, locationX);\n      var y = this.yAxis.getY(dataItem, yKey, locationY);\n      x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n\n      y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n  /**\r\n   * Updates item reader text based on the type and set up of axis.\r\n   */\n\n\n  XYSeries.prototype.updateItemReaderText = function () {\n    // We do not want to overwrite this if `itemReaderText` was changed by\n    // user code.\n    if (this._itemReaderTextChanged) {\n      return;\n    }\n\n    var text = \"\";\n    $object.each(this.dataFields, function (key, val) {\n      text += \"{\" + key + \"} \";\n    });\n    this.itemReaderText = text;\n    this._itemReaderTextChanged = false;\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n\n    /**\r\n     * Indicates if series should display a tooltip for chart's cursor.\r\n     *\r\n     * If set to `true` (default), the tooltips set for all series item's\r\n     * elements like columns and bullets will be automatically shown\r\n     * when [[XYCursor]] passes over category/date, even if its not hovered\r\n     * directly over the item.\r\n     *\r\n     * Set this to `false` to disable such behavior and display item-specific\r\n     * tooltips only when hovered directly over them\r\n     *\r\n     * @default true\r\n     * @param value Display tooltip?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorTooltipEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\n    /**\r\n     * @return Hover enabled?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorHoverEnabled\");\n    },\n\n    /**\r\n     * Indicates if series should apply hover state on bullets/columns/etc when\r\n     * cursor is over the data item.\r\n     *\r\n     * If set to `true` (default) and chart cursor is enabled on th chart,\r\n     * hovering over date/category will trigger hover states on related Series\r\n     * items like bullets and columns.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     * @param  value  Hover enabled?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorHoverEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\n    /**\r\n     * @return Exclude from totals?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"excludeFromTotal\");\n    },\n\n    /**\r\n     * Indicates if series' values should be excluded when calculating totals.\r\n     *\r\n     * @default false\r\n     * @since 4.4.9\r\n     * @param  value  Exclude from totals?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"excludeFromTotal\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n\n    /**\r\n     * Indicates if series' tooltip should be hidden while series axis range is\r\n     * animating (zooming).\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\n    /**\r\n     * @return Mask bullets?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maskBullets\");\n    },\n\n    /**\r\n     * Indicates if series' bullets should be masked.\r\n     *\r\n     * @default true\r\n     * @since 4.7.17\r\n     * @param  value  Mask bullets?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maskBullets\", value);\n      var chart = this.chart;\n\n      if (chart) {\n        if (value) {\n          this.bulletsContainer.parent = chart.bulletsContainer;\n        } else {\n          this.bulletsContainer.parent = chart.axisBulletsContainer;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n\n  XYSeries.prototype.copyFrom = function (source) {\n    this.groupFields = $utils.copyProperties(source.groupFields, {});\n\n    _super.prototype.copyFrom.call(this, source);\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n\n\n  XYSeries.prototype.dispose = function () {\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.dispose();\n    }\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return XYSeries;\n}(Series);\n\nexport { XYSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;","map":{"version":3,"mappings":"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","names":["Series","SeriesDataItem","Sprite","visualProperties","ValueAxis","Dictionary","MutableValueDisposer","XYChart","CategoryAxis","DateAxis","registry","$iter","$math","$utils","$type","$time","$array","$object","$path","options","__extends","_super","_this","className","values","customValue","valueX","stack","valueY","openValueX","openValueY","dateX","dateY","openDateX","openDateY","setLocation","applyTheme","Object","XYSeriesDataItem","value","setValue","getDate","date","setDate","categories","categoryX","category","setCategory","categoryY","openCategoryX","openCategoryY","fields","working","stackValue","min","isNumber","each","field","getWorkingValue","getValue","max","isMeasured","groupFields","cursorTooltipEnabled","cursorHoverEnabled","excludeFromTotal","mainContainer","mask","setElement","paper","add","stacked","snapTooltip","_showBullets","tooltip","pointerOrientation","properties","stackToNegative","hideTooltipWhileZooming","setPropertyValue","events","on","returnBulletDefaultState","undefined","_disposers","push","_xAxis","_yAxis","observe","inited","_propertiesChanged","legendDataItem","childrenCreated","chart","legend","invalidateDataItems","invalidate","XYSeries","applyInternalDefaults","call","hasValue","readerTitle","language","translate","_tmin","clear","_tmax","_smin","_smax","dataGrouped","_baseInterval","_currentDataSetId","resetExtremes","xAxis","seriesDataChangeUpdate","yAxis","dataFields","valueYShow","openValueXShow","openValueYShow","usesShowFields","defineFields","data","length","dataChangeUpdate","validateData","updateItemReaderText","_xField","_yField","Error","name","uid","isHidden","hide","dataItem","dataContext","processDataItem","processSeriesDataItem","setInitialWorkingValues","e","_chart","raiseCriticalError","updateDataItem","disposeData","dataItemsX","dataItemsByAxis","getKey","clearCatAxis","dataItemsY","axis","dataItems","seriesDataItems","xAxisFieldName","axisFieldName","xField","xOpenField","capitalize","yAxisFieldName","yField","yOpenField","_xOpenField","_yOpenField","baseAxis","_xValueFields","_yValueFields","addValueField","indexOf","afterDraw","createMask","path_1","getMaskPath","axisRanges","iterator","range","axisFill","fillPath","validate","path","rectToPath","x","y","width","axisLength","height","_maxxX","plotContainer","maxWidth","_maxxY","maxHeight","updateAxisBySeries","validateDataItems","postProcessSeriesDataItems","dataRangeInvalid","validateDataRange","invalid","pixelY","pixelX","minBulletDistance","endIndex","startIndex","updateTooltip","groupData","maskBullets","leftAxesContainer","layout","rightAxesContainer","bulletsContainer","renderer","gridContainer","topAxesContainer","bottomAxesContainer","get","xAxes","getIndex","setXAxis","oldAxis","removeKey","dispose","series","removeValue","set","registerSeries","setKey","invalidateData","yAxes","setYAxis","handleYAxisSet","_baseAxis","rawDataItem","removeCount","skipRaw","addData","scrollbarSeries","_parseDataFrom","setData","id","changed","setDataSet","_dataSetChanged","_prevStartIndex","_prevEndIndex","_startIndex","_endIndex","appeared","processValues","getTime","dispatch","minX","Infinity","maxX","minY","maxY","workingStartIndex","workingEndIndex","i","getStackValue","stackX","stackY","getMin","getMax","processSeriesDataItems","xAxisId","yAxisId","dispatchImmediately","stackedSeries","isDisposed","start","end","mainDataSet","tmin","isShowing","tmax","duration","hideTooltip","_prevTooltipDataItem","xPosition","yPosition","visible","isHiding","getSeriesDataItem","toAxisPosition","point","showTooltipAtDataItem","tooltipText","tooltipHTML","bulletLocationX","locations","bulletLocationY","cursor","hideSeriesTooltipsOnSelection","selection","downPoint","updateLegendValue","tooltipDataItem","tooltipXField","tooltipYField","tooltipPoint","getPoint","getAdjustedXLocation","getAdjustedYLocation","pixelHeight","pixelWidth","tooltipX","tooltipY","type","target","sprites","_c","sprite","parent","__disabled","disabled","interactions","isRealHover","isHover","showTooltip","spritePointToSvg","fireEvent","bulletTemplate","disabledField","propertyFields","bullet","positionBullet","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","baseValue","baseInterval","dateFormatter","round","Date","timeUnit","count","firstDayOfWeek","utc","timezoneMinutes","timezone","middleValue","valueToPosition","rightLocation","locationX","leftLocation","categoryToPosition","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","positionToPoint","bulletLocation","workingLocations","invalidateProcessedData","getPropertyValue","updateStacking","field_1","setCalculatedValue","delay","interpolationDuration","defaultState","transitionDuration","animationsEnabled","anim","indexed","a","realDuration","sequencedInterpolation","sequencedInterpolationDelay","show","dataSets","key","dataSet","disable","enable","animation","isFinished","hidden","minZoomed","maxZoomed","hiddenState","validateDataElements","handleDataItemWorkingValueChange","axisSeries","index","field_2","eachContinue","backwards","prevSeries","prevDataItem","prevValue","prevRealValue","_tooltipXField","_tooltipYField","config","isString","map","hasKey","processingErrors","isArray","len","component","isObject","processConfig","xKey","yKey","stackKeyX","stackKeyY","getX","getY","fitToRange","_itemReaderTextChanged","text","val","itemReaderText","axisBulletsContainer","source","copyProperties","copyFrom","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/series/XYSeries.ts"],"sourcesContent":["/**\r\n * XY series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYCursor } from \"../cursors/XYCursor\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * [_minX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minX: number;\r\n\r\n\t/**\r\n\t * [_maxX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxX: number;\r\n\r\n\t/**\r\n\t * [_minY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minY: number;\r\n\r\n\t/**\r\n\t * [_maxY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxY: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic _component!: XYSeries;\r\n\r\n\t/**\r\n\t * References to any aggregate data items this data item is part of.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupDataItems: this[];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYSeriesDataItem\";\r\n\r\n\t\tthis.values.customValue = {};\r\n\r\n\t\tthis.values.valueX = { stack: 0 };\r\n\t\tthis.values.valueY = { stack: 0 };\r\n\t\tthis.values.openValueX = {};\r\n\t\tthis.values.openValueY = {};\r\n\r\n\t\tthis.values.dateX = {};\r\n\t\tthis.values.dateY = {};\r\n\t\tthis.values.openDateX = {};\r\n\t\tthis.values.openDateY = {};\r\n\r\n\t\tthis.setLocation(\"dateX\", 0.5, 0);\r\n\t\tthis.setLocation(\"dateY\", 0.5, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0.5, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0.5, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's custom numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set customValue(value: number) {\r\n\t\tthis.setValue(\"customValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get customValue(): number {\r\n\t\treturn this.values.customValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateX(date: Date) {\r\n\t\tthis.setDate(\"dateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateX(): Date {\r\n\t\treturn this.getDate(\"dateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateY(date: Date) {\r\n\t\tthis.setDate(\"dateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateY(): Date {\r\n\t\treturn this.getDate(\"dateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryX(category: string) {\r\n\t\tthis.setCategory(\"categoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryX(): string {\r\n\t\treturn this.categories.categoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryY(category: string) {\r\n\t\tthis.setCategory(\"categoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryY(): string {\r\n\t\treturn this.categories.categoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueX(value: number) {\r\n\t\tthis.setValue(\"openValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueX(): number {\r\n\t\treturn this.values.openValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueY(value: number) {\r\n\t\tthis.setValue(\"openValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueY(): number {\r\n\t\treturn this.values.openValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateX(date: Date) {\r\n\t\tthis.setDate(\"openDateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateX(): Date {\r\n\t\treturn this.getDate(\"openDateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateY(date: Date) {\r\n\t\tthis.setDate(\"openDateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateY(): Date {\r\n\t\treturn this.getDate(\"openDateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryX(category: string) {\r\n\t\tthis.setCategory(\"openCategoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryX(): string {\r\n\t\treturn this.categories.openCategoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryY(category: string) {\r\n\t\tthis.setCategory(\"openCategoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryY(): string {\r\n\t\treturn this.categories.openCategoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Return smallest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMin(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) {  // dumped because of non smooth zooming\r\n\t\tlet min: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value < min || !$type.isNumber(min)) {\r\n\t\t\t\tmin = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn min;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Return biggest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMax(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) { // dumped because of non smooth zooming\r\n\t\tlet max: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value > max || !$type.isNumber(max)) {\r\n\t\t\t\tmax = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn max;\r\n\t\t//}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Defines property set for a [[XYSeries]] tooltip event that contains information about dataItem\r\n */\r\nexport type XYSeriesTooltipEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tdataItem: XYSeriesDataItem;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for horizontal axis.\r\n\t */\r\n\tvalueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for vertical axis.\r\n\t */\r\n\tvalueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for horizontal axis.\r\n\t */\r\n\tcategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for vertical axis.\r\n\t */\r\n\tcategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for horizontal axis.\r\n\t */\r\n\tdateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for vertical axis.\r\n\t */\r\n\tdateY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for horizontal\r\n\t * axis.\r\n\t */\r\n\topenValueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for vertical\r\n\t * axis.\r\n\t */\r\n\topenValueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for horizontal axis.\r\n\t */\r\n\topenCategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for vertical axis.\r\n\t */\r\n\topenCategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for horizontal axis.\r\n\t */\r\n\topenDateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for vertical axis.\r\n\t */\r\n\topenDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for some custom data.\r\n\t */\r\n\tcustomValue?: string;\r\n}\r\n\r\n\r\n/**\r\n * Defines types of the aggregate value.\r\n *\r\n * @since 4.7.0\r\n */\r\nexport type GroupField = \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\";\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueX` data field.\r\n\t *\r\n\t * @default \"close\"\r\n\t */\r\n\tvalueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueY` data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tvalueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `customValue` value data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tcustomValue?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueX` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueY` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueY?: GroupField;\r\n}\r\n\r\n/**\r\n * Defines properties for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tstacked?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tcursorHoverEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\texcludeFromTotal?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\t/**\r\n\t * Should series bullets be masked?\r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [boolean description]\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @default true\r\n\t */\r\n\tstackToNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesEvents extends ISeriesEvents {\r\n\t/**\r\n\t * Invoked when series tooltip was shown on some particular data item\r\n\t */\r\n\ttooltipshownat: XYSeriesTooltipEvent;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[XYSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYSeriesAdapters extends ISeriesAdapters, IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to a source value that is being used to calculate aggregate values\r\n\t * for a grouped data item.\r\n\t * \r\n\t * applied only if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupValue: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n\t/**\r\n\t * Applied to a calculated aggregate data item and its values, so that\r\n\t * specific logic can be applied to calculation of derivative values.\r\n\t *\r\n\t * User's code needs to modify specific value in `values` object, most\r\n\t * probably `close` as it's the default grouping field.\r\n\t * \r\n\t * Applied only * if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.36\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupDataItem: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: IXYSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Indicates which of the series' `dataFields` to calculate aggregate values\r\n\t * for.\r\n\t *\r\n\t * Available data fields for all [[XYSeries]] are:\r\n\t * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n\t *\r\n\t * [[CandlestickSeries]] adds:\r\n\t * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n\t *\r\n\t * Available options:\r\n\t * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n\t *\r\n\t * Defaults are as follows:\r\n\t * * `valueX`: `\"close\"`\r\n\t * * `valueY`: `\"close\"`\r\n\t * * `openValueX`: `\"open\"`\r\n\t * * `openValueY`: `\"open\"`\r\n\t * * `lowValueX`: `\"low\"`\r\n\t * * `lowValueY`: `\"low\"`\r\n\t * * `highValueX`: `\"high\"`\r\n\t * * `highValueY`: `\"high\"`\r\n\t *\r\n\t * Is required only if data being plotted on a `DateAxis` and\r\n\t * its `groupData` is set to `true`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above setup will ensure, that if there are many data items within\r\n\t * selected range, they will be grouped into aggregated data points, using\r\n\t * average value of all the values.\r\n\t *\r\n\t * For example if we have 2 years worth of daily data (~700 data items), when\r\n\t * fully zoomed out, the chart would show ~100 data items instead: one for\r\n\t * each week in those two years.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupFields: this[\"_groupFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IXYSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t */\r\n\tprotected _baseAxis: Axis;\r\n\r\n\t/**\r\n\t * Total data item count.\r\n\t */\r\n\tprotected _count: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * Data item count in current selection.\r\n\t */\r\n\tprotected _scount: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * [_xField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xField: string;\r\n\r\n\t/**\r\n\t * [_yField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yField: string;\r\n\r\n\t/**\r\n\t * [_xOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xOpenField: string;\r\n\r\n\t/**\r\n\t * [_yOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yOpenField: string;\r\n\r\n\t/**\r\n\t * [_tooltipXField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipXField: string;\r\n\r\n\t/**\r\n\t * [_tooltipYField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipYField: string;\r\n\r\n\t/**\r\n\t * [_xValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * [_yValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * Series which is stacked on top of this series, if any.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stackedSeries: XYSeries;\r\n\r\n\t/**\r\n\t * Dataitem of previously shown tooltip, used to avoid multiple\r\n\t * tooltipshownat dispatches.\r\n\t */\r\n\tprotected _prevTooltipDataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _baseInterval: { [index: string]: ITimeInterval } = {};\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataGrouped = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic usesShowFields: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _dataSetChanged: boolean = false;\r\n\r\n\r\n\tprotected _maxxX: number = 100000;\r\n\tprotected _maxxY: number = 100000;\r\n\r\n\tprotected _propertiesChanged: boolean = false;\r\n\r\n\t/**\r\n\t * If this series was used to create a series for scrollbar, this is a reference to it.\r\n\t */\r\n\tpublic scrollbarSeries: this;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic outOfRange: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYSeries\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\r\n\t\tthis.groupFields.valueX = \"close\";\r\n\t\tthis.groupFields.valueY = \"close\";\r\n\t\tthis.groupFields.customValue = \"close\";\r\n\r\n\t\tthis.groupFields.openValueX = \"open\";\r\n\t\tthis.groupFields.openValueY = \"open\";\r\n\r\n\t\tthis.cursorTooltipEnabled = true;\r\n\r\n\t\tthis.cursorHoverEnabled = true;\r\n\t\tthis.excludeFromTotal = false;\r\n\r\n\t\tthis.mainContainer.mask = new Sprite();\r\n\t\tthis.mainContainer.mask.setElement(this.paper.add(\"path\"));\r\n\r\n\t\tthis.stacked = false;\r\n\t\tthis.snapTooltip = false;\r\n\r\n\t\tthis._showBullets = false;\r\n\r\n\t\tthis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\tthis.properties.stackToNegative = true;\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.setPropertyValue(\"maskBullets\", true);\r\n\r\n\t\tthis.tooltip.events.on(\"hidden\", () => {\r\n\t\t\tthis.returnBulletDefaultState();\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.observe(visualProperties, () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis._propertiesChanged = true;\r\n\t\t\t\tif (this.legendDataItem) {\r\n\t\t\t\t\tthis.legendDataItem.childrenCreated = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.chart && this.chart.legend) {\r\n\t\t\t\t\tthis.chart.legend.invalidateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new XYSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic resetExtremes() {\r\n\t\tthis._tmin.clear();\r\n\t\tthis._tmax.clear();\r\n\r\n\t\tthis._smin.clear();\r\n\t\tthis._smax.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\t\tthis.dataGrouped = false;\r\n\t\tthis._baseInterval = {};\r\n\t\tthis._currentDataSetId = \"\";\r\n\r\n\t\tthis.resetExtremes();\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\r\n\t\tif (this.yAxis) {\r\n\t\t\tthis.yAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series' data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._baseInterval = {};\r\n\t\tlet dataFields = this.dataFields;\r\n\t\tif (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n\t\t\tthis.usesShowFields = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.usesShowFields = false;\r\n\t\t}\r\n\r\n\t\tthis.defineFields();\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tthis.dataChangeUpdate();\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.updateItemReaderText();\r\n\t\tif (this.chart) {\r\n\t\t\tif (!$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._xField]) || !$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._yField])) {\r\n\t\t\t\tthrow Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 4.7.21 solves 51540\r\n\t\tif (this.inited && this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\r\n\t\tthis.dataGrouped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\ttry {\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\r\n\t\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\r\n\t\t\tthis.setInitialWorkingValues(dataItem);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (this._chart) {\r\n\t\t\t\tthis._chart.raiseCriticalError(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.updateDataItem(dataItem);\r\n\r\n\t\t//dataItem.events.disable();\r\n\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\t\t//dataItem.events.enable();\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis) {\r\n\t\t\tlet dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n\t\t\tif (dataItemsX) {\r\n\t\t\t\tdataItemsX.clear();\r\n\t\t\t}\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(xAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (yAxis) {\r\n\t\t\tlet dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n\t\t\tif (dataItemsY) {\r\n\t\t\t\tdataItemsY.clear();\r\n\t\t\t}\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(yAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected clearCatAxis(axis: CategoryAxis) {\r\n\t\tlet uid = this.uid;\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.seriesDataItems[uid]) {\r\n\t\t\t\tdataItem.seriesDataItems[uid] = [];\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tlet xAxisFieldName: string = xAxis.axisFieldName;\r\n\t\t\tlet xField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(xAxisFieldName + \"X\");\r\n\t\t\tlet xOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n\r\n\t\t\tlet yAxisFieldName: string = yAxis.axisFieldName;\r\n\t\t\tlet yField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(yAxisFieldName + \"Y\");\r\n\t\t\tlet yOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n\r\n\t\t\tthis._xField = xField;\r\n\t\t\tthis._yField = yField;\r\n\r\n\t\t\tif (this.dataFields[xOpenField]) {\r\n\t\t\t\tthis._xOpenField = xOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataFields[yOpenField]) {\r\n\t\t\t\tthis._yOpenField = yOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tif (!this._yOpenField) {\r\n\t\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._xValueFields = [];\r\n\t\t\tthis._yValueFields = [];\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xOpenField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yOpenField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [axis description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param axis    Axis\r\n\t * @param fields  Fields (?)\r\n\t * @param field   Field\r\n\t */\r\n\tprotected addValueField<Key extends keyof this[\"_dataFields\"]>(axis: Axis, fields: Array<Key>, field: Key): void {\r\n\t\tif (axis instanceof ValueAxis) {\r\n\t\t\tif ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n\t\t\t\tfields.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets category field from the category axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setCategoryAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: CategoryAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets date field from the date axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setDateAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: DateAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.date;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs after-draw tasks, e.g. creates masks.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\tthis.createMask();\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\t\t// this mask from which we cut out ranges. does not work well if ranges overlap.\r\n\t\tif (this.mainContainer.mask) {\r\n\t\t\tlet path: string = this.getMaskPath();\r\n\r\n\t\t\t// @todo: this approach won't work well on circluar or other non x/y axes\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tif (range.axisFill.fillPath) {\r\n\t\t\t\t\trange.axisFill.validate();\r\n\t\t\t\t\tpath += range.axisFill.fillPath;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.mainContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength,\r\n\t\t\t\theight: this.yAxis.axisLength\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns axis data field to use.\r\n\t *\r\n\t * @param axis  Axis\r\n\t * @return Field name\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\tif (axis == this.xAxis) {\r\n\t\t\treturn this.xField;\r\n\t\t}\r\n\t\tif (axis == this.yAxis) {\r\n\t\t\treturn this.yField;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n\t\t\tthis._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n\t\t}\r\n\r\n\t\t// this helps date axis to check which baseInterval we should use\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.updateAxisBySeries();\r\n\t\t\tyAxis.updateAxisBySeries();\r\n\t\t}\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.postProcessSeriesDataItems(this);\r\n\t\t\tyAxis.postProcessSeriesDataItems(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange() {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.dataRangeInvalid) {\r\n\t\t\t\txAxis.validateDataRange();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.dataRangeInvalid) {\r\n\t\t\t\tyAxis.validateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.invalid) {\r\n\t\t\t\txAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.invalid) {\r\n\t\t\t\tyAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tthis.y = yAxis.pixelY;\r\n\t\t\tthis.x = xAxis.pixelX;\r\n\r\n\r\n\t\t\tthis._showBullets = true;\r\n\t\t\tlet minBulletDistance: number = this.minBulletDistance;\r\n\t\t\tif ($type.isNumber(minBulletDistance)) {\r\n\t\t\t\tif (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n\t\t\t\t\tthis._showBullets = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateTooltip();\r\n\r\n\t\tif ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet maskBullets = this.maskBullets;\r\n\t\tif (chart && maskBullets) {\r\n\t\t\tif (chart.className == \"XYChart\") {\r\n\t\t\t\tif (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n\t\t\t\t\tif (this.yAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n\t\t\t\t\tif (this.xAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tthis.setXAxis(axis);\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._xAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._xAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._xAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._xAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.xAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no X axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xAxis = axis;\r\n\t\t\t}\r\n\t\t\treturn this._xAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tthis.setYAxis(axis);\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._yAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._yAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._yAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tif (axis.chart instanceof XYChart) {\r\n\t\t\t\taxis.chart.handleYAxisSet(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._yAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.yAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no Y axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.yAxis = axis;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._yAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t *\r\n\t * @param value  Axis\r\n\t */\r\n\tpublic set baseAxis(value: Axis) {\r\n\t\tif (this._baseAxis != value) {\r\n\t\t\tthis._baseAxis = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get baseAxis(): Axis {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this._baseAxis && xAxis && yAxis) {\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._baseAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._baseAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number, skipRaw?: boolean): void {\r\n\t\tsuper.addData(rawDataItem, removeCount, skipRaw);\r\n\t\tconst scrollbarSeries = this.scrollbarSeries;\r\n\t\tif (scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n\t\t\tthis.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tsuper.setData(value);\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.setData(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the chart use particular data set.\r\n\t *\r\n\t * If `id` is not provided or there is no such data set, main data will be\r\n\t * used.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @param  id  Data set id\r\n\t */\r\n\tpublic setDataSet(id: string): boolean {\r\n\t\tlet changed = super.setDataSet(id);\r\n\r\n\t\tif (changed) {\r\n\r\n\t\t\tthis._dataSetChanged = true;\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tthis.resetExtremes();\r\n\r\n\t\t\tif (dataItems && dataItems.length > 0) {\r\n\r\n\t\t\t\tlet xAxis = this.xAxis;\r\n\t\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\t\tthis._prevStartIndex = undefined;\r\n\t\t\t\tthis._prevEndIndex = undefined;\r\n\t\t\t\tthis._startIndex = undefined;\r\n\t\t\t\tthis._endIndex = undefined;\r\n\r\n\t\t\t\tif (!this.appeared) {\r\n\t\t\t\t\tthis.processValues(false); // this will slow down!\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes values after data items' were added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tpublic processValues(working: boolean): void {\r\n\t\tsuper.processValues(working);\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet minX = Infinity;\r\n\t\tlet maxX = - Infinity;\r\n\r\n\t\tlet minY = Infinity;\r\n\t\tlet maxY = - Infinity;\r\n\r\n\t\tlet startIndex = this.startIndex;\r\n\t\tlet endIndex = this.endIndex;\r\n\r\n\t\tlet workingStartIndex = startIndex;\r\n\t\tlet workingEndIndex = endIndex;\r\n\r\n\t\tif (!working) {\r\n\t\t\tstartIndex = 0;\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\tif (this.stacked) {\r\n\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// this is mainly for value axis to calculate total and perecent.total of each series category\r\n\t\txAxis.processSeriesDataItems();\r\n\t\tyAxis.processSeriesDataItems();\r\n\r\n\t\tlet xAxisId: string = xAxis.uid;\r\n\t\tlet yAxisId: string = yAxis.uid;\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!working) {\r\n\t\t\tif (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\r\n\t\t\t\tlet stackedSeries = this.stackedSeries;\r\n\t\t\t\tif (stackedSeries) {\r\n\t\t\t\t\tif (stackedSeries.isDisposed()) {\r\n\t\t\t\t\t\tthis.stackedSeries = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstackedSeries.processValues(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n\t\t\tminX = Infinity;\r\n\t\t\tmaxX = - Infinity;\r\n\r\n\t\t\tminY = Infinity;\r\n\t\t\tmaxY = - Infinity;\r\n\r\n\t\t\tfor (let i = workingStartIndex; i < workingEndIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\r\n\t\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\t\tif (this.stacked) {\r\n\t\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n\t\t\tthis._smin.setKey(xAxisId, minX);\r\n\t\t\tthis._smax.setKey(xAxisId, maxX);\r\n\t\t\tthis._smin.setKey(yAxisId, minY);\r\n\t\t\tthis._smax.setKey(yAxisId, maxY);\r\n\r\n\t\t\tif (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n\t\t\t\t/// new, helps to handle issues with change percent\r\n\t\t\t\tlet changed = false;\r\n\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(yAxisId);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(yAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.start == 0 && this.end == 1) {\r\n\t\t\t\t\t// yes, its ok. otherwise min/max won't be updated when zooming out\r\n\t\t\t\t\tthis._dataSetChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!working && this.stacked) {\r\n\t\t\tthis.processValues(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number) {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis.returnBulletDefaultState();\r\n\t\tthis._prevTooltipDataItem = undefined;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific position.\r\n\t *\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): IPoint {\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"];\r\n\r\n\t\tif (this.visible && !this.isHiding && !this.isShowing) {\r\n\r\n\t\t\tlet xAxis: Axis = this._xAxis.get();\r\n\t\t\tlet yAxis: Axis = this._yAxis.get();\r\n\r\n\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n\t\t\t}\r\n\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n\t\t\t}\r\n\r\n\t\t\tlet point = this.showTooltipAtDataItem(dataItem);\r\n\r\n\t\t\tif (point) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\t// so that if tooltip is shown on columns or bullets for it not to be hidden\r\n\t\t\tif (!this.tooltipText && !this.tooltipHTML) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.hideTooltip();\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific dataItem.\r\n\t *\r\n\t * @param dataItem\r\n\t */\r\n\tpublic showTooltipAtDataItem(dataItem: this[\"_dataItem\"]): IPoint {\r\n\r\n\t\tlet cursor = <XYCursor>this.chart.cursor;\r\n\t\tif (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n\t\t\tthis.hideTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.returnBulletDefaultState(dataItem);\r\n\t\tif (dataItem && dataItem.visible) {\r\n\r\n\t\t\tthis.updateLegendValue(dataItem);\r\n\t\t\tif (this.cursorTooltipEnabled) {\r\n\t\t\t\tthis.tooltipDataItem = dataItem;\r\n\r\n\t\t\t\t// todo: add tooltipXField and tooltipYField.\r\n\t\t\t\tlet tooltipXField = this.tooltipXField;\r\n\t\t\t\tlet tooltipYField = this.tooltipYField;\r\n\r\n\t\t\t\tif ($type.hasValue((<any>dataItem)[tooltipXField]) && $type.hasValue((<any>dataItem)[tooltipYField])) {\r\n\r\n\t\t\t\t\tlet tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n\r\n\t\t\t\t\tif (tooltipPoint) {\r\n\r\n\t\t\t\t\t\tif (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.tooltipX = tooltipPoint.x;\r\n\t\t\t\t\t\t\tthis.tooltipY = tooltipPoint.y;\r\n\r\n\t\t\t\t\t\t\tif (this._prevTooltipDataItem != dataItem) {\r\n\r\n\t\t\t\t\t\t\t\tthis.dispatchImmediately(\"tooltipshownat\", {\r\n\t\t\t\t\t\t\t\t\ttype: \"tooltipshownat\",\r\n\t\t\t\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tthis._prevTooltipDataItem = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.cursorHoverEnabled) {\r\n\t\t\t\t\t\t\t\tfor (let sprite of dataItem.sprites) {\r\n\t\t\t\t\t\t\t\t\tif (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (!sprite.interactions.isRealHover) {\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.dispatchImmediately(\"over\");\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.interactions.isRealHover = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsprite.isHover = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.showTooltip()) {\r\n\t\t\t\t\t\t\t\treturn $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLegendValue(dataItem, true);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns default state to bullets when tooltip is shown at some other data\r\n\t * item or hidden\r\n\t */\r\n\tprotected returnBulletDefaultState(dataItem?: XYSeriesDataItem) {\r\n\t\tif (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n\t\t\tfor (let sprite of this._prevTooltipDataItem.sprites) {\r\n\t\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\t\tconst fireEvent = sprite.interactions.isRealHover;\r\n\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\tsprite.dispatchImmediately(\"out\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._prevTooltipDataItem = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Bullet): boolean {\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bulletTemplate.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bulletTemplate.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tif ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (bulletTemplate.disabled) {\r\n\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\tif (dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tif (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n\t\t\tthis.showTooltipAtDataItem(<this[\"_dataItem\"]>this.tooltipDataItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet) {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: XYSeriesDataItem = <XYSeriesDataItem>bullet.dataItem;\r\n\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bullet.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bullet.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bulletLocationX: number = this.getBulletLocationX(bullet, xField);\r\n\t\t\tlet bulletLocationY: number = this.getBulletLocationY(bullet, yField);\r\n\r\n\t\t\tlet point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n\t\t\tif (point) {\r\n\t\t\t\tlet xOpenField = this.xOpenField;\r\n\t\t\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\t\t\tlet positionX: number;\r\n\t\t\t\tlet positionY: number;\r\n\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = xAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = xAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof CategoryAxis) {\r\n\r\n\t\t\t\t\tlet rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n\t\t\t\t\tlet leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.categoryToPosition((<any>dataItem)[xField], rightLocation);\r\n\t\t\t\t\tlet openPositionX: number;\r\n\r\n\r\n\t\t\t\t\tif (xOpenField) {\r\n\t\t\t\t\t\topenPositionX = xAxis.categoryToPosition((<any>dataItem)[xOpenField], leftLocation);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openPositionX)) {\r\n\t\t\t\t\t\topenPositionX = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = yAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = yAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\r\n\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], bulletLocationY);\r\n\r\n\t\t\t\t\tlet topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n\t\t\t\t\tlet bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], topLocation);\r\n\t\t\t\t\tlet openPositionY: number;\r\n\r\n\t\t\t\t\tif (yOpenField) {\r\n\t\t\t\t\t\topenPositionY = yAxis.categoryToPosition((<any>dataItem)[yOpenField], bottomLocation);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.isNumber(openPositionY)) {\r\n\t\t\t\t\t\topenPositionY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tthis.positionBulletReal(bullet, positionX, positionY);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbullet.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tbullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n\t\tbullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationX;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationY;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * This method must be called if you update Series' data fields that might\r\n\t * affect stacking of the series.\r\n\t *\r\n\t * Since individual `dataField` changes are not being monitored, you need\r\n\t * todo it manually for changes to take affect.\r\n\t *\r\n\t * @since 4.7.21\r\n\t */\r\n\tpublic updateStacking(): void {\r\n\t\tthis.invalidateDataItems();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this.baseAxis) {\r\n\t\t\t\t\tseries.stackedSeries = undefined;\r\n\t\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t * \r\n\t * Note: proper stacking is only possible if series have the same number\r\n\t * of data items. To ensure this, don't set data directly on series\r\n\t * but do this on chart instead.\r\n\t *\r\n\t * @default false\r\n\t * @param stacked  Can be stacked?\r\n\t */\r\n\tpublic set stacked(stacked: boolean) {\r\n\t\tif (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n\t\t\tthis.updateStacking();\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (!stacked) {\r\n\t\t\t\tlet field: string;\r\n\r\n\t\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.xField;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.yField;\r\n\t\t\t\t}\r\n\t\t\t\tif (field) {\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Can be stacked?\r\n\t */\r\n\tpublic get stacked(): boolean {\r\n\t\treturn this.getPropertyValue(\"stacked\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tif(this.isHidden){\r\n\t\t\tif (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.yAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.yAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t\tif (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.xAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.xAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fields: string[];\r\n\t\tif (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet delay: number = 0;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t\tdelay = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tanim = dataItem.show(realDuration, delay, fields);\r\n\t\t});\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\tif (this.hidden) {\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\tthis.hidden = false;\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[];\r\n\t\tlet value: number;\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\r\n\t\tif (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = xAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = xAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = yAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = yAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if ($type.hasValue(fields)) {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (realDuration == 0) {\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t\t}\r\n\t\t\t\tanim = dataItem.hide(realDuration, delay, value, fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.hide(interpolationDuration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\t// helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n\t\tthis.validateDataElements();\r\n\t\t//}\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemWorkingValueChange(dataItem, name);\r\n\r\n\t\t// to calculate stack values\r\n\t\tlet axisSeries: List<XYSeries> = <List<XYSeries>>this.baseAxis.series;\r\n\r\n\t\t$iter.each(axisSeries.iterator(), (series) => {\r\n\t\t\tif (series.stacked || series.stackedSeries) {\r\n\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [getStackValue description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic getStackValue(dataItem: this[\"_dataItem\"], working?: boolean): void {\r\n\t\t// todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n\t\t// if this series is not stacked or new stack begins, return.\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this.stacked || !xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n\t\t\tlet chart: XYChart = this.chart;\r\n\t\t\tlet index: number = chart.series.indexOf(this);\r\n\r\n\t\t\tlet field: string;\r\n\r\n\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.xField;\r\n\t\t\t}\r\n\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!field) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\r\n\t\t\t$iter.eachContinue(chart.series.range(0, index).backwards().iterator(), (prevSeries) => {\r\n\t\t\t\t// stacking is only possible if both axes are the same\r\n\t\t\t\tif (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == this.className) {\r\n\t\t\t\t\t// saving value\r\n\t\t\t\t\tprevSeries.stackedSeries = this;\r\n\r\n\t\t\t\t\tlet prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n\r\n\t\t\t\t\tif (prevDataItem && prevDataItem.hasValue(this._xValueFields) && prevDataItem.hasValue(this._yValueFields)) {\r\n\r\n\t\t\t\t\t\tlet value = dataItem.getValue(field);\r\n\t\t\t\t\t\tlet prevValue: number;\r\n\t\t\t\t\t\tlet prevRealValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\r\n\t\t\t\t\t\tif (working) {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getWorkingValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.stackToNegative) {\r\n\t\t\t\t\t\t\tif ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(!prevSeries.stacked){\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!prevSeries.stacked) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This setting indicates how negative values are treated in stacked stacked\r\n\t * series.\r\n\t *\r\n\t * If set to `true` (default), negative values will stack on the base line.\r\n\t *\r\n\t * If set to `false`, negative value will stack in relation to the previous\r\n\t * value in the stack.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Stack to base line\r\n\t */\r\n\tpublic set stackToNegative(value: boolean) {\r\n\t\tthis.setPropertyValue(\"stackToNegative\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stack to base line\r\n\t */\r\n\tpublic get stackToNegative(): boolean {\r\n\t\treturn this.getPropertyValue(\"stackToNegative\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * [xOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xOpenField(): string {\r\n\t\treturn this._xOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yOpenField(): string {\r\n\t\treturn this._yOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipXField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipXField(value: string) {\r\n\t\tthis._tooltipXField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipXField(): string {\r\n\t\tif (this._tooltipXField) {\r\n\t\t\treturn this._tooltipXField;\r\n\t\t}\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipYField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipYField(value: string) {\r\n\t\tthis._tooltipYField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipYField(): string {\r\n\t\tif (this._tooltipYField) {\r\n\t\t\treturn this._tooltipYField;\r\n\t\t}\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic min(axis: ValueAxis): number {\r\n\t\treturn this._tmin.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic max(axis: ValueAxis): number {\r\n\t\treturn this._tmax.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMin(axis: ValueAxis): number {\r\n\t\tlet value = this._smin.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.min(axis);\r\n\t\t//}\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMax(axis: ValueAxis): number {\r\n\t\tlet value = this._smax.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.max(axis);\r\n\t\t//}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up base axes\r\n\t\t\tif ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.baseAxis)) {\r\n\t\t\t\t\tconfig.baseAxis = this.map.getKey(config.baseAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n\t\t\t\t\tdelete config.baseAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\t\t\t\t\tif (!$type.hasValue(range.type)) {\r\n\t\t\t\t\t\trange.type = \"AxisDataItem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.axis);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse date fields based on the series fields\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: XYSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string): IPoint {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tlet x: number = this.xAxis.getX(dataItem, xKey, locationX);\r\n\t\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY);\r\n\r\n\t\t\tx = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\t\ty = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t\treturn { x: x, y: y };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates item reader text based on the type and set up of axis.\r\n\t */\r\n\tprotected updateItemReaderText(): void {\r\n\r\n\t\t// We do not want to overwrite this if `itemReaderText` was changed by\r\n\t\t// user code.\r\n\t\tif (this._itemReaderTextChanged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet text = \"\"\r\n\t\t$object.each(this.dataFields, (key, val) => {\r\n\t\t\ttext += \"{\" + key + \"} \";\r\n\t\t});\r\n\t\tthis.itemReaderText = text;\r\n\t\tthis._itemReaderTextChanged = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * If set to `true` (default), the tooltips set for all series item's\r\n\t * elements like columns and bullets will be automatically shown\r\n\t * when [[XYCursor]] passes over category/date, even if its not hovered\r\n\t * directly over the item.\r\n\t *\r\n\t * Set this to `false` to disable such behavior and display item-specific\r\n\t * tooltips only when hovered directly over them\r\n\t *\r\n\t * @default true\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t *\r\n\t * If set to `true` (default) and chart cursor is enabled on th chart,\r\n\t * hovering over date/category will trigger hover states on related Series\r\n\t * items like bullets and columns.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.2\r\n\t * @param  value  Hover enabled?\r\n\t */\r\n\tpublic set cursorHoverEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorHoverEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hover enabled?\r\n\t */\r\n\tpublic get cursorHoverEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorHoverEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Exclude from totals?\r\n\t */\r\n\tpublic set excludeFromTotal(value: boolean) {\r\n\t\tthis.setPropertyValue(\"excludeFromTotal\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from totals?\r\n\t */\r\n\tpublic get excludeFromTotal(): boolean {\r\n\t\treturn this.getPropertyValue(\"excludeFromTotal\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming).\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' bullets should be masked.\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t * @param  value  Mask bullets?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value)\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.axisBulletsContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullets?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.groupFields = $utils.copyProperties(source.groupFields, {});\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n"]},"metadata":{},"sourceType":"module"}