{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Axis } from \"./Axis\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\n\nvar CategoryAxis =\n/** @class */\nfunction (_super) {\n  __extends(CategoryAxis, _super);\n\n  function CategoryAxis() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_frequency\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_itemMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    return _this;\n  }\n\n  Object.defineProperty(CategoryAxis.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n      this.fields.push(\"category\");\n      this.setPrivateRaw(\"name\", \"category\");\n      this.addTag(\"category\");\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var len = this.dataItems.length;\n      var i = 0;\n\n      if (this._valuesDirty) {\n        $array.each(this.dataItems, function (dataItem) {\n          dataItem.setRaw(\"index\", i);\n          _this._itemMap[dataItem.get(\"category\")] = dataItem;\n          i++;\n        });\n        this.setPrivateRaw(\"maxZoomFactor\", len);\n      }\n\n      this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n      this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n      if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        if (this.dataItems.length > 0) {\n          this._handleRangeChange();\n\n          this._prepareAxisItems();\n\n          this._updateAxisRanges();\n        }\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_handleRangeChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $array.each(this.series, function (series) {\n        var startCategory = _this.dataItems[_this.startIndex()].get(\"category\");\n\n        var endCategory = _this.dataItems[_this.endIndex() - 1].get(\"category\");\n\n        var baseAxis = series.get(\"baseAxis\");\n        var xAxis = series.get(\"xAxis\");\n        var yAxis = series.get(\"yAxis\");\n\n        if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n          series._markDirtyAxes();\n        } else if (baseAxis === _this) {\n          var key = void 0;\n          var openKey = void 0;\n          var otherAxis = yAxis;\n\n          if (xAxis === baseAxis) {\n            if (series.get(\"categoryXField\")) {\n              key = \"categoryX\";\n            }\n\n            if (series.get(\"openCategoryXField\")) {\n              openKey = \"openCategoryX\";\n            }\n          } else if (yAxis === baseAxis) {\n            if (series.get(\"categoryYField\")) {\n              key = \"categoryY\";\n            }\n\n            if (series.get(\"openCategoryYField\")) {\n              openKey = \"openCategoryY\";\n            }\n\n            otherAxis = xAxis;\n          }\n\n          if (otherAxis.className == \"ValueAxis\") {\n            if (key || openKey) {\n              var startDataItem = void 0;\n              var endDataItem = void 0;\n\n              for (var i = 0, len = series.dataItems.length; i < len; i++) {\n                var dataItem = series.dataItems[i];\n\n                if (key) {\n                  if (dataItem.get(key) === startCategory) {\n                    startDataItem = dataItem;\n                    break;\n                  }\n                }\n\n                if (openKey) {\n                  if (dataItem.get(openKey) === startCategory) {\n                    startDataItem = dataItem;\n                    break;\n                  }\n                }\n              }\n\n              for (var i = series.dataItems.length - 1; i >= 0; i--) {\n                var dataItem = series.dataItems[i];\n\n                if (key) {\n                  if (dataItem.get(key) === endCategory) {\n                    endDataItem = dataItem;\n                    break;\n                  }\n                }\n\n                if (openKey) {\n                  if (dataItem.get(openKey) === endCategory) {\n                    endDataItem = dataItem;\n                    break;\n                  }\n                }\n              }\n\n              if (startDataItem) {\n                series.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n              }\n\n              if (endDataItem) {\n                series.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n              }\n            }\n          }\n\n          series._markDirtyAxes(); // must be outside\n\n        }\n      });\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareAxisItems\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var renderer = this.get(\"renderer\");\n      var len = this.dataItems.length;\n      var startIndex = this.startIndex();\n\n      if (startIndex > 0) {\n        startIndex--;\n      }\n\n      var endIndex = this.endIndex();\n\n      if (endIndex < len) {\n        endIndex++;\n      }\n\n      var maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\n      var frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n      startIndex = Math.floor(startIndex / frequency) * frequency;\n      this._frequency = frequency;\n\n      for (var j = 0; j < len; j++) {\n        this.dataItems[j].hide();\n      }\n\n      var f = this.dataItems[startIndex].get(\"index\", 0);\n\n      for (var i = startIndex; i < endIndex; i = i + frequency) {\n        var dataItem = this.dataItems[i];\n\n        this._createAssets(dataItem, []);\n\n        if (dataItem.isHidden()) {\n          dataItem.show();\n        }\n\n        this._prepareDataItem(dataItem, f, frequency);\n\n        f++;\n      }\n\n      this._updateGhost();\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, fillIndex, count) {\n      var renderer = this.get(\"renderer\");\n      var categoryLocation = dataItem.get(\"categoryLocation\", 0);\n      var endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n      var index = dataItem.get(\"index\");\n\n      if (!$type.isNumber(index)) {\n        index = this.categoryToIndex(dataItem.get(\"category\"));\n      }\n\n      var position = this.indexToPosition(index, categoryLocation);\n      var endCategory = dataItem.get(\"endCategory\");\n      var endIndex;\n\n      if (endCategory) {\n        endIndex = this.categoryToIndex(endCategory);\n\n        if (!$type.isNumber(endIndex)) {\n          endIndex = index;\n        }\n      } else {\n        endIndex = index;\n      }\n\n      var endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n      var fillEndIndex;\n      var fillEndPosition;\n\n      if (dataItem.get(\"isRange\")) {\n        fillEndIndex = endIndex;\n      } else {\n        fillEndIndex = index + this._frequency - 1;\n      }\n\n      fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n      renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n      renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n      renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n      renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n      this._processBullet(dataItem);\n\n      renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n      var fillRule = this.get(\"fillRule\");\n\n      if (fillRule) {\n        fillRule(dataItem, fillIndex);\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"startIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"endIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"baseValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"basePosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return 0;\n    }\n  });\n  /**\r\n   * Returns X coordinate in pixels corresponding to specific category index.\r\n   *\r\n   * @param   value  Index\r\n   * @return         X coordinate\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var axisDataItem = this._itemMap[value];\n\n      if (axisDataItem) {\n        return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * Returns Y coordinate in pixels corresponding to specific category index.\r\n   *\r\n   * @param   value  Index\r\n   * @return         Y coordinate\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var axisDataItem = this._itemMap[value];\n\n      if (axisDataItem) {\n        return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      var category = dataItem.get(field);\n      var axisDataItem = this._itemMap[category];\n\n      if (axisDataItem) {\n        return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      var category = dataItem.get(field);\n      var axisDataItem = this._itemMap[category];\n\n      if (axisDataItem) {\n        return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n    }\n  });\n  /**\r\n   * Converts category index to a relative position.\r\n   *\r\n   * `location` indicates relative position within category: 0 - start, 1 - end.\r\n   *\r\n   * If not set, will use middle (0.5) of the category.\r\n   *\r\n   * @param   index     Index\r\n   * @param   location  Location\r\n   * @return            Index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"indexToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, location) {\n      if (!$type.isNumber(location)) {\n        location = 0.5;\n      }\n\n      var len = this.dataItems.length;\n      var startLocation = this.get(\"startLocation\", 0);\n      var endLocation = this.get(\"endLocation\", 1);\n      len -= startLocation;\n      len -= 1 - endLocation;\n      var position = (index + location - startLocation) / len;\n      var dataItem = this.dataItems[index];\n\n      if (dataItem) {\n        position += dataItem.get(\"deltaPosition\", 0);\n      }\n\n      return position;\n    }\n  });\n  /**\r\n   * Returns an index of a category.\r\n   *\r\n   * @param   category  Category to look up\r\n   * @return            Index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"categoryToIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (category) {\n      var dataItem = this._itemMap[category];\n\n      if (dataItem) {\n        return dataItem.get(\"index\");\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"dataItemToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      return this.indexToPosition(dataItem.get(\"index\"));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"roundAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, location) {\n      return this.indexToPosition(this.axisPositionToIndex(position), location);\n    }\n  });\n  /**\r\n   * Returns an index of the category that corresponds to specific pixel\r\n   * position within axis.\r\n   *\r\n   * @param position  Position (px)\r\n   * @return Category index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"axisPositionToIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var len = this.dataItems.length;\n      return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n    }\n  });\n  /**\r\n   * Returns text to be used in an axis tooltip for specific relative position.\r\n   *\r\n   * @param   position  Position\r\n   * @return            Tooltip text\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      //@todo number formatter + tag\n      var dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n      if (dataItem) {\n        var label = dataItem.get(\"label\");\n\n        if (label) {\n          return populateString(label, this.get(\"tooltipText\", \"\"));\n        }\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_updateTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\n      tooltip.label.text.markDirtyText();\n    }\n  });\n  /**\r\n   * Returns a data item from series that is closest to the `position`.\r\n   *\r\n   * @param   series    Series\r\n   * @param   position  Relative position\r\n   * @return            Data item\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getSeriesItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series, position) {\n      if (this.dataItems.length > 0) {\n        var fieldName = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\n        var index = this.axisPositionToIndex(position); // try simple first\n\n        var seriesDataItem = series.dataItems[index];\n        var axisDataItem = this.dataItems[index];\n        var category = axisDataItem.get(\"category\");\n\n        if (seriesDataItem && axisDataItem) {\n          if (seriesDataItem.get(fieldName) === category) {\n            return seriesDataItem;\n          }\n        } // if not found, try looking\n\n\n        for (var i = 0, len = series.dataItems.length; i < len; i++) {\n          var dataItem = series.dataItems[i];\n\n          if (dataItem.get(fieldName) === category) {\n            return dataItem;\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * Zooms the axis to specific `start` and `end` indexes.\r\n   *\r\n   * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n   *\r\n   * @param  start     Start index\r\n   * @param  end       End index\r\n   * @param  duration  Duration in milliseconds\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"zoomToIndexes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (start, end, duration) {\n      var len = this.dataItems.length;\n      this.zoom(start / len, end / len, duration);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"zoomToCategories\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (startCategory, endCategory, duration) {\n      this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n    }\n  });\n  Object.defineProperty(CategoryAxis, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"CategoryAxis\"\n  });\n  Object.defineProperty(CategoryAxis, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Axis.classNames.concat([CategoryAxis.className])\n  });\n  return CategoryAxis;\n}(Axis);\n\nexport { CategoryAxis };","map":{"version":3,"mappings":"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","names":["Axis","$array","$type","$math","$utils","populateString","__extends","Object","_settings","themeTags","mergeTags","fields","push","setPrivateRaw","addTag","_super","_afterNew","call","_prepareChildren","len","dataItems","length","i","_valuesDirty","each","dataItem","setRaw","_this","_itemMap","get","Math","max","round","min","_sizeDirty","isDirty","isPrivateDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","CategoryAxis","_markDirtyAxes","key","openKey","otherAxis","className","startDataItem","endDataItem","setPrivate","indexOf","renderer","maxCount","axisLength","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","hide","f","_createAssets","isHidden","show","_prepareDataItem","_updateGhost","fillIndex","count","categoryLocation","endCategoryLocation","index","isNumber","categoryToIndex","position","indexToPosition","endPosition","fillEndIndex","fillEndPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","getPrivate","value","axisDataItem","positionToCoordinate","NaN","field","cellLocation","_axisLocation","category","getDataItemPositionX","getDataItemPositionY","location","startLocation","endLocation","axisPositionToIndex","fitToRange","label","tooltip","_setDataItem","text","markDirtyText","fieldName","seriesDataItem","start","end","duration","zoom","zoomToIndexes","classNames","concat"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/axes/CategoryAxis.ts"],"sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}