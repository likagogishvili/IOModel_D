{"ast":null,"code":"/**\r\n * @ignore\r\n */\nexport function compare(left, right) {\n  if (left === right) {\n    return 0;\n  } else if (left < right) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function compareArray(left, right, f) {\n  var leftLength = left.length;\n  var rightLength = right.length;\n  var length = Math.min(leftLength, rightLength);\n\n  for (var i = 0; i < length; ++i) {\n    var order = f(left[i], right[i]);\n\n    if (order !== 0) {\n      return order;\n    }\n  }\n\n  return compare(leftLength, rightLength);\n}\n/**\r\n * @ignore\r\n */\n\nexport function reverse(order) {\n  if (order < 0) {\n    return 1;\n  } else if (order > 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function compareNumber(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n}","map":{"version":3,"mappings":"AAEA;;;AAGA,OAAM,SAAUA,OAAV,CAAuDC,IAAvD,EAAgEC,KAAhE,EAAwE;EAC7E,IAAID,IAAI,KAAKC,KAAb,EAAoB;IACnB,OAAO,CAAP;EAEA,CAHD,MAGO,IAAID,IAAI,GAAGC,KAAX,EAAkB;IACxB,OAAO,CAAC,CAAR;EAEA,CAHM,MAGA;IACN,OAAO,CAAP;EACA;AACD;AAED;;;;AAGA,OAAM,SAAUC,YAAV,CAA0BF,IAA1B,EAA8CC,KAA9C,EAAmEE,CAAnE,EAA2F;EAChG,IAAMC,UAAU,GAAGJ,IAAI,CAACK,MAAxB;EACA,IAAMC,WAAW,GAAGL,KAAK,CAACI,MAA1B;EAEA,IAAMA,MAAM,GAAGE,IAAI,CAACC,GAAL,CAASJ,UAAT,EAAqBE,WAArB,CAAf;;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4B,EAAEI,CAA9B,EAAiC;IAChC,IAAMC,KAAK,GAAGP,CAAC,CAACH,IAAI,CAACS,CAAD,CAAL,EAAUR,KAAK,CAACQ,CAAD,CAAf,CAAf;;IAEA,IAAIC,KAAK,KAAK,CAAd,EAAiB;MAChB,OAAOA,KAAP;IACA;EACD;;EAED,OAAOX,OAAO,CAACK,UAAD,EAAaE,WAAb,CAAd;AACA;AAED;;;;AAGA,OAAM,SAAUK,OAAV,CAAkBD,KAAlB,EAA8B;EACnC,IAAIA,KAAK,GAAG,CAAZ,EAAe;IACd,OAAO,CAAP;EAEA,CAHD,MAGO,IAAIA,KAAK,GAAG,CAAZ,EAAe;IACrB,OAAO,CAAC,CAAR;EAEA,CAHM,MAGA;IACN,OAAO,CAAP;EACA;AACD;AAED;;;;AAGA,OAAM,SAAUE,aAAV,CAAwBC,CAAxB,EAAmCC,CAAnC,EAA4C;EACjD,IAAID,CAAC,KAAKC,CAAV,EAAa;IACZ,OAAO,CAAP;EAEA,CAHD,MAGO,IAAID,CAAC,GAAGC,CAAR,EAAW;IACjB,OAAO,CAAC,CAAR;EAEA,CAHM,MAGA;IACN,OAAO,CAAP;EACA;AACD","names":["compare","left","right","compareArray","f","leftLength","length","rightLength","Math","min","i","order","reverse","compareNumber","a","b"],"sourceRoot":"","sources":["../../../../../src/.internal/core/util/Order.ts"],"sourcesContent":["export type Order = -1 | 0 | 1;\n\n/**\n * @ignore\n */\nexport function compare<A extends string | number | boolean>(left: A, right: A): Order {\n\tif (left === right) {\n\t\treturn 0;\n\n\t} else if (left < right) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareArray<A>(left: ArrayLike<A>, right: ArrayLike<A>, f: (x: A, y: A) => Order): Order {\n\tconst leftLength = left.length;\n\tconst rightLength = right.length;\n\n\tconst length = Math.min(leftLength, rightLength);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst order = f(left[i], right[i]);\n\n\t\tif (order !== 0) {\n\t\t\treturn order;\n\t\t}\n\t}\n\n\treturn compare(leftLength, rightLength);\n}\n\n/**\n * @ignore\n */\nexport function reverse(order: Order): Order {\n\tif (order < 0) {\n\t\treturn 1;\n\n\t} else if (order > 0) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareNumber(a: number, b: number): Order {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}