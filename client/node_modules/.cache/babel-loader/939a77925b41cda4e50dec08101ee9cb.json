{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Scrollbar } from \"./Scrollbar\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n\n  function Slider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Slider.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._addOrientationClass();\n\n      _super.prototype._afterNew.call(this);\n\n      this.endGrip.setPrivate(\"visible\", false);\n      this.thumb.setPrivate(\"visible\", false);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Slider.prototype, \"updateGrips\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.updateGrips.call(this);\n\n      var startGrip = this.startGrip;\n      this.endGrip.setAll({\n        x: startGrip.x(),\n        y: startGrip.y()\n      });\n      this.setRaw(\"end\", this.get(\"start\"));\n    }\n  });\n  Object.defineProperty(Slider, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Slider\"\n  });\n  Object.defineProperty(Slider, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Scrollbar.classNames.concat([Slider.className])\n  });\n  return Slider;\n}(Scrollbar);\n\nexport { Slider };","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAAmF,aAAnF;AAWA;;;;;AAIA;AAAA;AAAA;EAA4BC;;EAA5B;;EA2BC;;;;;;WAjBA;MACC,KAAKC,oBAAL;;MACAC,iBAAMC,SAAN,CAAeC,IAAf,CAAe,IAAf;;MAEA,KAAKC,OAAL,CAAaC,UAAb,CAAwB,SAAxB,EAAmC,KAAnC;MACA,KAAKC,KAAL,CAAWD,UAAX,CAAsB,SAAtB,EAAiC,KAAjC;IACA;;EAED;;;;;;;;WAGA;MACCJ,iBAAMM,WAAN,CAAiBJ,IAAjB,CAAiB,IAAjB;;MACA,IAAMK,SAAS,GAAG,KAAKA,SAAvB;MACA,KAAKJ,OAAL,CAAaK,MAAb,CAAoB;QAAEC,CAAC,EAAEF,SAAS,CAACE,CAAV,EAAL;QAAoBC,CAAC,EAAEH,SAAS,CAACG,CAAV;MAAvB,CAApB;MACA,KAAKC,MAAL,CAAY,KAAZ,EAAmB,KAAKC,GAAL,CAAS,OAAT,CAAnB;IACA;;EApBDC;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0ChB,SAAS,CAACiB,UAAV,CAAqBC,MAArB,CAA4B,CAACC,MAAM,CAACC,SAAR,CAA5B;EAA1C;EAoBD;AAAC,CA3BD,CAA4BpB,SAA5B;;SAAamB","names":["Scrollbar","__extends","_addOrientationClass","_super","_afterNew","call","endGrip","setPrivate","thumb","updateGrips","startGrip","setAll","x","y","setRaw","get","Object","classNames","concat","Slider","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Slider.ts"],"sourcesContent":["import { Scrollbar, IScrollbarPrivate, IScrollbarSettings, IScrollbarEvents } from \"./Scrollbar\";\r\n\r\nexport interface ISliderSettings extends IScrollbarSettings {\r\n}\r\n\r\nexport interface ISliderPrivate extends IScrollbarPrivate {\r\n}\r\n\r\nexport interface ISliderEvents extends IScrollbarEvents {\r\n}\r\n\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\tdeclare public _settings: ISliderSettings;\r\n\tdeclare public _privateSettings: ISliderPrivate;\r\n\tdeclare public _events: ISliderEvents;\r\n\r\n\tpublic static className: string = \"Slider\";\r\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([Slider.className]);\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._addOrientationClass();\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.endGrip.setPrivate(\"visible\", false);\r\n\t\tthis.thumb.setPrivate(\"visible\", false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGrips() {\r\n\t\tsuper.updateGrips();\r\n\t\tconst startGrip = this.startGrip;\r\n\t\tthis.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n\t\tthis.setRaw(\"end\", this.get(\"start\"));\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}