{"ast":null,"code":"import { EventDispatcher } from \"./EventDispatcher\";\nimport { Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\n\nvar TemplateState =\n/** @class */\nfunction () {\n  function TemplateState(name, template, settings) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._name = name;\n    this._template = template;\n    this._settings = settings;\n  }\n\n  Object.defineProperty(TemplateState.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value; // TODO maybe only do this if the value changed ?\n\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._settings[key]; // TODO maybe only do this if the value changed ?\n\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      var _this = this;\n\n      $object.keys(settings).forEach(function (key) {\n        _this._settings[key] = settings[key];\n      });\n\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (other, seen) {\n      $object.each(this._settings, function (key, value) {\n        if (!seen[key] && !other._userSettings[key]) {\n          seen[key] = true;\n          other.setRaw(key, value);\n        }\n      });\n    }\n  });\n  return TemplateState;\n}();\n\nexport { TemplateState };\n\nvar TemplateStates =\n/** @class */\nfunction () {\n  function TemplateStates(template) {\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._template = template;\n  }\n\n  Object.defineProperty(TemplateStates.prototype, \"lookup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      return this._states[name];\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"create\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, settings) {\n      var state = this._states[name];\n\n      if (state) {\n        state.setAll(settings);\n        return state;\n      } else {\n        var state_1 = new TemplateState(name, this._template, settings);\n        this._states[name] = state_1;\n\n        this._template._stateChanged(name);\n\n        return state_1;\n      }\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      delete this._states[name];\n\n      this._template._stateChanged(name);\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      $object.each(this._states, function (key, value) {\n        var seen = state.states[key];\n\n        if (seen == null) {\n          seen = state.states[key] = {};\n        }\n\n        var other = entity.states.create(key, {});\n\n        value._apply(other, seen);\n      });\n    }\n  });\n  return TemplateStates;\n}();\n\nexport { TemplateStates };\n\nvar TemplateAdapters =\n/** @class */\nfunction () {\n  function TemplateAdapters() {\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n  }\n\n  Object.defineProperty(TemplateAdapters.prototype, \"add\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var callbacks = this._callbacks[key];\n\n      if (callbacks === undefined) {\n        callbacks = this._callbacks[key] = [];\n      }\n\n      callbacks.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(callbacks, callback);\n\n        if (callbacks.length === 0) {\n          delete _this._callbacks[key];\n        }\n      });\n    }\n  });\n  Object.defineProperty(TemplateAdapters.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var callbacks = this._callbacks[key];\n\n      if (callbacks !== undefined) {\n        delete this._callbacks[key];\n      }\n    }\n  });\n  Object.defineProperty(TemplateAdapters.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      var disposers = [];\n      $object.each(this._callbacks, function (key, callbacks) {\n        $array.each(callbacks, function (callback) {\n          disposers.push(entity.adapters.add(key, callback));\n        });\n      });\n      return new MultiDisposer(disposers);\n    }\n  });\n  return TemplateAdapters;\n}();\n\nexport { TemplateAdapters }; // TODO maybe extend from Properties ?\n\nvar Template =\n/** @class */\nfunction () {\n  function Template(settings, isReal) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    }); // TODO code duplication with Properties\n\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_entities\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateStates(this)\n    });\n    Object.defineProperty(this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateAdapters()\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    Object.defineProperty(this, \"setup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n\n    this._settings = settings;\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n\n\n  Object.defineProperty(Template, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      return new Template(settings, true);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n\n      if (this._settings[key] !== value) {\n        this.setRaw(key, value);\n\n        this._entities.forEach(function (entity) {\n          entity._setTemplateProperty(_this, key, value);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._settings) {\n        delete this._settings[key];\n\n        this._entities.forEach(function (entity) {\n          entity._removeTemplateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removeAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $object.each(this._settings, function (key, _value) {\n        _this.remove(key);\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"getPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._privateSettings[key];\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._privateSettings[key] = value;\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n\n      if (this._privateSettings[key] !== value) {\n        this.setPrivateRaw(key, value);\n\n        this._entities.forEach(function (entity) {\n          entity._setTemplatePrivateProperty(_this, key, value);\n        });\n      }\n\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._privateSettings) {\n        delete this._privateSettings[key];\n\n        this._entities.forEach(function (entity) {\n          entity._removeTemplatePrivateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var _this = this;\n\n      $object.each(value, function (key, value) {\n        _this.set(key, value);\n      });\n    }\n  }); // TODO code duplication with Properties\n\n  Object.defineProperty(Template.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var events = this._settingEvents[key];\n\n      if (events === undefined) {\n        events = this._settingEvents[key] = [];\n      }\n\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n\n        if (events.length === 0) {\n          delete _this._settingEvents[key];\n        }\n      });\n    }\n  }); // TODO code duplication with Properties\n\n  Object.defineProperty(Template.prototype, \"onPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var events = this._privateSettingEvents[key];\n\n      if (events === undefined) {\n        events = this._privateSettingEvents[key] = [];\n      }\n\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n\n        if (events.length === 0) {\n          delete _this._privateSettingEvents[key];\n        }\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      var disposers = [];\n      $object.each(this._settingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.on(key, event));\n        });\n      });\n      $object.each(this._privateSettingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.onPrivate(key, event));\n        });\n      });\n\n      this.states._apply(entity, state);\n\n      disposers.push(this.adapters._apply(entity));\n      disposers.push(entity.events.copyFrom(this.events));\n      return new MultiDisposer(disposers);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_setObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      this._entities.push(entity);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_removeObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      $array.remove(this._entities, entity);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_stateChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      this._entities.forEach(function (entity) {\n        entity._applyStateByKey(name);\n      });\n    }\n  });\n  return Template;\n}();\n\nexport { Template };","map":{"version":3,"mappings":"AAEA,SAASA,eAAT,QAAwC,mBAAxC;AACA,SAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,YAAnD;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;;AAEA;AAAA;AAAA;EAMC,uBAAYC,IAAZ,EAA0BC,QAA1B,EAAiDC,QAAjD,EAAkF;IALlFC;sBAAA;wBAAA;oBAAA;;IAAA;IAEAA;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;;IAAA;IAGC,KAAKC,KAAL,GAAaJ,IAAb;IACA,KAAKK,SAAL,GAAiBJ,QAAjB;IACA,KAAKK,SAAL,GAAiBJ,QAAjB;EACA;;;;;;WAID,UAAgDK,GAAhD,EAA0DC,QAA1D,EAAwE;MACvE,IAAMC,KAAK,GAAG,KAAKH,SAAL,CAAeC,GAAf,CAAd;;MAEA,IAAIE,KAAK,KAAKC,SAAd,EAAyB;QACxB,OAAOD,KAAP;MAEA,CAHD,MAGO;QACN,OAAOD,QAAP;MACA;IACD;;;;;;WAED,UAA6CD,GAA7C,EAAuDE,KAAvD,EAAiF;MAChF,KAAKH,SAAL,CAAeC,GAAf,IAAsBE,KAAtB,CADgF,CAEhF;;MACA,KAAKJ,SAAL,CAAeM,aAAf,CAA6B,KAAKP,KAAlC;IACA;;;;;;WAED,UAAmDG,GAAnD,EAA2D;MAC1D,OAAO,KAAKD,SAAL,CAAeC,GAAf,CAAP,CAD0D,CAE1D;;MACA,KAAKF,SAAL,CAAeM,aAAf,CAA6B,KAAKP,KAAlC;IACA;;;;;;WAED,UAAcF,QAAd,EAAyC;MAAzC;;MACCH,OAAO,CAACa,IAAR,CAAaV,QAAb,EAAuBW,OAAvB,CAA+B,UAACN,GAAD,EAAI;QAClCO,KAAI,CAACR,SAAL,CAAeC,GAAf,IAAsBL,QAAQ,CAACK,GAAD,CAA9B;MACA,CAFD;;MAIA,KAAKF,SAAL,CAAeM,aAAf,CAA6B,KAAKP,KAAlC;IACA;;;;;;WAED,UAAcW,KAAd,EAA+BC,IAA/B,EAA0D;MACzDjB,OAAO,CAACkB,IAAR,CAAa,KAAKX,SAAlB,EAA6B,UAACC,GAAD,EAAME,KAAN,EAAW;QACvC,IAAI,CAACO,IAAI,CAACT,GAAD,CAAL,IAAc,CAACQ,KAAK,CAACG,aAAN,CAAoBX,GAApB,CAAnB,EAA6C;UAC5CS,IAAI,CAACT,GAAD,CAAJ,GAAY,IAAZ;UACAQ,KAAK,CAACI,MAAN,CAAaZ,GAAb,EAAkBE,KAAlB;QACA;MACD,CALD;IAMA;;EACF;AAAC,CArDD;;;;AAwDA;AAAA;AAAA;EAIC,wBAAYR,QAAZ,EAAiC;IAHjCE;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;aAAuD;IAAvD;IAGC,KAAKE,SAAL,GAAiBJ,QAAjB;EACA;;;;;;WAED,UAAcD,IAAd,EAA0B;MACzB,OAAO,KAAKoB,OAAL,CAAapB,IAAb,CAAP;IACA;;;;;;WAED,UAAcA,IAAd,EAA4BE,QAA5B,EAA6D;MAC5D,IAAMmB,KAAK,GAAG,KAAKD,OAAL,CAAapB,IAAb,CAAd;;MAEA,IAAIqB,KAAJ,EAAW;QACVA,KAAK,CAACC,MAAN,CAAapB,QAAb;QACA,OAAOmB,KAAP;MAEA,CAJD,MAIO;QACN,IAAME,OAAK,GAAG,IAAIC,aAAJ,CAAkBxB,IAAlB,EAAwB,KAAKK,SAA7B,EAAwCH,QAAxC,CAAd;QACA,KAAKkB,OAAL,CAAapB,IAAb,IAAqBuB,OAArB;;QACA,KAAKlB,SAAL,CAAeM,aAAf,CAA6BX,IAA7B;;QACA,OAAOuB,OAAP;MACA;IACD;;;;;;WAED,UAAcvB,IAAd,EAA0B;MACzB,OAAO,KAAKoB,OAAL,CAAapB,IAAb,CAAP;;MACA,KAAKK,SAAL,CAAeM,aAAf,CAA6BX,IAA7B;IACA;;;;;;WAED,UAAcyB,MAAd,EAAyBJ,KAAzB,EAA6C;MAC5CtB,OAAO,CAACkB,IAAR,CAAa,KAAKG,OAAlB,EAA2B,UAACb,GAAD,EAAME,KAAN,EAAW;QACrC,IAAIO,IAAI,GAAGK,KAAK,CAACK,MAAN,CAAanB,GAAb,CAAX;;QAEA,IAAIS,IAAI,IAAI,IAAZ,EAAkB;UACjBA,IAAI,GAAGK,KAAK,CAACK,MAAN,CAAanB,GAAb,IAAoB,EAA3B;QACA;;QAED,IAAMQ,KAAK,GAAGU,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAqBpB,GAArB,EAAoC,EAApC,CAAd;;QACAE,KAAK,CAACmB,MAAN,CAAab,KAAb,EAAoBC,IAApB;MACA,CATD;IAUA;;EACF;AAAC,CA5CD;;;;AA+CA;AAAA;AAAA;EAAA;IACCb;sBAAA;wBAAA;oBAAA;aAA+I;IAA/I;EAuCA;;;;;;WArCA,UAA6CI,GAA7C,EAAuDsB,QAAvD,EAAyI;MAAzI;;MACC,IAAIC,SAAS,GAAG,KAAKC,UAAL,CAAgBxB,GAAhB,CAAhB;;MAEA,IAAIuB,SAAS,KAAKpB,SAAlB,EAA6B;QAC5BoB,SAAS,GAAG,KAAKC,UAAL,CAAgBxB,GAAhB,IAAuB,EAAnC;MACA;;MAEDuB,SAAS,CAACE,IAAV,CAAeH,QAAf;MAEA,OAAO,IAAIjC,QAAJ,CAAa;QACnBE,MAAM,CAACmC,WAAP,CAAmBH,SAAnB,EAA+BD,QAA/B;;QAEA,IAAIC,SAAU,CAACI,MAAX,KAAsB,CAA1B,EAA6B;UAC5B,OAAOpB,KAAI,CAACiB,UAAL,CAAgBxB,GAAhB,CAAP;QACA;MACD,CANM,CAAP;IAOA;;;;;;WAED,UAAgDA,GAAhD,EAAwD;MACvD,IAAMuB,SAAS,GAAG,KAAKC,UAAL,CAAgBxB,GAAhB,CAAlB;;MAEA,IAAIuB,SAAS,KAAKpB,SAAlB,EAA6B;QAC5B,OAAO,KAAKqB,UAAL,CAAgBxB,GAAhB,CAAP;MACA;IACD;;;;;;WAED,UAAckB,MAAd,EAAuB;MACtB,IAAMU,SAAS,GAAqB,EAApC;MAEApC,OAAO,CAACkB,IAAR,CAAa,KAAKc,UAAlB,EAA8B,UAACxB,GAAD,EAAMuB,SAAN,EAAe;QAC5ChC,MAAM,CAACmB,IAAP,CAAYa,SAAZ,EAAuB,UAACD,QAAD,EAAS;UAC/BM,SAAS,CAACH,IAAV,CAAeP,MAAM,CAACW,QAAP,CAAgBC,GAAhB,CAAoB9B,GAApB,EAAyBsB,QAAzB,CAAf;QACA,CAFD;MAGA,CAJD;MAMA,OAAO,IAAIhC,aAAJ,CAAkBsC,SAAlB,CAAP;IACA;;EACF;AAAC,CAxCD;;6BAkDA;;AACA;AAAA;AAAA;EA8BC,kBAAYjC,QAAZ,EAAsCoC,MAAtC,EAAqD;IA7BrDnC;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;aAAiD;IAAjD,GA4BqD,CA1BrD;;IACAA;sBAAA;wBAAA;oBAAA;aAAwH;IAAxH;IACAA;sBAAA;wBAAA;oBAAA;aAA+H;IAA/H;IAEAA;sBAAA;wBAAA;oBAAA;aAA6B;IAA7B;IAEAA;sBAAA;wBAAA;oBAAA;aAA4C,IAAIoC,cAAJ,CAAmB,IAAnB;IAA5C;IAEApC;sBAAA;wBAAA;oBAAA;aAAgD,IAAIqC,gBAAJ;IAAhD;IACArC;sBAAA;wBAAA;oBAAA;aAAmE,IAAIR,eAAJ;IAAnE;IAEAQ;sBAAA;wBAAA;oBAAA;;IAAA;;IAgBC,IAAI,CAACmC,MAAL,EAAa;MACZ,MAAM,IAAIG,KAAJ,CAAU,yDAAV,CAAN;IACA;;IAED,KAAKnC,SAAL,GAAiBJ,QAAjB;EACA;EAnBD;;;;;;;;;;;;;;;WASA,UAAoCA,QAApC,EAA4D;MAC3D,OAAO,IAAIwC,QAAJ,CAAgBxC,QAAhB,EAA0B,IAA1B,CAAP;IACA;;;;;;WAYD,UAAgDK,GAAhD,EAA0DC,QAA1D,EAAwE;MACvE,IAAMC,KAAK,GAAG,KAAKH,SAAL,CAAeC,GAAf,CAAd;;MAEA,IAAIE,KAAK,KAAKC,SAAd,EAAyB;QACxB,OAAOD,KAAP;MAEA,CAHD,MAGO;QACN,OAAOD,QAAP;MACA;IACD;;;;;;WAED,UAAmDD,GAAnD,EAA6DE,KAA7D,EAA0F;MACzF,KAAKH,SAAL,CAAeC,GAAf,IAAsBE,KAAtB;IACA;;;;;;WAED,UAAgDF,GAAhD,EAA0DE,KAA1D,EAAuF;MAAvF;;MACC,IAAI,KAAKH,SAAL,CAAeC,GAAf,MAAwBE,KAA5B,EAAmC;QAClC,KAAKU,MAAL,CAAYZ,GAAZ,EAAiBE,KAAjB;;QAEA,KAAKkC,SAAL,CAAe9B,OAAf,CAAuB,UAACY,MAAD,EAAO;UAC7BA,MAAM,CAACmB,oBAAP,CAA4B9B,KAA5B,EAAkCP,GAAlC,EAAuCE,KAAvC;QACA,CAFD;MAGA;IACD;;;;;;WAED,UAAmDF,GAAnD,EAA2D;MAC1D,IAAIA,GAAG,IAAI,KAAKD,SAAhB,EAA2B;QAC1B,OAAO,KAAKA,SAAL,CAAeC,GAAf,CAAP;;QAEA,KAAKoC,SAAL,CAAe9B,OAAf,CAAuB,UAACY,MAAD,EAAO;UAC7BA,MAAM,CAACoB,uBAAP,CAA+BtC,GAA/B;QACA,CAFD;MAGA;IACD;;;;;;WAED;MAAA;;MACCR,OAAO,CAACkB,IAAR,CAAa,KAAKX,SAAlB,EAA6B,UAACC,GAAD,EAAMuC,MAAN,EAAY;QACxChC,KAAI,CAACiC,MAAL,CAAYxC,GAAZ;MACA,CAFD;IAGA;;;;;;WAID,UAA8DA,GAA9D,EAAwEC,QAAxE,EAAsF;MACrF,IAAMC,KAAK,GAAG,KAAKuC,gBAAL,CAAsBzC,GAAtB,CAAd;;MAEA,IAAIE,KAAK,KAAKC,SAAd,EAAyB;QACxB,OAAOD,KAAP;MAEA,CAHD,MAGO;QACN,OAAOD,QAAP;MACA;IACD;;;;;;WAED,UAA8GD,GAA9G,EAAwHE,KAAxH,EAAoI;MACnI,KAAKuC,gBAAL,CAAsBzC,GAAtB,IAA6BE,KAA7B;MACA,OAAOA,KAAP;IACA;;;;;;WAED,UAA2GF,GAA3G,EAAqHE,KAArH,EAAiI;MAAjI;;MACC,IAAI,KAAKuC,gBAAL,CAAsBzC,GAAtB,MAA+BE,KAAnC,EAA0C;QACzC,KAAKwC,aAAL,CAAmB1C,GAAnB,EAAwBE,KAAxB;;QAEA,KAAKkC,SAAL,CAAe9B,OAAf,CAAuB,UAACY,MAAD,EAAO;UAC7BA,MAAM,CAACyB,2BAAP,CAAmCpC,KAAnC,EAAyCP,GAAzC,EAA8CE,KAA9C;QACA,CAFD;MAGA;;MAED,OAAOA,KAAP;IACA;;;;;;WAED,UAAiEF,GAAjE,EAAyE;MACxE,IAAIA,GAAG,IAAI,KAAKyC,gBAAhB,EAAkC;QACjC,OAAO,KAAKA,gBAAL,CAAsBzC,GAAtB,CAAP;;QAEA,KAAKoC,SAAL,CAAe9B,OAAf,CAAuB,UAACY,MAAD,EAAO;UAC7BA,MAAM,CAAC0B,8BAAP,CAAsC5C,GAAtC;QACA,CAFD;MAGA;IACD;;;;;;WAED,UAAcE,KAAd,EAAsC;MAAtC;;MACCV,OAAO,CAACkB,IAAR,CAAaR,KAAb,EAAoB,UAACF,GAAD,EAAME,KAAN,EAAW;QAC9BK,KAAI,CAACsC,GAAL,CAAS7C,GAAT,EAAcE,KAAd;MACA,CAFD;IAGA;KA7HF,CA+HC;;;;;;WACA,UAA+CF,GAA/C,EAAyDsB,QAAzD,EAAiI;MAAjI;;MACC,IAAIwB,MAAM,GAAG,KAAKC,cAAL,CAAoB/C,GAApB,CAAb;;MAEA,IAAI8C,MAAM,KAAK3C,SAAf,EAA0B;QACzB2C,MAAM,GAAG,KAAKC,cAAL,CAAoB/C,GAApB,IAA2B,EAApC;MACA;;MAED8C,MAAM,CAACrB,IAAP,CAAYH,QAAZ;MAEA,OAAO,IAAIjC,QAAJ,CAAa;QACnBE,MAAM,CAACmC,WAAP,CAAmBoB,MAAnB,EAA4BxB,QAA5B;;QAEA,IAAIwB,MAAO,CAACnB,MAAR,KAAmB,CAAvB,EAA0B;UACzB,OAAOpB,KAAI,CAACwC,cAAL,CAAoB/C,GAApB,CAAP;QACA;MACD,CANM,CAAP;IAOA;KAhJF,CAkJC;;;;;;WACA,UAA6DA,GAA7D,EAAuEsB,QAAvE,EAAsJ;MAAtJ;;MACC,IAAIwB,MAAM,GAAG,KAAKE,qBAAL,CAA2BhD,GAA3B,CAAb;;MAEA,IAAI8C,MAAM,KAAK3C,SAAf,EAA0B;QACzB2C,MAAM,GAAG,KAAKE,qBAAL,CAA2BhD,GAA3B,IAAkC,EAA3C;MACA;;MAED8C,MAAM,CAACrB,IAAP,CAAYH,QAAZ;MAEA,OAAO,IAAIjC,QAAJ,CAAa;QACnBE,MAAM,CAACmC,WAAP,CAAmBoB,MAAnB,EAA4BxB,QAA5B;;QAEA,IAAIwB,MAAO,CAACnB,MAAR,KAAmB,CAAvB,EAA0B;UACzB,OAAOpB,KAAI,CAACyC,qBAAL,CAA2BhD,GAA3B,CAAP;QACA;MACD,CANM,CAAP;IAOA;;;;;;WAED,UAAckB,MAAd,EAAyBJ,KAAzB,EAA6C;MAC5C,IAAMc,SAAS,GAAqB,EAApC;MAEApC,OAAO,CAACkB,IAAR,CAAa,KAAKqC,cAAlB,EAAkC,UAAC/C,GAAD,EAAM8C,MAAN,EAAY;QAC7CvD,MAAM,CAACmB,IAAP,CAAYoC,MAAZ,EAAoB,UAACG,KAAD,EAAM;UACzBrB,SAAS,CAACH,IAAV,CAAeP,MAAM,CAACgC,EAAP,CAAUlD,GAAV,EAAeiD,KAAf,CAAf;QACA,CAFD;MAGA,CAJD;MAMAzD,OAAO,CAACkB,IAAR,CAAa,KAAKsC,qBAAlB,EAAyC,UAAChD,GAAD,EAAM8C,MAAN,EAAY;QACpDvD,MAAM,CAACmB,IAAP,CAAYoC,MAAZ,EAAoB,UAACG,KAAD,EAAM;UACzBrB,SAAS,CAACH,IAAV,CAAeP,MAAM,CAACiC,SAAP,CAAiBnD,GAAjB,EAAsBiD,KAAtB,CAAf;QACA,CAFD;MAGA,CAJD;;MAMA,KAAK9B,MAAL,CAAYE,MAAZ,CAAmBH,MAAnB,EAA2BJ,KAA3B;;MAEAc,SAAS,CAACH,IAAV,CAAe,KAAKI,QAAL,CAAcR,MAAd,CAAqBH,MAArB,CAAf;MACAU,SAAS,CAACH,IAAV,CAAeP,MAAM,CAAC4B,MAAP,CAAcM,QAAd,CAAuB,KAAKN,MAA5B,CAAf;MAEA,OAAO,IAAIxD,aAAJ,CAAkBsC,SAAlB,CAAP;IACA;;;;;;WAED,UAA0BV,MAA1B,EAAmC;MAClC,KAAKkB,SAAL,CAAeX,IAAf,CAAoBP,MAApB;IACA;;;;;;WAED,UAA6BA,MAA7B,EAAsC;MACrC3B,MAAM,CAACiD,MAAP,CAAc,KAAKJ,SAAnB,EAA8BlB,MAA9B;IACA;;;;;;WAED,UAAqBzB,IAArB,EAAiC;MAChC,KAAK2C,SAAL,CAAe9B,OAAf,CAAuB,UAACY,MAAD,EAAO;QAC7BA,MAAM,CAACmC,gBAAP,CAAwB5D,IAAxB;MACA,CAFD;IAGA;;EACF;AAAC,CAzMD","names":["EventDispatcher","Disposer","MultiDisposer","$array","$object","name","template","settings","Object","_name","_template","_settings","key","fallback","value","undefined","_stateChanged","keys","forEach","_this","other","seen","each","_userSettings","setRaw","_states","state","setAll","state_1","TemplateState","entity","states","create","_apply","callback","callbacks","_callbacks","push","removeFirst","length","disposers","adapters","add","isReal","TemplateStates","TemplateAdapters","Error","Template","_entities","_setTemplateProperty","_removeTemplateProperty","_value","remove","_privateSettings","setPrivateRaw","_setTemplatePrivateProperty","_removeTemplatePrivateProperty","set","events","_settingEvents","_privateSettingEvents","event","on","onPrivate","copyFrom","_applyStateByKey"],"sourceRoot":"","sources":["../../../../../src/.internal/core/util/Template.ts"],"sourcesContent":["import type { Entity, Dirty } from \"./Entity\";\nimport type { State } from \"./States\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { IDisposer, Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\n\nexport class TemplateState<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\n\tprivate _name: string;\n\tprivate _template: Template<E>;\n\n\tconstructor(name: string, template: Template<E>, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._name = name;\n\t\tthis._template = template;\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._settings[key];\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis._settings[key] = settings[key];\n\t\t});\n\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic _apply(other: State<E>, seen: Dirty<E[\"_settings\"]>): void {\n\t\t$object.each(this._settings, (key, value) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tseen[key] = true;\n\t\t\t\tother.setRaw(key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nexport class TemplateStates<E extends Entity> {\n\tprivate _template: Template<E>;\n\tprivate _states: { [key: string]: TemplateState<E> } = {};\n\n\tconstructor(template: Template<E>) {\n\t\tthis._template = template;\n\t}\n\n\tpublic lookup(name: string): TemplateState<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): TemplateState<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new TemplateState(name, this._template, settings);\n\t\t\tthis._states[name] = state;\n\t\t\tthis._template._stateChanged(name);\n\t\t\treturn state;\n\t\t}\n\t}\n\n\tpublic remove(name: string) {\n\t\tdelete this._states[name];\n\t\tthis._template._stateChanged(name);\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): void {\n\t\t$object.each(this._states, (key, value) => {\n\t\t\tlet seen = state.states[key];\n\n\t\t\tif (seen == null) {\n\t\t\t\tseen = state.states[key] = {};\n\t\t\t}\n\n\t\t\tconst other = entity.states.create(key as string, {});\n\t\t\tvalue._apply(other, seen);\n\t\t});\n\t}\n}\n\n\nexport class TemplateAdapters<E extends Entity> {\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(callbacks!, callback);\n\n\t\t\tif (callbacks!.length === 0) {\n\t\t\t\tdelete this._callbacks[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\t\t}\n\t}\n\n\tpublic _apply(entity: E): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._callbacks, (key, callbacks) => {\n\t\t\t$array.each(callbacks, (callback) => {\n\t\t\t\tdisposers.push(entity.adapters.add(key, callback));\n\t\t\t});\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n}\n\n\nexport interface ApplyState<E extends Entity> {\n\tsettings: Dirty<E[\"_settings\"]>;\n\tprivateSettings: Dirty<E[\"_privateSettings\"]>;\n\tstates: { [name: string]: Dirty<E[\"_settings\"]> };\n}\n\n\n// TODO maybe extend from Properties ?\nexport class Template<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _privateSettings: E[\"_privateSettings\"] = {};\n\n\t// TODO code duplication with Properties\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\n\tpublic _entities: Array<E> = [];\n\n\tpublic readonly states: TemplateStates<E> = new TemplateStates(this);\n\n\tpublic readonly adapters: TemplateAdapters<E> = new TemplateAdapters();\n\tpublic readonly events: EventDispatcher<Events<E, E[\"_events\"]>> = new EventDispatcher();\n\n\tpublic setup: (<O extends E>(entity: O) => void) | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tpublic static new<E extends Entity>(settings: E[\"_settings\"]): Template<E> {\n\t\treturn new Template<E>(settings, true);\n\t}\n\n\tconstructor(settings: E[\"_settings\"], isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setRaw<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\tpublic set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (this._settings[key] !== value) {\n\t\t\tthis.setRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tdelete this._settings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll(): void {\n\t\t$object.each(this._settings, (key, _value) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._privateSettings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._privateSettings[key] = value;\n\t\treturn value;\n\t}\n\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tif (this._privateSettings[key] !== value) {\n\t\t\tthis.setPrivateRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplatePrivateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tdelete this._privateSettings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplatePrivateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setAll(value: this[\"_settings\"]) {\n\t\t$object.each(value, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._settingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.on(key, event));\n\t\t\t});\n\t\t});\n\n\t\t$object.each(this._privateSettingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.onPrivate(key, event));\n\t\t\t});\n\t\t});\n\n\t\tthis.states._apply(entity, state);\n\n\t\tdisposers.push(this.adapters._apply(entity));\n\t\tdisposers.push(entity.events.copyFrom(this.events));\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n\tpublic _setObjectTemplate(entity: E) {\n\t\tthis._entities.push(entity);\n\t}\n\n\tpublic _removeObjectTemplate(entity: E) {\n\t\t$array.remove(this._entities, entity);\n\t}\n\n\tpublic _stateChanged(name: string): void {\n\t\tthis._entities.forEach((entity) => {\n\t\t\tentity._applyStateByKey(name);\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}