{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { AxisRenderer } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\n\nvar AxisRendererX =\n/** @class */\nfunction (_super) {\n  __extends(AxisRendererX, _super);\n\n  function AxisRendererX() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Rectangle.new(_this._root, {\n        width: p100,\n        isMeasured: false,\n        themeTags: [\"axis\", \"x\", \"thumb\"]\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(AxisRendererX.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n      _super.prototype._afterNew.call(this);\n\n      this.setPrivateRaw(\"letter\", \"X\");\n      var gridTemplate = this.grid.template;\n      gridTemplate.set(\"height\", p100);\n      gridTemplate.set(\"width\", 0);\n      gridTemplate.set(\"draw\", function (display, graphics) {\n        display.moveTo(0, 0);\n        display.lineTo(0, graphics.height());\n      });\n      this.set(\"draw\", function (display, graphics) {\n        display.moveTo(0, 0);\n        display.lineTo(graphics.width(), 0);\n      });\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      var axis = this.axis;\n      axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n      var opposite = \"opposite\";\n      var inside = \"inside\";\n\n      if (this.isDirty(opposite) || this.isDirty(inside)) {\n        var chart = this.chart;\n        var axisChildren = axis.children;\n\n        if (this.get(inside)) {\n          axis.addTag(inside);\n        } else {\n          axis.removeTag(inside);\n        }\n\n        if (chart) {\n          if (this.get(opposite)) {\n            var children = chart.topAxesContainer.children;\n\n            if (children.indexOf(axis) == -1) {\n              children.insertIndex(0, axis);\n            }\n\n            axis.addTag(opposite);\n            axisChildren.moveValue(this);\n          } else {\n            var children = chart.bottomAxesContainer.children;\n\n            if (children.indexOf(axis) == -1) {\n              children.moveValue(axis);\n            }\n\n            axis.removeTag(opposite);\n            axisChildren.moveValue(this, 0);\n          }\n\n          axis.ghostLabel._applyThemes();\n\n          this.labels.each(function (label) {\n            label._applyThemes();\n          });\n\n          this.root._markDirtyRedraw();\n        }\n\n        axis.markDirtySize();\n      }\n\n      this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_getPan\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point1, point2) {\n      return (point2.x - point1.x) / this.width();\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var start = this._start || 0;\n      var end = this._end || 1;\n      position -= this._ls;\n      position = position * (end - start) / this._lc;\n\n      if (!this.get(\"inversed\")) {\n        position = start + position;\n      } else {\n        position = end - position;\n      }\n\n      return position;\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_updateLC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      var parent = axis.parent;\n\n      if (parent) {\n        var w = parent.innerWidth();\n        this._lc = this.axisLength() / w;\n        this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      axis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0));\n      axis.bulletsContainer.set(\"y\", this.y());\n      var chart = axis.chart;\n\n      if (chart) {\n        var plotContainer = chart.plotContainer;\n        var axisHeader = axis.axisHeader;\n        var width = axis.get(\"marginLeft\", 0);\n        var x = axis.x() - width;\n        var parent_1 = axis.parent;\n\n        if (parent_1) {\n          x -= parent_1.get(\"paddingLeft\", 0);\n        }\n\n        if (axisHeader.children.length > 0) {\n          width = axis.axisHeader.width();\n          axis.set(\"marginLeft\", width);\n        } else {\n          axisHeader.set(\"width\", width);\n        }\n\n        axisHeader.setAll({\n          x: x,\n          y: -1,\n          height: plotContainer.height() + 2\n        });\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.processAxis.call(this);\n\n      var axis = this.axis;\n      axis.set(\"width\", p100);\n      var verticalLayout = this._root.verticalLayout;\n      axis.set(\"layout\", verticalLayout);\n      axis.labelsContainer.set(\"width\", p100);\n      axis.axisHeader.setAll({\n        layout: verticalLayout\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"axisLength\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.axis.width();\n    }\n  });\n  /**\r\n   * Converts axis relative position to actual coordinate in pixels.\r\n   *\r\n   * @param   position  Position\r\n   * @return            Point\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"positionToPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return {\n        x: this.positionToCoordinate(position),\n        y: 0\n      };\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tick, position, endPosition, count) {\n      if (tick) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var location_1 = 0.5;\n\n        if ($type.isNumber(count) && count > 1) {\n          location_1 = tick.get(\"multiLocation\", location_1);\n        } else {\n          location_1 = tick.get(\"location\", location_1);\n        }\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_1;\n        }\n\n        tick.set(\"x\", this.positionToCoordinate(position));\n        var length_1 = tick.get(\"length\", 0);\n        var inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n        if (this.get(\"opposite\")) {\n          tick.set(\"y\", p100);\n\n          if (!inside) {\n            length_1 *= -1;\n          }\n        } else {\n          tick.set(\"y\", 0);\n\n          if (inside) {\n            length_1 *= -1;\n          }\n        }\n\n        tick.set(\"draw\", function (display) {\n          display.moveTo(0, 0);\n          display.lineTo(0, length_1);\n        });\n        this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (label, position, endPosition, count) {\n      if (label) {\n        var location_2 = 0.5;\n\n        if ($type.isNumber(count) && count > 1) {\n          location_2 = label.get(\"multiLocation\", location_2);\n        } else {\n          location_2 = label.get(\"location\", location_2);\n        }\n\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var inside = label.get(\"inside\", this.get(\"inside\", false));\n        var opposite = this.get(\"opposite\");\n\n        if (opposite) {\n          if (!inside) {\n            label.set(\"position\", \"relative\");\n            label.set(\"y\", p100);\n          } else {\n            label.set(\"position\", \"absolute\");\n            label.set(\"y\", 0);\n          }\n        } else {\n          if (!inside) {\n            label.set(\"y\", undefined);\n            label.set(\"position\", \"relative\");\n          } else {\n            label.set(\"y\", 0);\n            label.set(\"position\", \"absolute\");\n          }\n        }\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_2;\n        }\n\n        label.set(\"x\", this.positionToCoordinate(position));\n        this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (grid, position, endPosition) {\n      if (grid) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var location_3 = grid.get(\"location\", 0.5);\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_3;\n        }\n\n        grid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n        this.toggleVisibility(grid, position, 0, 1);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet, position, endPosition) {\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n\n        if (sprite) {\n          if (!$type.isNumber(position)) {\n            position = 0;\n          }\n\n          var location_4 = bullet.get(\"location\", 0.5);\n\n          if ($type.isNumber(endPosition) && endPosition != position) {\n            position = position + (endPosition - position) * location_4;\n          }\n\n          sprite.set(\"x\", this.positionToCoordinate(position));\n          this.toggleVisibility(sprite, position, 0, 1);\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, position, endPosition) {\n      if (fill) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        if (!$type.isNumber(endPosition)) {\n          endPosition = 1;\n        }\n\n        var x0 = this.positionToCoordinate(position);\n        var x1 = this.positionToCoordinate(endPosition);\n        this.fillDrawMethod(fill, x0, x1);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"fillDrawMethod\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, x0, x1) {\n      var _this = this;\n\n      fill.set(\"draw\", function (display) {\n        var _a; //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n        // using for holes, so can not be rectangle\n\n\n        var h = _this.axis.gridContainer.height();\n\n        var w = _this.width();\n\n        if (x1 < x0) {\n          _a = __read([x0, x1], 2), x1 = _a[0], x0 = _a[1];\n        }\n\n        if (x0 > w || x1 < 0) {\n          return;\n        }\n        /*\r\n        const limit = 10000;\r\n              x0 = Math.max(-limit, x0);\r\n        x1 = Math.min(limit, x1);\r\n        */\n\n\n        display.moveTo(x0, 0);\n        display.lineTo(x1, 0);\n        display.lineTo(x1, h);\n        display.lineTo(x0, h);\n        display.lineTo(x0, 0);\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"positionTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      this._positionTooltip(tooltip, {\n        x: this.positionToCoordinate(position),\n        y: 0\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererX.prototype, \"updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      var inside = this.get(\"inside\");\n      var num = 100000;\n\n      var global = this._display.toGlobal({\n        x: 0,\n        y: 0\n      });\n\n      var x = global.x;\n      var y = 0;\n      var w = this.axisLength();\n      var h = num;\n      var pointerOrientation = \"up\";\n\n      if (this.get(\"opposite\")) {\n        if (inside) {\n          pointerOrientation = \"up\";\n          y = global.y;\n          h = num;\n        } else {\n          pointerOrientation = \"down\";\n          y = global.y - num;\n          h = num;\n        }\n      } else {\n        if (inside) {\n          pointerOrientation = \"down\";\n          y = global.y - num;\n          h = num;\n        } else {\n          pointerOrientation = \"up\";\n          y = global.y;\n          h = num;\n        }\n      }\n\n      var bounds = {\n        left: x,\n        right: x + w,\n        top: y,\n        bottom: y + h\n      };\n      var oldBounds = tooltip.get(\"bounds\");\n\n      if (!$utils.sameBounds(bounds, oldBounds)) {\n        tooltip.set(\"bounds\", bounds);\n        tooltip.set(\"pointerOrientation\", pointerOrientation);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"AxisRendererX\"\n  });\n  Object.defineProperty(AxisRendererX, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\n  });\n  return AxisRendererX;\n}(AxisRenderer);\n\nexport { AxisRendererX };","map":{"version":3,"mappings":"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","names":["AxisRenderer","p100","$type","$utils","Rectangle","__extends","Object","new","_this","_root","width","isMeasured","themeTags","_settings","mergeTags","_super","_afterNew","call","setPrivateRaw","gridTemplate","grid","template","set","display","graphics","moveTo","lineTo","height","_changed","axis","ghostLabel","setPrivate","get","opposite","inside","isDirty","chart","axisChildren","children","addTag","removeTag","topAxesContainer","indexOf","insertIndex","moveValue","bottomAxesContainer","_applyThemes","labels","each","label","root","_markDirtyRedraw","markDirtySize","thumb","labelsContainer","point1","point2","x","position","start","_start","end","_end","_ls","_lc","parent","w","innerWidth","axisLength","gridContainer","relativeToValue","bulletsContainer","y","plotContainer","axisHeader","parent_1","length","setAll","processAxis","verticalLayout","layout","positionToCoordinate","tick","endPosition","count","isNumber","location_1","length_1","toggleVisibility","location_2","undefined","location_3","Math","round","bullet","sprite","location_4","fill","x0","x1","fillDrawMethod","h","_a","tooltip","_positionTooltip","num","global","_display","toGlobal","pointerOrientation","bounds","left","right","top","bottom","oldBounds","sameBounds","classNames","concat","AxisRendererX","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/axes/AxisRendererX.ts"],"sourcesContent":["import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured:false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\t\t\t\t\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}