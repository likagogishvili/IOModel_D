{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\n\nvar HeatLegend =\n/** @class */\nfunction (_super) {\n  __extends(HeatLegend, _super);\n\n  function HeatLegend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Container]] that all labels are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"labelContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that all markers are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"markerContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A start [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n\n    Object.defineProperty(_this, \"startLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"start\"]\n      }))\n    });\n    /**\r\n     * An end [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n\n    Object.defineProperty(_this, \"endLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"end\"]\n      }))\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [_this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(HeatLegend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\n      _super.prototype._afterNew.call(this);\n\n      this.set(\"tooltip\", Tooltip.new(this._root, {\n        themeTags: [\"heatlegend\"]\n      }));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(HeatLegend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var marker = this.markers.make();\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * Moves and shows tooltip at specific value.\r\n   *\r\n   * Can also specify optional text to show in tooltip, as well as the color.\r\n   *\r\n   * @param  value  Value\r\n   * @param  text   Text\r\n   * @param  color  Color\r\n   */\n\n  Object.defineProperty(HeatLegend.prototype, \"showValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value, text, color) {\n      var tooltip = this.getTooltip();\n\n      if (tooltip && $type.isNumber(value)) {\n        var startValue = this.get(\"startValue\", 0);\n        var endValue = this.get(\"endValue\", 1);\n        var c = (value - startValue) / (endValue - startValue);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n\n        if (!text) {\n          text = this.getNumberFormatter().format(value);\n        }\n\n        if (!color) {\n          color = Color.interpolate(c, startColor, endColor);\n        }\n\n        tooltip.label.set(\"text\", text);\n        var p = void 0;\n\n        if (this.get(\"orientation\") == \"vertical\") {\n          p = this.markerContainer.toGlobal({\n            x: 0,\n            y: this.innerHeight() * (1 - c)\n          });\n        } else {\n          p = this.markerContainer.toGlobal({\n            x: this.innerWidth() * c,\n            y: 0\n          });\n        }\n\n        var background = tooltip.get(\"background\");\n\n        if (background) {\n          background.set(\"fill\", Color.interpolate(c, startColor, endColor));\n        }\n\n        tooltip.set(\"pointTo\", p);\n        tooltip.show();\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n\n      var labelContainer = this.labelContainer;\n      var orientation = this.get(\"orientation\");\n      var startLabel = this.startLabel;\n      var endLabel = this.endLabel;\n      var tooltip = this.getTooltip();\n\n      if (this.isDirty(\"orientation\")) {\n        if (orientation == \"vertical\") {\n          this.markerContainer.setAll({\n            layout: this._root.verticalLayout,\n            height: p100\n          });\n          this.set(\"layout\", this._root.horizontalLayout);\n          startLabel.setAll({\n            y: p100,\n            x: undefined,\n            centerY: p100,\n            centerX: p100\n          });\n          endLabel.setAll({\n            y: 0,\n            x: undefined,\n            centerY: 0,\n            centerX: p100\n          });\n          labelContainer.setAll({\n            height: p100,\n            width: undefined\n          });\n\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"horizontal\");\n          }\n        } else {\n          this.markerContainer.setAll({\n            layout: this._root.horizontalLayout,\n            width: p100\n          });\n          this.set(\"layout\", this._root.verticalLayout);\n          startLabel.setAll({\n            x: 0,\n            y: undefined,\n            centerX: 0,\n            centerY: 0\n          });\n          endLabel.setAll({\n            x: p100,\n            y: undefined,\n            centerX: p100,\n            centerY: 0\n          });\n          labelContainer.setAll({\n            width: p100,\n            height: undefined\n          });\n\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"vertical\");\n          }\n        }\n      }\n\n      if (this.isDirty(\"stepCount\")) {\n        var stepCount = this.get(\"stepCount\", 1);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n        this.markerContainer.children.clear();\n\n        if (stepCount > 1) {\n          for (var i = 0; i < stepCount; i++) {\n            var marker = this.makeMarker();\n\n            if (orientation == \"vertical\") {\n              this.markerContainer.children.moveValue(marker, 0);\n            } else {\n              this.markerContainer.children.push(marker);\n            }\n\n            if (startColor && endColor) {\n              marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n            }\n          }\n        } else if (stepCount == 1) {\n          var marker = this.makeMarker();\n          this.markerContainer.children.push(marker);\n          var gradient = LinearGradient.new(this._root, {\n            stops: [{\n              color: startColor\n            }, {\n              color: endColor\n            }]\n          });\n\n          if (orientation == \"vertical\") {\n            gradient.set(\"rotation\", 90);\n            var stops = gradient.get(\"stops\");\n\n            if (stops) {\n              stops.reverse();\n            }\n          } else {\n            gradient.set(\"rotation\", 0);\n          }\n\n          if (startColor && endColor) {\n            marker.set(\"fillGradient\", gradient);\n          }\n        }\n      }\n\n      if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n        startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n      }\n\n      if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n        endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HeatLegend\"\n  });\n  Object.defineProperty(HeatLegend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([HeatLegend.className])\n  });\n  return HeatLegend;\n}(Container);\n\nexport { HeatLegend };","map":{"version":3,"mappings":"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","names":["Container","Label","p100","RoundedRectangle","Template","ListTemplate","Color","Tooltip","LinearGradient","$utils","$type","__extends","Object","_this","children","push","new","_root","labelContainer","themeTags","_new","mergeTags","markers","template","get","_settings","orientation","_super","_afterNew","call","set","marker","make","states","create","value","text","color","tooltip","getTooltip","isNumber","startValue","endValue","c","startColor","endColor","getNumberFormatter","format","interpolate","label","p","markerContainer","toGlobal","x","y","innerHeight","innerWidth","background","show","_prepareChildren","startLabel","endLabel","isDirty","setAll","layout","verticalLayout","height","horizontalLayout","undefined","centerY","centerX","width","stepCount","clear","i","makeMarker","moveValue","gradient","stops","reverse","classNames","concat","HeatLegend","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/HeatLegend.ts"],"sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\n\nimport { Container, IContainerSettings, IContainerPrivate } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IHeatLegendSettings extends IContainerSettings {\n\n\t/**\n\t * Starting (lowest value) color.\n\t */\n\tstartColor: Color;\n\n\t/**\n\t * Ending (highest value) color.\n\t */\n\tendColor: Color;\n\n\t/**\n\t * Start (lowest) value.\n\t */\n\tstartValue?: number;\n\n\t/**\n\t * End (highest) value.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * Text for start label.\n\t */\n\tstartText?: string;\n\n\t/**\n\t * Text for end label.\n\t */\n\tendText?: string;\n\n\t/**\n\t * Number of steps\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Gradient_or_steps} for more info\n\t */\n\tstepCount?: number;\n\n\t/**\n\t * Orientation of the heat legend.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Orientation} for more info\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IHeatLegendPrivate extends IContainerPrivate {\n}\n\n/**\n * Heat legend.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\n */\nexport class HeatLegend extends Container {\n\n\t/**\n\t * A [[Container]] that all labels are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that all markers are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly markerContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A start [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly startLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }));\n\n\t/**\n\t * An end [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly endLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }));\n\n\tpublic static className: string = \"HeatLegend\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HeatLegend.className]);\n\n\tdeclare public _settings: IHeatLegendSettings;\n\tdeclare public _privateSettings: IHeatLegendPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\t\tsuper._afterNew();\n\t\tthis.set(\"tooltip\", Tooltip.new(this._root, {\n\t\t\tthemeTags: [\"heatlegend\"]\n\t\t}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): RoundedRectangle {\n\t\tconst marker = this.markers.make();\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markers: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\n\t/**\n\t * Moves and shows tooltip at specific value.\n\t *\n\t * Can also specify optional text to show in tooltip, as well as the color.\n\t *\n\t * @param  value  Value\n\t * @param  text   Text\n\t * @param  color  Color\n\t */\n\tpublic showValue(value: number, text?: string, color?: Color) {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip && $type.isNumber(value)) {\n\n\t\t\tconst startValue = this.get(\"startValue\", 0);\n\t\t\tconst endValue = this.get(\"endValue\", 1);\n\n\t\t\tconst c = (value - startValue) / (endValue - startValue);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\n\t\t\tif (!text) {\n\t\t\t\ttext = this.getNumberFormatter().format(value);\n\t\t\t}\n\n\t\t\tif (!color) {\n\t\t\t\tcolor = Color.interpolate(c, startColor, endColor);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", text);\n\t\t\tlet p:IPoint;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\n\t\t\t}\n\n\t\t\tlet background = tooltip.get(\"background\");\n\t\t\tif (background) {\n\t\t\t\tbackground.set(\"fill\", Color.interpolate(c, startColor, endColor))\n\t\t\t}\n\t\t\ttooltip.set(\"pointTo\", p);\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst labelContainer = this.labelContainer;\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst startLabel = this.startLabel;\n\t\tconst endLabel = this.endLabel;\n\t\tconst tooltip = this.getTooltip();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tif (orientation == \"vertical\") {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.horizontalLayout);\n\t\t\t\tstartLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\n\t\t\t\tendLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\n\t\t\t\tlabelContainer.setAll({ height: p100, width: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"horizontal\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\t\t\tstartLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\n\t\t\t\tendLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\n\t\t\t\tlabelContainer.setAll({ width: p100, height: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"vertical\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stepCount\")) {\n\t\t\tconst stepCount = this.get(\"stepCount\", 1);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\t\t\tthis.markerContainer.children.clear();\n\t\t\tif (stepCount > 1) {\n\t\t\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\t\t\tconst marker = this.makeMarker();\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tthis.markerContainer.children.moveValue(marker, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\t\tmarker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (stepCount == 1) {\n\t\t\t\tconst marker = this.makeMarker();\n\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\tconst gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\n\n\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\tgradient.set(\"rotation\", 90);\n\t\t\t\t\tlet stops = gradient.get(\"stops\");\n\t\t\t\t\tif (stops) {\n\t\t\t\t\t\tstops.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgradient.set(\"rotation\", 0);\n\t\t\t\t}\n\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\tmarker.set(\"fillGradient\", gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n\t\t\tstartLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n\t\t}\n\n\t\tif (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n\t\t\tendLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))))\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}