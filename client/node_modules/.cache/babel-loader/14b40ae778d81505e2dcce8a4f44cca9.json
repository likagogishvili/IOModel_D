{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\n\nvar Circle =\n/** @class */\nfunction (_super) {\n  __extends(Circle, _super);\n\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Circle.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"radius\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Circle.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this._clear) {\n        this._display.drawCircle(0, 0, this.get(\"radius\", 10));\n      }\n    }\n  });\n  Object.defineProperty(Circle, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Circle\"\n  });\n  Object.defineProperty(Circle, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Circle.className])\n  });\n  return Circle;\n}(Graphics);\n\nexport { Circle };","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,QAA8D,YAA9D;AAcA;;;;;;;AAMA;AAAA;AAAA;EAA4BC;;EAA5B;;EAuBC;;;;;;WAfA;MACCC,iBAAMC,cAAN,CAAoBC,IAApB,CAAoB,IAApB;;MAEA,IAAI,KAAKC,OAAL,CAAa,QAAb,CAAJ,EAA4B;QAC3B,KAAKC,MAAL,GAAc,IAAd;MACA;IACD;;;;;;WAED;MACCJ,iBAAMK,QAAN,CAAcH,IAAd,CAAc,IAAd;;MAEA,IAAI,KAAKE,MAAT,EAAiB;QAChB,KAAKE,QAAL,CAAcC,UAAd,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAKC,GAAL,CAAS,QAAT,EAAmB,EAAnB,CAA/B;MACA;IACD;;EAjBDC;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CX,QAAQ,CAACY,UAAT,CAAoBC,MAApB,CAA2B,CAACC,MAAM,CAACC,SAAR,CAA3B;EAA1C;EAiBD;AAAC,CAvBD,CAA4Bf,QAA5B;;SAAac","names":["Graphics","__extends","_super","_beforeChanged","call","isDirty","_clear","_changed","_display","drawCircle","get","Object","classNames","concat","Circle","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Circle.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface ICircleSettings extends IGraphicsSettings {\n\n\t/**\n\t * Circle radius in pixels.\n\t */\n\tradius?: number;\n\n}\n\nexport interface ICirclePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a circle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Circle extends Graphics {\n\n\tdeclare public _settings: ICircleSettings;\n\tdeclare public _privateSettings: ICirclePrivate;\n\n\tpublic static className: string = \"Circle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Circle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis._display.drawCircle(0, 0, this.get(\"radius\", 10));\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}