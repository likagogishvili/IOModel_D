{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container } from \"./Container\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n\n  function Button() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Button.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n      _super.prototype._afterNew.call(this);\n\n      if (!this._settings.background) {\n        this.set(\"background\", RoundedRectangle.new(this._root, {\n          themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n        }));\n      }\n    }\n  });\n  Object.defineProperty(Button.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n\n      if (this.isDirty(\"icon\")) {\n        var previous = this._prevSettings.icon;\n        var icon = this.get(\"icon\");\n\n        if (icon !== previous) {\n          this._disposeProperty(\"icon\");\n\n          if (previous) {\n            previous.dispose();\n          }\n\n          if (icon) {\n            this.children.push(icon);\n          }\n\n          this._prevSettings.icon = icon;\n        }\n      }\n\n      if (this.isDirty(\"label\")) {\n        var previous = this._prevSettings.label;\n        var label = this.get(\"label\");\n\n        if (label !== previous) {\n          this._disposeProperty(\"label\");\n\n          if (previous) {\n            previous.dispose();\n          }\n\n          if (label) {\n            this.children.push(label);\n          }\n\n          this._prevSettings.label = label;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Button, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Button\"\n  });\n  Object.defineProperty(Button, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([Button.className])\n  });\n  return Button;\n}(Container);\n\nexport { Button };","map":{"version":3,"mappings":";AAGA,SAASA,gBAAT,QAAiC,4BAAjC;AACA,SAASC,SAAT,QAAiE,aAAjE;AAEA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AAmBA;;;;;;;AAMA;AAAA;AAAA;EAA4BC;;EAA5B;;EAwDC;;;;;;WAvDA;MACC,KAAKC,SAAL,CAAeC,SAAf,GAA2BH,MAAM,CAACI,SAAP,CAAiB,KAAKF,SAAL,CAAeC,SAAhC,EAA2C,CAAC,QAAD,CAA3C,CAA3B;;MAEAE,iBAAMC,SAAN,CAAeC,IAAf,CAAe,IAAf;;MAEA,IAAI,CAAC,KAAKL,SAAL,CAAeM,UAApB,EAAgC;QAC/B,KAAKC,GAAL,CAAS,YAAT,EAAuBX,gBAAgB,CAACY,GAAjB,CAAqB,KAAKC,KAA1B,EAAiC;UACvDR,SAAS,EAAEH,MAAM,CAACI,SAAP,CAAiB,KAAKF,SAAL,CAAeC,SAAhC,EAA2C,CAAC,YAAD,CAA3C;QAD4C,CAAjC,CAAvB;MAGA;IACD;;;;;;WAQD;MACCE,iBAAMO,gBAAN,CAAsBL,IAAtB,CAAsB,IAAtB;;MAEA,IAAI,KAAKM,OAAL,CAAa,MAAb,CAAJ,EAA0B;QACzB,IAAMC,QAAQ,GAAG,KAAKC,aAAL,CAAmBC,IAApC;QACA,IAAMA,IAAI,GAAG,KAAKC,GAAL,CAAS,MAAT,CAAb;;QACA,IAAID,IAAI,KAAKF,QAAb,EAAuB;UACtB,KAAKI,gBAAL,CAAsB,MAAtB;;UAEA,IAAIJ,QAAJ,EAAc;YACbA,QAAQ,CAACK,OAAT;UACA;;UACD,IAAIH,IAAJ,EAAU;YACT,KAAKI,QAAL,CAAcC,IAAd,CAAmBL,IAAnB;UACA;;UAED,KAAKD,aAAL,CAAmBC,IAAnB,GAA0BA,IAA1B;QACA;MACD;;MAED,IAAI,KAAKH,OAAL,CAAa,OAAb,CAAJ,EAA2B;QAC1B,IAAMC,QAAQ,GAAG,KAAKC,aAAL,CAAmBO,KAApC;QACA,IAAMA,KAAK,GAAG,KAAKL,GAAL,CAAS,OAAT,CAAd;;QACA,IAAIK,KAAK,KAAKR,QAAd,EAAwB;UACvB,KAAKI,gBAAL,CAAsB,OAAtB;;UACA,IAAIJ,QAAJ,EAAc;YACbA,QAAQ,CAACK,OAAT;UACA;;UAED,IAAIG,KAAJ,EAAW;YACV,KAAKF,QAAL,CAAcC,IAAd,CAAmBC,KAAnB;UACA;;UAED,KAAKP,aAAL,CAAmBO,KAAnB,GAA2BA,KAA3B;QACA;MACD;IACD;;EAvCDC;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CxB,SAAS,CAACyB,UAAV,CAAqBC,MAArB,CAA4B,CAACC,MAAM,CAACC,SAAR,CAA5B;EAA1C;EAuCD;AAAC,CAxDD,CAA4B5B,SAA5B;;SAAa2B","names":["RoundedRectangle","Container","$utils","__extends","_settings","themeTags","mergeTags","_super","_afterNew","call","background","set","new","_root","_prepareChildren","isDirty","previous","_prevSettings","icon","get","_disposeProperty","dispose","children","push","label","Object","classNames","concat","Button","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Button.ts"],"sourcesContent":["import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}