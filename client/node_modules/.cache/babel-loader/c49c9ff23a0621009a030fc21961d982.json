{"ast":null,"code":"/**\r\n * A collection of DOM-related functions.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Disposer } from \"./Disposer\";\nimport { readFrame, writeFrame } from \"./AsyncPending\";\nimport { options } from \"../Options\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var SVGNS = \"http://www.w3.org/2000/svg\";\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var XMLNS = \"http://www.w3.org/2000/xmlns/\";\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var XLINK = \"http://www.w3.org/1999/xlink\";\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\n\nexport function addEventListener(dom, type, listener, options) {\n  //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n  //console.log(type, dom);\n  dom.addEventListener(type, listener, options || false);\n  return new Disposer(function () {\n    dom.removeEventListener(type, listener, options || false);\n  });\n}\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\n\nexport function getElement(el) {\n  if ($type.isString(el)) {\n    var e = document.getElementById(el);\n\n    if (e == null) {\n      e = document.getElementsByClassName(el)[0];\n    }\n\n    if (e instanceof HTMLElement) {\n      return e;\n    }\n  } else if (el instanceof HTMLElement) {\n    return el;\n  }\n}\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\n\nexport function addClass(element, className) {\n  if (!element) {\n    return;\n  }\n\n  if (element.classList) {\n    var classes = className.split(\" \");\n    $array.each(classes, function (name) {\n      element.classList.add(name);\n    });\n  } else {\n    var currentClassName = element.getAttribute(\"class\");\n\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\n        return item !== className;\n      }).join(\" \") + \" \" + className);\n    } else {\n      element.setAttribute(\"class\", className);\n    } //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\n\n  }\n}\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\n\nexport function removeClass(element, className) {\n  if (!element) {\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var currentClassName = element.getAttribute(\"class\");\n\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\n        return item !== className;\n      }).join(\" \"));\n    } //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\n\n  }\n}\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\n\nexport function setStyle(element, property, value) {\n  element.style[property] = value;\n}\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport function getComputedStyle(element, property) {\n  if (element.currentStyle) {\n    return element.currentStyle[property];\n  }\n\n  return document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\n}\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport function blur() {\n  if (document.activeElement && document.activeElement != document.body) {\n    if (document.activeElement.blur) {\n      document.activeElement.blur();\n    } else {\n      var input = document.createElement(\"button\");\n      input.style.position = \"fixed\";\n      input.style.top = \"0px\";\n      input.style.left = \"-10000px\";\n      document.body.appendChild(input);\n      input.focus();\n      input.blur();\n      document.body.removeChild(input);\n    }\n  }\n}\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\n\nexport function focus(element) {\n  if (element instanceof HTMLElement) {\n    element.focus();\n  } else {\n    var input = document.createElement(\"input\");\n    var fo = document.createElementNS(SVGNS, \"foreignObject\");\n    fo.appendChild(input);\n    element.appendChild(fo);\n    input.focus();\n    input.disabled = true;\n    fo.remove();\n  }\n  /*if ((<any>element).focus != undefined) {\r\n      (<any>element).focus();\r\n  }\r\n  else if (element instanceof SVGSVGElement) {\r\n      // Not implemented\r\n      // @todo implement focus fallback\r\n  }*/\n\n}\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\n\nexport function outerHTML(element) {\n  if (element.outerHTML) {\n    return element.outerHTML;\n  } else {\n    var twrap = document.createElement(\"div\");\n    var tnode = element.cloneNode(true);\n    twrap.appendChild(tnode);\n    var content = twrap.innerHTML;\n    return content;\n  }\n}\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\n\nexport function isElement(el) {\n  return el instanceof Object && el && el.nodeType === 1;\n}\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\n\nexport function contains(a, b) {\n  var cursor = b;\n\n  while (true) {\n    if (a === cursor) {\n      return true;\n    } else if (cursor.parentNode == null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host == null) {\n        return false;\n      } else {\n        cursor = cursor.host;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\n\nexport function getShadowRoot(a) {\n  var cursor = a;\n\n  while (true) {\n    if (cursor.parentNode == null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host != null) {\n        return cursor;\n      } else {\n        return null;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\n\nexport function getRoot(a) {\n  // TODO replace with Node.prototype.getRootNode\n  var owner = a.ownerDocument;\n  var cursor = a;\n\n  while (true) {\n    if (cursor.parentNode == null) {\n      // If the cursor is the document, or it is a ShadowRoot\n      // TODO better ShadowRoot detection\n      if (cursor === owner || cursor.host != null) {\n        return cursor;\n      } else {\n        return null;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\n\nexport function eventTarget(event) {\n  if (typeof event.composedPath === \"function\") {\n    return event.composedPath()[0];\n  } else {\n    return event.target;\n  }\n}\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\n\nexport function copyAttributes(source, target) {\n  $array.each(source.attributes, function (attr) {\n    // TODO what if it's null ?\n    if (attr.value != null) {\n      target.setAttribute(attr.name, attr.value);\n    }\n  });\n}\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\n\nexport function fixPixelPerfect(el) {\n  readFrame(function () {\n    // sometimes IE doesn't like this\n    // TODO figure out a way to remove this\n    try {\n      var rect = el.getBoundingClientRect();\n      var left_1 = rect.left - Math.round(rect.left);\n      var top_1 = rect.top - Math.round(rect.top);\n\n      if (left_1 !== 0) {\n        writeFrame(function () {\n          el.style.left = left_1 + \"px\";\n        });\n      }\n\n      if (top_1 !== 0) {\n        writeFrame(function () {\n          el.style.top = top_1 + \"px\";\n        });\n      }\n    } catch (e) {}\n  });\n}\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\n\nvar rootStylesheet;\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\n\nfunction getStylesheet(element) {\n  if (element == null) {\n    if (!$type.hasValue(rootStylesheet)) {\n      // TODO use createElementNS ?\n      var e = document.createElement(\"style\");\n      e.type = \"text/css\";\n\n      if (options.nonce != \"\") {\n        e.setAttribute(\"nonce\", options.nonce);\n      }\n\n      document.head.appendChild(e);\n      rootStylesheet = e.sheet;\n    }\n\n    return rootStylesheet;\n  } else {\n    // TODO use createElementNS ?\n    var e = document.createElement(\"style\");\n    e.type = \"text/css\";\n\n    if (options.nonce != \"\") {\n      e.setAttribute(\"nonce\", options.nonce);\n    }\n\n    element.appendChild(e);\n    return e.sheet;\n  }\n}\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\n\n\nfunction appendStylesheet(root, selector) {\n  var index = root.cssRules.length;\n  root.insertRule(selector + \"{}\", index);\n  return root.cssRules[index];\n}\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\n\n\nvar StyleRule =\n/** @class */\nfunction (_super) {\n  __extends(StyleRule, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param selector  CSS selector\r\n   * @param styles    An object of style attribute - value pairs\r\n   */\n\n\n  function StyleRule(element, selector, styles) {\n    var _this = this;\n\n    var root = getStylesheet(element); // TODO test this\n\n    _this = _super.call(this, function () {\n      // TODO a bit hacky\n      var index = $array.indexOf(root.cssRules, _this._rule);\n\n      if (index === -1) {\n        throw new Error(\"Could not dispose StyleRule\");\n      } else {\n        // TODO if it's empty remove it from the DOM ?\n        root.deleteRule(index);\n      }\n    }) || this;\n    _this._rule = appendStylesheet(root, selector);\n    $object.each(styles, function (key, value) {\n      _this.setStyle(key, value);\n    });\n    return _this;\n  }\n\n  Object.defineProperty(StyleRule.prototype, \"selector\", {\n    /**\r\n     * @return CSS selector\r\n     */\n    get: function () {\n      return this._rule.selectorText;\n    },\n\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\n    set: function (selector) {\n      this._rule.selectorText = selector;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets the same style properties with browser-specific prefixes.\r\n   *\r\n   * @param name   Attribute name\r\n   * @param value  Attribute value\r\n   */\n\n  StyleRule.prototype._setVendorPrefixName = function (name, value) {\n    var style = this._rule.style;\n    style.setProperty(\"-webkit-\" + name, value, \"\");\n    style.setProperty(\"-moz-\" + name, value, \"\");\n    style.setProperty(\"-ms-\" + name, value, \"\");\n    style.setProperty(\"-o-\" + name, value, \"\");\n    style.setProperty(name, value, \"\");\n  };\n  /**\r\n   * Sets a value for specific style attribute.\r\n   *\r\n   * @param name   Attribute\r\n   * @param value  Value\r\n   */\n\n\n  StyleRule.prototype.setStyle = function (name, value) {\n    if (name === \"transition\") {\n      this._setVendorPrefixName(name, value);\n    } else {\n      this._rule.style.setProperty(name, value, \"\");\n    }\n  };\n\n  return StyleRule;\n}(Disposer);\n\nexport { StyleRule };\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nvar styleId = 0;\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\n\nvar StyleClass =\n/** @class */\nfunction (_super) {\n  __extends(StyleClass, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param styles  An object of style attribute - value pairs\r\n   * @param name    Class name\r\n   */\n\n\n  function StyleClass(element, styles, name) {\n    var _this = this;\n\n    var className = !$type.hasValue(name) // TODO generate the classname randomly\n    ? \"__style_\" + ++styleId + \"__\" : name;\n    _this = _super.call(this, element, \".\" + className, styles) || this;\n    _this._className = className;\n    return _this;\n  }\n\n  Object.defineProperty(StyleClass.prototype, \"className\", {\n    /**\r\n     * @return Class name\r\n     */\n    get: function () {\n      return this._className;\n    },\n\n    /**\r\n     * Class name.\r\n     *\r\n     * @param name  Class name\r\n     */\n    set: function (name) {\n      this._className = name;\n      this.selector = \".\" + name;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts the whole class to\r\n   * @ignore Exclude from docs\r\n   */\n\n  StyleClass.prototype.toString = function () {\n    return this._className;\n  };\n\n  return StyleClass;\n}(StyleRule);\n\nexport { StyleClass };\nexport function ready(f) {\n  if (document.readyState !== \"loading\") {\n    f();\n  } else {\n    var listener_1 = function () {\n      if (document.readyState !== \"loading\") {\n        document.removeEventListener(\"readystatechange\", listener_1);\n        f();\n      }\n    };\n\n    document.addEventListener(\"readystatechange\", listener_1);\n  }\n}\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\n\nexport function findFont(element) {\n  // Check if element has styles set\n  var font = getComputedStyle(element, \"font-family\");\n\n  if (!font) {\n    // Completely transparent. Look for a parent\n    var parent_1 = element.parentElement || element.parentNode;\n\n    if (parent_1) {\n      return findFont(parent_1);\n    } else {\n      return undefined;\n    }\n  } else {\n    return font;\n  }\n}\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\n\nexport function findFontSize(element) {\n  // Check if element has styles set\n  var font = getComputedStyle(element, \"font-size\");\n\n  if (!font) {\n    // Completely transparent. Look for a parent\n    var parent_2 = element.parentElement || element.parentNode;\n\n    if (parent_2) {\n      return findFontSize(parent_2);\n    } else {\n      return undefined;\n    }\n  } else {\n    return font;\n  }\n}\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\n\nexport function isHidden(element) {\n  return element.offsetParent === null;\n}\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\n\nexport function isElementInViewport(el, viewportTarget) {\n  // Get position data of the element\n  var rect = el.getBoundingClientRect(); // Convert to array\n\n  var targets = $type.isArray(viewportTarget) ? viewportTarget : viewportTarget ? [viewportTarget] : []; // Should we measure against specific viewport element?\n\n  if (targets.length) {\n    for (var i = 0; i < targets.length; i++) {\n      var target = targets[i]; // Check if viewport itself is visible\n\n      if (!isElementInViewport(target)) {\n        return false;\n      } // Check if element is visible within the viewport\n\n\n      var viewportRect = target.getBoundingClientRect();\n\n      if (rect.top >= 0 && rect.left >= 0 && rect.top <= viewportRect.top + viewportRect.height && rect.left <= viewportRect.left + viewportRect.width) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return rect.top >= 0 && rect.left >= 0 && rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth);\n}","map":{"version":3,"mappings":"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","names":["Disposer","readFrame","writeFrame","options","$object","$array","$type","SVGNS","XMLNS","XLINK","addEventListener","dom","type","listener","removeEventListener","getElement","el","isString","e","document","getElementById","getElementsByClassName","HTMLElement","addClass","element","className","classList","classes","split","each","name","add","currentClassName","getAttribute","setAttribute","filter","item","join","removeClass","remove","setStyle","property","value","style","getComputedStyle","currentStyle","defaultView","getPropertyValue","blur","activeElement","body","input","createElement","position","top","left","appendChild","focus","removeChild","fo","createElementNS","disabled","outerHTML","twrap","tnode","cloneNode","content","innerHTML","isElement","Object","nodeType","contains","a","b","cursor","parentNode","host","getShadowRoot","getRoot","owner","ownerDocument","eventTarget","event","composedPath","target","copyAttributes","source","attributes","attr","fixPixelPerfect","rect","getBoundingClientRect","left_1","Math","round","top_1","rootStylesheet","getStylesheet","hasValue","nonce","head","sheet","appendStylesheet","root","selector","index","cssRules","length","insertRule","__extends","styles","_this","indexOf","_rule","Error","deleteRule","key","StyleRule","selectorText","setProperty","_setVendorPrefixName","styleId","_className","StyleClass","ready","f","readyState","listener_1","findFont","font","parent_1","parentElement","undefined","findFontSize","parent_2","isHidden","offsetParent","isElementInViewport","viewportTarget","targets","isArray","i","viewportRect","height","width","window","innerHeight","documentElement","clientHeight","innerWidth","clientWidth"],"sourceRoot":"","sources":["../../../../../src/.internal/core/utils/DOM.ts"],"sourcesContent":["/**\r\n * A collection of DOM-related functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, IDisposer } from \"./Disposer\";\r\nimport { readFrame, writeFrame } from \"./AsyncPending\";\r\nimport { options } from \"../Options\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const SVGNS: string = \"http://www.w3.org/2000/svg\";\r\n\r\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XMLNS: string = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\r\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n\t//console.log(type, dom);\r\n\tdom.addEventListener(type, <EventListener>listener, options || false);\r\n\r\n\treturn new Disposer(() => {\r\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\r\n\t});\r\n}\r\n\r\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\r\nexport function getElement(el: $type.Optional<HTMLElement | string>): $type.Optional<HTMLElement> {\r\n\tif ($type.isString(el)) {\r\n\t\tlet e: Element | null = document.getElementById(el);\r\n\r\n\t\tif (e == null) {\r\n\t\t\te = document.getElementsByClassName(el)[0];\r\n\t\t}\r\n\r\n\t\tif (e instanceof HTMLElement) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t} else if (el instanceof HTMLElement) {\r\n\t\treturn el;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\tconst classes = className.split(\" \");\r\n\t\t$array.each(classes, (name) => {\r\n\t\t\telement.classList.add(name);\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \") + \" \" + className);\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(\"class\", className);\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\telement.classList.remove(className);\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \"));\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\r\nexport function setStyle(element: HTMLElement | SVGSVGElement, property: string, value: string): void {\r\n\t(<any>element.style)[property] = value;\r\n}\r\n\r\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getComputedStyle(element: Element, property: string): string | number {\r\n\r\n\tif ((<any>element).currentStyle) {\r\n\t\treturn (<any>element).currentStyle[property];\r\n\t}\r\n\r\n\treturn document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\r\n}\r\n\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function blur(): void {\r\n\tif (document.activeElement && document.activeElement != document.body) {\r\n\t\tif ((<any>document.activeElement).blur) {\r\n\t\t\t(<any>document.activeElement).blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet input = document.createElement(\"button\");\r\n\t\t\tinput.style.position = \"fixed\";\r\n\t\t\tinput.style.top = \"0px\";\r\n\t\t\tinput.style.left = \"-10000px\";\r\n\t\t\tdocument.body.appendChild(input);\r\n\t\t\tinput.focus();\r\n\t\t\tinput.blur();\r\n\t\t\tdocument.body.removeChild(input);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\r\nexport function focus(element: HTMLElement | SVGSVGElement): void {\r\n\r\n\tif (element instanceof HTMLElement) {\r\n\t\telement.focus();\r\n\t}\r\n\telse {\r\n\t\tlet input = document.createElement(\"input\");\r\n\t\tlet fo = <SVGSVGElement>document.createElementNS(SVGNS, \"foreignObject\");\r\n\t\tfo.appendChild(input);\r\n\t\telement.appendChild(fo);\r\n\t\tinput.focus();\r\n\t\tinput.disabled = true;\r\n\t\tfo.remove();\r\n\t}\r\n\r\n\t/*if ((<any>element).focus != undefined) {\r\n\t\t(<any>element).focus();\r\n\t}\r\n\telse if (element instanceof SVGSVGElement) {\r\n\t\t// Not implemented\r\n\t\t// @todo implement focus fallback\r\n\t}*/\r\n}\r\n\r\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\r\nexport function outerHTML(element: HTMLElement | SVGSVGElement): string {\r\n\tif (element.outerHTML) {\r\n\t\treturn element.outerHTML;\r\n\t}\r\n\telse {\r\n\t\tlet twrap = document.createElement(\"div\");\r\n\t\tlet tnode = element.cloneNode(true);\r\n\t\ttwrap.appendChild(tnode);\r\n\t\tlet content = twrap.innerHTML;\r\n\t\treturn content;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\r\nexport function isElement(el: HTMLElement): boolean {\r\n\treturn el instanceof Object && el && el.nodeType === 1;\r\n}\r\n\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a: HTMLElement | SVGSVGElement, b: HTMLElement | SVGSVGElement): boolean {\r\n\tlet cursor: Node = b;\r\n\r\n\twhile (true) {\r\n\t\tif (a === cursor) {\r\n\t\t\treturn true;\r\n\r\n\t\t} else if (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a: Node): ShadowRoot | null {\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getRoot(a: Node): Document | ShadowRoot | null {\r\n\t// TODO replace with Node.prototype.getRootNode\r\n\tconst owner = a.ownerDocument;\r\n\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// If the cursor is the document, or it is a ShadowRoot\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif (cursor === owner || (<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <Document | ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\r\nexport function eventTarget(event: Event): EventTarget {\r\n\tif (typeof (<any>event).composedPath === \"function\") {\r\n\t\treturn (<any>event).composedPath()[0];\r\n\r\n\t} else {\r\n\t\treturn event.target;\r\n\t}\r\n}\r\n\r\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\r\nexport function copyAttributes(source: Element | HTMLElement | SVGSVGElement, target: HTMLElement | SVGSVGElement): void {\r\n\t$array.each(source.attributes, (attr) => {\r\n\t\t// TODO what if it's null ?\r\n\t\tif (attr.value != null) {\r\n\t\t\ttarget.setAttribute(attr.name, attr.value);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\r\nexport function fixPixelPerfect(el: HTMLElement): void {\r\n\treadFrame(() => {\r\n\t\t// sometimes IE doesn't like this\r\n\t\t// TODO figure out a way to remove this\r\n\t\ttry {\r\n\t\t\tconst rect = el.getBoundingClientRect();\r\n\r\n\t\t\tconst left = rect.left - Math.round(rect.left);\r\n\t\t\tconst top = rect.top - Math.round(rect.top);\r\n\r\n\t\t\tif (left !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.left = left + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (top !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.top = top + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} catch (e) { }\r\n\t});\r\n}\r\n\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\r\n\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element: ShadowRoot | null): CSSStyleSheet {\r\n\tif (element == null) {\r\n\t\tif (!$type.hasValue(rootStylesheet)) {\r\n\t\t\t// TODO use createElementNS ?\r\n\t\t\tconst e = document.createElement(\"style\");\r\n\t\t\te.type = \"text/css\";\r\n\t\t\tif (options.nonce != \"\") {\r\n\t\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t\t}\r\n\t\t\tdocument.head.appendChild(e);\r\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\r\n\t\t}\r\n\r\n\t\treturn rootStylesheet;\r\n\r\n\t} else {\r\n\t\t// TODO use createElementNS ?\r\n\t\tconst e = document.createElement(\"style\");\r\n\t\te.type = \"text/css\";\r\n\t\tif (options.nonce != \"\") {\r\n\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t}\r\n\t\telement.appendChild(e);\r\n\t\treturn e.sheet as CSSStyleSheet;\r\n\t}\r\n}\r\n\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\r\n\tconst index = root.cssRules.length;\r\n\r\n\troot.insertRule(selector + \"{}\", index);\r\n\r\n\treturn root.cssRules[index] as CSSStyleRule;\r\n}\r\n\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends Disposer {\r\n\r\n\t/**\r\n\t * CSS rule.\r\n\t */\r\n\tprivate _rule: CSSStyleRule;\r\n\r\n\t/**\r\n\t * A CSS selector text.\r\n\t *\r\n\t * E.g.: `.myClass p`\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t */\r\n\tpublic set selector(selector: string) {\r\n\t\tthis._rule.selectorText = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * @return CSS selector\r\n\t */\r\n\tpublic get selector(): string {\r\n\t\treturn this._rule.selectorText;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t * @param styles    An object of style attribute - value pairs\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }) {\r\n\t\tconst root = getStylesheet(element);\r\n\r\n\t\t// TODO test this\r\n\t\tsuper(() => {\r\n\t\t\t// TODO a bit hacky\r\n\t\t\tconst index = $array.indexOf(root.cssRules, this._rule);\r\n\r\n\t\t\tif (index === -1) {\r\n\t\t\t\tthrow new Error(\"Could not dispose StyleRule\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// TODO if it's empty remove it from the DOM ?\r\n\t\t\t\troot.deleteRule(index);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._rule = appendStylesheet(root, selector);\r\n\r\n\t\t$object.each(styles, (key, value) => {\r\n\t\t\tthis.setStyle(key, value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the same style properties with browser-specific prefixes.\r\n\t *\r\n\t * @param name   Attribute name\r\n\t * @param value  Attribute value\r\n\t */\r\n\tprivate _setVendorPrefixName(name: string, value: string): void {\r\n\t\tconst style = this._rule.style;\r\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\r\n\t\tstyle.setProperty(name, value, \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value for specific style attribute.\r\n\t *\r\n\t * @param name   Attribute\r\n\t * @param value  Value\r\n\t */\r\n\tpublic setStyle(name: string, value: string): void {\r\n\t\tif (name === \"transition\") {\r\n\t\t\tthis._setVendorPrefixName(name, value);\r\n\r\n\t\t} else {\r\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nlet styleId: number = 0;\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class StyleClass extends StyleRule {\r\n\r\n\t/**\r\n\t * Class name.\r\n\t */\r\n\tprivate _className: string;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param styles  An object of style attribute - value pairs\r\n\t * @param name    Class name\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, styles: { [name: string]: string }, name?: string) {\r\n\t\tconst className =\r\n\t\t\t(!$type.hasValue(name)\r\n\t\t\t\t// TODO generate the classname randomly\r\n\t\t\t\t? \"__style_\" + (++styleId) + \"__\"\r\n\t\t\t\t: name);\r\n\r\n\t\tsuper(element, \".\" + className, styles);\r\n\r\n\t\tthis._className = className;\r\n\t}\r\n\r\n\t/**\r\n\t * Class name.\r\n\t *\r\n\t * @param name  Class name\r\n\t */\r\n\tpublic set className(name: string) {\r\n\t\tthis._className = name;\r\n\t\tthis.selector = \".\" + name;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Class name\r\n\t */\r\n\tpublic get className(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the whole class to\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function ready(f: () => void): void {\r\n\tif (document.readyState !== \"loading\") {\r\n\t\tf();\r\n\r\n\t} else {\r\n\t\tconst listener = () => {\r\n\t\t\tif (document.readyState !== \"loading\") {\r\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\r\n\t\t\t\tf();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"readystatechange\", listener);\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFont(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-family\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFont(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFontSize(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-size\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFontSize(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\r\nexport function isHidden(element: HTMLElement): boolean {\r\n\treturn (element.offsetParent === null);\r\n}\r\n\r\n\r\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\r\nexport function isElementInViewport(el: HTMLElement, viewportTarget?: HTMLElement | HTMLElement[]): boolean {\r\n\r\n\t// Get position data of the element\r\n\tlet rect = el.getBoundingClientRect();\r\n\r\n\t// Convert to array\r\n\tconst targets = $type.isArray(viewportTarget) ? viewportTarget : viewportTarget ? [viewportTarget] : [];\r\n\r\n\t// Should we measure against specific viewport element?\r\n\tif (targets.length) {\r\n\t\tfor (let i = 0; i < targets.length; i++) {\r\n\r\n\t\t\tconst target = targets[i];\r\n\r\n\t\t\t// Check if viewport itself is visible\r\n\t\t\tif (!isElementInViewport(target)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if element is visible within the viewport\r\n\t\t\tlet viewportRect = target.getBoundingClientRect();\r\n\t\t\tif (\r\n\t\t\t\trect.top >= 0 &&\r\n\t\t\t\trect.left >= 0 &&\r\n\t\t\t\trect.top <= (viewportRect.top + viewportRect.height) &&\r\n\t\t\t\trect.left <= (viewportRect.left + viewportRect.width)\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\trect.top >= 0 &&\r\n\t\trect.left >= 0 &&\r\n\t\trect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n\t\trect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n\t);\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}