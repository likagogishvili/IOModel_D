{"ast":null,"code":"/**\r\n * Module for \"Focus\" filter.\r\n */\nimport { __extends } from \"tslib\";\nimport { Filter } from \"./Filter\";\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\n\nvar FocusFilter =\n/** @class */\nfunction (_super) {\n  __extends(FocusFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FocusFilter() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"FocusFilter\"; // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n\n    _this.feFlood = _this.paper.add(\"feFlood\");\n\n    _this.feFlood.attr({\n      \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"),\n      \"result\": \"base\"\n    });\n\n    _this.filterPrimitives.push(_this.feFlood);\n\n    _this.feMorphology = _this.paper.add(\"feMorphology\");\n\n    _this.feMorphology.attr({\n      \"result\": \"bigger\",\n      \"in\": \"SourceGraphic\",\n      \"operator\": \"dilate\",\n      \"radius\": \"2\"\n    });\n\n    _this.filterPrimitives.push(_this.feMorphology);\n\n    _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\n\n    _this.feColorMatrix.attr({\n      \"result\": \"mask\",\n      \"in\": \"bigger\",\n      \"type\": \"matrix\",\n      \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\"\n    });\n\n    _this.filterPrimitives.push(_this.feColorMatrix);\n\n    _this.feComposite = _this.paper.add(\"feComposite\");\n\n    _this.feComposite.attr({\n      \"result\": \"drop\",\n      \"in\": \"base\",\n      \"in2\": \"mask\",\n      \"operator\": \"in\"\n    });\n\n    _this.filterPrimitives.push(_this.feComposite);\n\n    _this.feBlend = _this.paper.add(\"feBlend\");\n\n    _this.feBlend.attr({\n      \"in\": \"SourceGraphic\",\n      \"in2\": \"drop\",\n      \"mode\": \"normal\"\n    });\n\n    _this.filterPrimitives.push(_this.feBlend); // Set default properties\n\n\n    _this.width = 130;\n    _this.height = 130;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(FocusFilter.prototype, \"stroke\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"stroke\"];\n    },\n\n    /**\r\n     * Stroke (outline) color.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"stroke\"] = value;\n      this.feFlood.attr({\n        \"flood-color\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FocusFilter.prototype, \"strokeWidth\", {\n    /**\r\n     * @return Outline thickness (px)\r\n     */\n    get: function () {\n      return this.properties[\"strokeWidth\"];\n    },\n\n    /**\r\n     * Stroke (outline) thickness in pixels.\r\n     *\r\n     * @param value  Outline thickness (px)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeWidth\"] = value;\n      this.feMorphology.attr({\n        \"radius\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FocusFilter.prototype, \"opacity\", {\n    /**\r\n     * @return Outline opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"opacity\"];\n    },\n\n    /**\r\n     * Opacity of the outline. (0-1)\r\n     *\r\n     * @param value  Outline opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"opacity\"] = value;\n      this.feColorMatrix.attr({\n        \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\"\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets filter's target element.\r\n   *\r\n   * In addition it also disables built-in focus outline on element this\r\n   * filter is applied to.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Element filter is being attached to\r\n   */\n\n  FocusFilter.prototype.setSprite = function (value) {\n    if (this._sprite && this._sprite != value) {\n      this._sprite.group.removeStyle(\"outline\");\n    }\n\n    value.group.addStyle({\n      \"outline\": \"none\"\n    });\n\n    _super.prototype.setSprite.call(this, value);\n  };\n\n  return FocusFilter;\n}(Filter);\n\nexport { FocusFilter };","map":{"version":3,"mappings":"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","names":["Filter","InterfaceColorSet","__extends","_super","_this","className","feFlood","paper","add","attr","getFor","filterPrimitives","push","feMorphology","feColorMatrix","feComposite","feBlend","width","height","applyTheme","Object","FocusFilter","properties","value","_sprite","group","removeStyle","addStyle","setSprite","call"],"sourceRoot":"","sources":["../../../../../../src/.internal/core/rendering/filters/FocusFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Focus\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Focus\" filter.\r\n */\r\nexport interface FocusFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t */\r\n\tstroke?: Color;\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity. (0-1)\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\r\nexport class FocusFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: FocusFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link FocusFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<FocusFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMorphology>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feMorphology: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feComposite>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feBlend: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FocusFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feMorphology = this.paper.add(\"feMorphology\");\r\n\t\tthis.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n\t\tthis.filterPrimitives.push(this.feMorphology);\r\n\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feBlend = this.paper.add(\"feBlend\");\r\n\t\tthis.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n\t\tthis.filterPrimitives.push(this.feBlend);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 130;\r\n\t\tthis.height = 130;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set stroke(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get stroke(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param value  Outline thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.feMorphology.attr({ \"radius\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): $type.Optional<number> {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t *\r\n\t * @param value  Outline opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"opacity\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): $type.Optional<number> {\r\n\t\treturn this.properties[\"opacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * In addition it also disables built-in focus outline on element this\r\n\t * filter is applied to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.group.removeStyle(\"outline\");\r\n\t\t}\r\n\t\tvalue.group.addStyle({\r\n\t\t\t\"outline\": \"none\"\r\n\t\t});\r\n\t\tsuper.setSprite(value);\r\n\t}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}