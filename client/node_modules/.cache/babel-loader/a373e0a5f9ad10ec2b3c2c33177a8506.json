{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n/**\r\n * A base class for all charts.\r\n */\n\nvar Chart =\n/** @class */\nfunction (_super) {\n  __extends(Chart, _super);\n\n  function Chart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Container]] chart places its elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"chartContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        interactiveChildren: false\n      }))\n    });\n    /**\r\n     * A [[Container]] chart places its bullets in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        interactiveChildren: false,\n        isMeasured: false,\n        position: \"absolute\",\n        width: p100,\n        height: p100\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Chart, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Chart\"\n  });\n  Object.defineProperty(Chart, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([Chart.className])\n  });\n  return Chart;\n}(Container);\n\nexport { Chart };","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,QAAmF,6BAAnF;AACA,SAASC,IAAT,QAAqB,yBAArB;AAWA;;;;AAGA;AAAA;AAAA;EAAoCC;;EAApC;IAAA;IAQC;;;;;;;IAKAC;sBAAA;wBAAA;oBAAA;aAA4CC,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBN,SAAS,CAACO,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAAEC,KAAK,EAAER,IAAT;QAAeS,MAAM,EAAET,IAAvB;QAA6BU,mBAAmB,EAAE;MAAlD,CAA1B,CAAnB;IAA5C;IAEA;;;;;;IAKAR;sBAAA;wBAAA;oBAAA;aAA8CH,SAAS,CAACO,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAAEG,mBAAmB,EAAE,KAAvB;QAA8BC,UAAU,EAAE,KAA1C;QAAiDC,QAAQ,EAAE,UAA3D;QAAuEJ,KAAK,EAAER,IAA9E;QAAoFS,MAAM,EAAET;MAA5F,CAA1B;IAA9C;;EAEA;;EArBAE;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CH,SAAS,CAACc,UAAV,CAAqBC,MAArB,CAA4B,CAACC,KAAK,CAACC,SAAP,CAA5B;EAA1C;EAoBD;AAAC,CAtBD,CAAoCjB,SAApC;;SAAsBgB","names":["Container","p100","__extends","Object","_this","children","push","new","_root","width","height","interactiveChildren","isMeasured","position","classNames","concat","Chart","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Chart.ts"],"sourcesContent":["import { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IChartSettings extends IContainerSettings {\n}\n\nexport interface IChartPrivate extends IContainerPrivate {\n}\n\nexport interface IChartEvents extends IContainerEvents {\n}\n\n/**\n * A base class for all charts.\n */\nexport abstract class Chart extends Container {\n\tpublic static className: string = \"Chart\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Chart.className]);\n\n\tdeclare public _settings: IChartSettings;\n\tdeclare public _privateSettings: IChartPrivate;\n\tdeclare public _events: IChartEvents;\n\n\t/**\n\t * A [[Container]] chart places its elements in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly chartContainer: Container = this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }));\n\n\t/**\n\t * A [[Container]] chart places its bullets in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 });\n\n}"]},"metadata":{},"sourceType":"module"}