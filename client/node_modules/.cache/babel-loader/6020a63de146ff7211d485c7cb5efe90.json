{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Theme } from \"../../core/Theme\";\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\nimport { ColorSet } from \"../../core/util/ColorSet\";\nimport { setColor } from \"../../themes/DefaultTheme\";\nimport * as $time from \"../../core/util/Time\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $array from \"../../core/util/Array\";\n/**\r\n * @ignore\r\n */\n\nvar XYChartDefaultTheme =\n/** @class */\nfunction (_super) {\n  __extends(XYChartDefaultTheme, _super);\n\n  function XYChartDefaultTheme() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(XYChartDefaultTheme.prototype, \"setupDefaultRules\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype.setupDefaultRules.call(this);\n\n      var ic = this._root.interfaceColors;\n      var language = this._root.language;\n      var r = this.rule.bind(this);\n      /**\r\n       * ========================================================================\r\n       * charts/xy\r\n       * ========================================================================\r\n       */\n\n      r(\"XYChart\").setAll({\n        colors: ColorSet.new(this._root, {}),\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 16,\n        paddingBottom: 16,\n        panX: false,\n        panY: false,\n        wheelStep: 0.25,\n        arrangeTooltips: true,\n        pinchZoomX: false,\n        pinchZoomY: false\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: XYChartScrollbar\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingRight: 0,\n        colors: ColorSet.new(this._root, {\n          saturation: 0\n        })\n      });\n      {\n        var rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\n        rule.setAll({\n          fillOpacity: 0.5\n        });\n        setColor(rule, \"fill\", ic, \"background\");\n      } // Class: RoundedRectangle\n\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\n        cornerRadiusTR: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusBL: 0,\n        fillOpacity: 0,\n        focusable: true\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", {\n        fillOpacity: 0.4\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\n        cornerRadiusTL: 0,\n        cornerRadiusBL: 0,\n        cornerRadiusTR: 0,\n        cornerRadiusBR: 0\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\n        cornerRadiusBL: 40,\n        cornerRadiusBR: 40,\n        cornerRadiusTL: 40,\n        cornerRadiusTR: 40\n      });\n      r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n        strokeOpacity: 0,\n        inside: true\n      });\n      r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n        strokeOpacity: 0,\n        inside: true,\n        minGridDistance: 5\n      });\n      r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n        opacity: 0.5,\n        centerY: p100,\n        minPosition: 0.01,\n        maxPosition: 0.99,\n        fontSize: \"0.8em\"\n      });\n      r(\"AxisLabel\", [\"category\"]).setAll({\n        text: \"{category}\",\n        populateText: true\n      });\n      r(\"AxisLabel\", [\"x\"]).setAll({\n        centerY: 0\n      });\n      r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\n        centerY: p100\n      });\n      r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\n        centerY: 0\n      });\n      r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\n        centerY: p100\n      });\n      r(\"AxisLabel\", [\"y\"]).setAll({\n        centerX: p100\n      });\n      r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\n        centerX: 0\n      });\n      r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\n        centerX: p100\n      });\n      r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n        centerX: 0\n      });\n      r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n        visible: false\n      }); // Class: Grid\n\n      r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n        visible: false\n      }); // Class: Grid\n\n      r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n        opacity: 0.5\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Cursor\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYCursor\").setAll({\n        behavior: \"none\",\n        layer: 30,\n        exportable: false,\n        snapToSeriesBy: \"xy\"\n      });\n      {\n        var rule = r(\"Grid\", [\"cursor\", \"x\"]);\n        rule.setAll({\n          strokeOpacity: 0.8,\n          strokeDasharray: [2, 2]\n        });\n        setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n      }\n      {\n        var rule = r(\"Grid\", [\"cursor\", \"y\"]);\n        rule.setAll({\n          strokeOpacity: 0.8,\n          strokeDasharray: [2, 2]\n        });\n        setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n      }\n      {\n        var rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\n        rule.setAll({\n          fillOpacity: 0.15\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n      }\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Axes\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"Axis\").setAll({\n        start: 0,\n        end: 1,\n        minZoomCount: 1,\n        maxZoomCount: Infinity,\n        maxZoomFactor: 1000,\n        maxDeviation: 0.1,\n        snapTooltip: true,\n        tooltipLocation: 0.5,\n        panX: true,\n        panY: true,\n        zoomX: true,\n        zoomY: true,\n        fixAxisSize: true\n      });\n      r(\"AxisLabel\").setAll({\n        location: 0.5,\n        multiLocation: 0,\n        centerX: p50,\n        centerY: p50,\n        paddingTop: 3,\n        paddingBottom: 3,\n        paddingLeft: 5,\n        paddingRight: 5\n      }); // The following is deprecated following text measuring updates in 5.0.5\n      // r(\"AxisLabel\", [\"y\"]).setAll({\n      // \ttextAlign: \"right\"\n      // });\n      // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n      // \ttextAlign: \"left\"\n      // });\n\n      r(\"Container\", [\"axis\", \"header\"]).setAll({\n        layer: 30\n      });\n      {\n        var rule = r(\"AxisRenderer\");\n        rule.setAll({\n          strokeOpacity: 0\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"AxisRendererX\").setAll({\n        minGridDistance: 120,\n        opposite: false,\n        inversed: false,\n        cellStartLocation: 0,\n        cellEndLocation: 1,\n        width: p100\n      });\n      r(\"AxisRendererY\").setAll({\n        minGridDistance: 40,\n        opposite: false,\n        inversed: false,\n        cellStartLocation: 0,\n        cellEndLocation: 1,\n        height: p100\n      });\n      {\n        var rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\n        rule.setAll({\n          fillOpacity: 0\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n        rule.states.create(\"hover\", {\n          fillOpacity: 0.1\n        });\n      }\n      r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\n        cursorOverStyle: \"ew-resize\"\n      });\n      r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\n        cursorOverStyle: \"ns-resize\"\n      });\n      {\n        var rule = r(\"Grid\");\n        rule.setAll({\n          location: 0,\n          strokeOpacity: 0.15\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"Grid\", [\"base\"]).setAll({\n        strokeOpacity: 0.3\n      });\n      {\n        var rule = r(\"Graphics\", [\"axis\", \"fill\"]);\n        rule.setAll({\n          visible: false,\n          isMeasured: false,\n          position: \"absolute\",\n          fillOpacity: 0.05\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n      }\n      r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\n        isMeasured: true\n      }); // hides all elements of series axis range\n\n      r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\n        visible: false,\n        isMeasured: true\n      });\n      r(\"Grid\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      r(\"AxisTick\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      {\n        var rule = r(\"AxisTick\");\n        rule.setAll({\n          location: 0.5,\n          multiLocation: 0,\n          strokeOpacity: 1,\n          isMeasured: false,\n          position: \"absolute\",\n          visible: false\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"CategoryAxis\").setAll({\n        startLocation: 0,\n        endLocation: 1,\n        fillRule: function (dataItem, index) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            if (!$type.isNumber(index) || index % 2 == 0) {\n              axisFill.setPrivate(\"visible\", true);\n            } else {\n              axisFill.setPrivate(\"visible\", false);\n            }\n          }\n        }\n      });\n      var gridIntervals = [{\n        timeUnit: \"millisecond\",\n        count: 1\n      }, {\n        timeUnit: \"millisecond\",\n        count: 5\n      }, {\n        timeUnit: \"millisecond\",\n        count: 10\n      }, {\n        timeUnit: \"millisecond\",\n        count: 50\n      }, {\n        timeUnit: \"millisecond\",\n        count: 100\n      }, {\n        timeUnit: \"millisecond\",\n        count: 500\n      }, {\n        timeUnit: \"second\",\n        count: 1\n      }, {\n        timeUnit: \"second\",\n        count: 5\n      }, {\n        timeUnit: \"second\",\n        count: 10\n      }, {\n        timeUnit: \"second\",\n        count: 30\n      }, {\n        timeUnit: \"minute\",\n        count: 1\n      }, {\n        timeUnit: \"minute\",\n        count: 5\n      }, {\n        timeUnit: \"minute\",\n        count: 10\n      }, {\n        timeUnit: \"minute\",\n        count: 15\n      }, {\n        timeUnit: \"minute\",\n        count: 30\n      }, {\n        timeUnit: \"hour\",\n        count: 1\n      }, {\n        timeUnit: \"hour\",\n        count: 3\n      }, {\n        timeUnit: \"hour\",\n        count: 6\n      }, {\n        timeUnit: \"hour\",\n        count: 12\n      }, {\n        timeUnit: \"day\",\n        count: 1\n      }, {\n        timeUnit: \"day\",\n        count: 2\n      }, {\n        timeUnit: \"day\",\n        count: 3\n      }, {\n        timeUnit: \"day\",\n        count: 4\n      }, {\n        timeUnit: \"day\",\n        count: 5\n      }, {\n        timeUnit: \"week\",\n        count: 1\n      }, {\n        timeUnit: \"month\",\n        count: 1\n      }, {\n        timeUnit: \"month\",\n        count: 2\n      }, {\n        timeUnit: \"month\",\n        count: 3\n      }, {\n        timeUnit: \"month\",\n        count: 6\n      }, {\n        timeUnit: \"year\",\n        count: 1\n      }, {\n        timeUnit: \"year\",\n        count: 2\n      }, {\n        timeUnit: \"year\",\n        count: 5\n      }, {\n        timeUnit: \"year\",\n        count: 10\n      }, {\n        timeUnit: \"year\",\n        count: 50\n      }, {\n        timeUnit: \"year\",\n        count: 100\n      }, {\n        timeUnit: \"year\",\n        count: 200\n      }, {\n        timeUnit: \"year\",\n        count: 500\n      }, {\n        timeUnit: \"year\",\n        count: 1000\n      }, {\n        timeUnit: \"year\",\n        count: 2000\n      }, {\n        timeUnit: \"year\",\n        count: 5000\n      }, {\n        timeUnit: \"year\",\n        count: 10000\n      }, {\n        timeUnit: \"year\",\n        count: 100000\n      }];\n      var dateFormats = {\n        \"millisecond\": language.translate(\"_date_millisecond\"),\n        \"second\": language.translate(\"_date_second\"),\n        \"minute\": language.translate(\"_date_minute\"),\n        \"hour\": language.translate(\"_date_hour\"),\n        \"day\": language.translate(\"_date_day\"),\n        \"week\": language.translate(\"_date_day\"),\n        \"month\": language.translate(\"_date_month\"),\n        \"year\": language.translate(\"_date_year\")\n      };\n      var periodChangeDateFormats = {\n        \"millisecond\": language.translate(\"_date_millisecond\"),\n        \"second\": language.translate(\"_date_second\"),\n        \"minute\": language.translate(\"_date_minute\"),\n        \"hour\": language.translate(\"_date_day\"),\n        \"day\": language.translate(\"_date_day\"),\n        \"week\": language.translate(\"_date_day\"),\n        \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\n        \"year\": language.translate(\"_date_year\")\n      };\n      var tooltipDateFormats = {\n        \"millisecond\": language.translate(\"_date_millisecond_full\"),\n        \"second\": language.translate(\"_date_second_full\"),\n        \"minute\": language.translate(\"_date_minute_full\"),\n        \"hour\": language.translate(\"_date_hour_full\"),\n        \"day\": language.translate(\"_date_day_full\"),\n        \"week\": language.translate(\"_date_week_full\"),\n        \"month\": language.translate(\"_date_month_full\"),\n        \"year\": language.translate(\"_date_year\")\n      };\n      r(\"CategoryDateAxis\").setAll({\n        markUnitChange: true,\n        gridIntervals: $array.copy(gridIntervals),\n        dateFormats: $object.copy(dateFormats),\n        periodChangeDateFormats: $object.copy(periodChangeDateFormats)\n      });\n      r(\"DateAxis\").setAll({\n        strictMinMax: true,\n        startLocation: 0,\n        endLocation: 1,\n        markUnitChange: true,\n        groupData: false,\n        groupCount: 500,\n        gridIntervals: $array.copy(gridIntervals),\n        dateFormats: $object.copy(dateFormats),\n        periodChangeDateFormats: $object.copy(periodChangeDateFormats),\n        tooltipDateFormats: tooltipDateFormats,\n        groupIntervals: [{\n          timeUnit: \"millisecond\",\n          count: 1\n        }, {\n          timeUnit: \"millisecond\",\n          count: 10\n        }, {\n          timeUnit: \"millisecond\",\n          count: 100\n        }, {\n          timeUnit: \"second\",\n          count: 1\n        }, {\n          timeUnit: \"second\",\n          count: 10\n        }, {\n          timeUnit: \"minute\",\n          count: 1\n        }, {\n          timeUnit: \"minute\",\n          count: 10\n        }, {\n          timeUnit: \"hour\",\n          count: 1\n        }, {\n          timeUnit: \"day\",\n          count: 1\n        }, {\n          timeUnit: \"week\",\n          count: 1\n        }, {\n          timeUnit: \"month\",\n          count: 1\n        }, {\n          timeUnit: \"year\",\n          count: 1\n        }],\n        fillRule: function (dataItem) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            var axis = dataItem.component;\n            var value = dataItem.get(\"value\");\n            var endValue = dataItem.get(\"endValue\");\n            var intervalDuration = axis.intervalDuration();\n            var baseInterval = axis.getPrivate(\"baseInterval\");\n            var min = axis.getPrivate(\"min\", 0);\n            min = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, _this._root.locale.firstDayOfWeek, _this._root.utc, undefined, _this._root.timezone).getTime();\n\n            if (value != null && endValue != null) {\n              var val = Math.round((value - min) / intervalDuration) / 2;\n\n              if (val == Math.round(val)) {\n                axisFill.setPrivate(\"visible\", true);\n              } else {\n                axisFill.setPrivate(\"visible\", false);\n              }\n            }\n          }\n        }\n      });\n      r(\"GaplessDateAxis\").setAll({\n        fillRule: function (dataItem) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            var index = dataItem.get(\"index\");\n            var visible = false;\n\n            if (!$type.isNumber(index) || index % 2 == 0) {\n              visible = true;\n            }\n\n            axisFill.setPrivate(\"visible\", visible);\n          }\n        }\n      });\n      r(\"ValueAxis\").setAll({\n        baseValue: 0,\n        logarithmic: false,\n        strictMinMax: false,\n        fillRule: function (dataItem) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            var axis = dataItem.component;\n            var value = dataItem.get(\"value\");\n            var step = axis.getPrivate(\"step\");\n\n            if ($type.isNumber(value) && $type.isNumber(step)) {\n              if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\n                axisFill.setPrivate(\"visible\", false);\n              } else {\n                axisFill.setPrivate(\"visible\", true);\n              }\n            }\n          }\n        }\n      });\n      r(\"DurationAxis\").setAll({\n        baseUnit: \"second\"\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Series\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYSeries\").setAll({\n        maskBullets: true,\n        stackToNegative: true,\n        locationX: 0.5,\n        locationY: 0.5,\n        snapTooltip: false,\n        openValueXGrouped: \"open\",\n        openValueYGrouped: \"open\",\n        valueXGrouped: \"close\",\n        valueYGrouped: \"close\",\n        seriesTooltipTarget: \"series\"\n      });\n      r(\"BaseColumnSeries\").setAll({\n        adjustBulletPosition: true\n      });\n      r(\"ColumnSeries\").setAll({\n        clustered: true\n      });\n      r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\n        position: \"absolute\",\n        isMeasured: false,\n        width: percent(70),\n        height: percent(70),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 0,\n        fillOpacity: 1,\n        role: \"figure\"\n      });\n      r(\"LineSeries\").setAll({\n        connect: true,\n        autoGapCount: 1.1,\n        stackToNegative: false\n      });\n      r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\n        position: \"absolute\",\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        isMeasured: false\n      });\n      r(\"Graphics\", [\"series\", \"fill\"]).setAll({\n        visible: false,\n        fillOpacity: 0,\n        position: \"absolute\",\n        strokeWidth: 0,\n        strokeOpacity: 0,\n        isMeasured: false\n      });\n      r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\n        draw: function (display, sprite) {\n          var parent = sprite.parent;\n\n          if (parent) {\n            var h = parent.height();\n            var w = parent.width();\n            display.moveTo(0, h / 2);\n            display.lineTo(w, h / 2);\n          }\n        }\n      });\n      {\n        var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\n        setColor(rule, \"stroke\", ic, \"disabled\");\n      }\n      r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\n        draw: function (display, sprite) {\n          var parent = sprite.parent;\n\n          if (parent) {\n            var h = parent.height();\n            var w = parent.width();\n            display.moveTo(0, 0);\n            display.lineTo(w, 0);\n            display.lineTo(w, h);\n            display.lineTo(0, h);\n            display.lineTo(0, 0);\n          }\n        }\n      });\n      {\n        var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\n        setColor(rule, \"stroke\", ic, \"disabled\");\n      }\n      r(\"SmoothedXYLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"SmoothedXLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"SmoothedYLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"Candlestick\").setAll({\n        position: \"absolute\",\n        isMeasured: false,\n        width: percent(50),\n        height: percent(50),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 0,\n        fillOpacity: 1,\n        role: \"figure\"\n      });\n      r(\"OHLC\").setAll({\n        width: percent(80),\n        height: percent(80)\n      });\n      r(\"CandlestickSeries\").setAll({\n        lowValueXGrouped: \"low\",\n        lowValueYGrouped: \"low\",\n        highValueXGrouped: \"high\",\n        highValueYGrouped: \"high\",\n        openValueXGrouped: \"open\",\n        openValueYGrouped: \"open\",\n        valueXGrouped: \"close\",\n        valueYGrouped: \"close\"\n      }); // These rules can be used for regular columns, too\n\n      {\n        var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\n        setColor(rule, \"fill\", ic, \"positive\");\n        setColor(rule, \"stroke\", ic, \"positive\");\n      }\n      {\n        var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\n        setColor(rule, \"fill\", ic, \"negative\");\n        setColor(rule, \"stroke\", ic, \"negative\");\n      }\n      r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {\n        fillOpacity: 1\n      });\n      r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {\n        fillOpacity: 0\n      });\n    }\n  });\n  return XYChartDefaultTheme;\n}(Theme);\n\nexport { XYChartDefaultTheme };","map":{"version":3,"mappings":";AAQA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,QAAmC,yBAAnC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AAEA;;;;AAGA;AAAA;AAAA;EAAyCC;;EAAzC;;EAwtBC;;;;;;WAvtBA;MAAA;;MACCC,iBAAMC,iBAAN,CAAuBC,IAAvB,CAAuB,IAAvB;;MAEA,IAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWC,eAAtB;MACA,IAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;MACA,IAAMC,CAAC,GAAG,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAV;MAEA;;;;;;MAMAF,CAAC,CAAC,SAAD,CAAD,CAAaG,MAAb,CAAoB;QACnBC,MAAM,EAAEnB,QAAQ,CAACoB,GAAT,CAAa,KAAKR,KAAlB,EAAyB,EAAzB,CADW;QAEnBS,WAAW,EAAE,EAFM;QAGnBC,YAAY,EAAE,EAHK;QAInBC,UAAU,EAAE,EAJO;QAKnBC,aAAa,EAAE,EALI;QAMnBC,IAAI,EAAE,KANa;QAOnBC,IAAI,EAAE,KAPa;QAQnBC,SAAS,EAAE,IARQ;QASnBC,eAAe,EAAE,IATE;QAUnBC,UAAU,EAAE,KAVO;QAWnBC,UAAU,EAAE;MAXO,CAApB;MAeA;;;;;;MAMAf,CAAC,CAAC,SAAD,EAAY,CAAC,WAAD,EAAc,OAAd,CAAZ,CAAD,CAAqCG,MAArC,CAA4C;QAC3CM,aAAa,EAAE,CAD4B;QAE3CH,WAAW,EAAE,CAF8B;QAG3CE,UAAU,EAAE,CAH+B;QAI3CD,YAAY,EAAE,CAJ6B;QAK3CH,MAAM,EAAEnB,QAAQ,CAACoB,GAAT,CAAa,KAAKR,KAAlB,EAAyB;UAChCmB,UAAU,EAAE;QADoB,CAAzB;MALmC,CAA5C;MAUA;QACC,IAAMf,IAAI,GAAGD,CAAC,CAAC,UAAD,EAAa,CAAC,WAAD,EAAc,SAAd,CAAb,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXc,WAAW,EAAE;QADF,CAAZ;QAIA/B,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,YAAnB,CAAR;MACA,CApDF,CAsDC;;MACAI,CAAC,CAAC,kBAAD,EAAqB,CAAC,IAAD,EAAO,WAAP,EAAoB,OAApB,CAArB,CAAD,CAAoDG,MAApD,CAA2D;QAC1De,cAAc,EAAE,CAD0C;QAE1DC,cAAc,EAAE,CAF0C;QAG1DC,cAAc,EAAE,CAH0C;QAI1DC,cAAc,EAAE,CAJ0C;QAK1DJ,WAAW,EAAE,CAL6C;QAM1DK,SAAS,EAAE;MAN+C,CAA3D;MASAtB,CAAC,CAAC,kBAAD,EAAqB,CAAC,IAAD,EAAO,WAAP,EAAoB,OAApB,CAArB,CAAD,CAAoDuB,MAApD,CAA2DC,MAA3D,CAAkE,OAAlE,EAA2E;QAAEP,WAAW,EAAE;MAAf,CAA3E;MAEAjB,CAAC,CAAC,kBAAD,EAAqB,CAAC,IAAD,EAAO,WAAP,EAAoB,OAApB,EAA6B,YAA7B,CAArB,CAAD,CAAkEG,MAAlE,CAAyE;QACxEgB,cAAc,EAAE,CADwD;QAExEE,cAAc,EAAE,CAFwD;QAGxEH,cAAc,EAAE,CAHwD;QAIxEE,cAAc,EAAE;MAJwD,CAAzE;MAOApB,CAAC,CAAC,kBAAD,EAAqB,CAAC,IAAD,EAAO,WAAP,EAAoB,OAApB,EAA6B,YAA7B,EAA2C,QAA3C,EAAqD,QAArD,CAArB,CAAD,CAAsFG,MAAtF,CAA6F;QAC5FkB,cAAc,EAAE,EAD4E;QAE5FD,cAAc,EAAE,EAF4E;QAG5FD,cAAc,EAAE,EAH4E;QAI5FD,cAAc,EAAE;MAJ4E,CAA7F;MAOAlB,CAAC,CAAC,eAAD,EAAkB,CAAC,IAAD,EAAO,OAAP,EAAgB,WAAhB,CAAlB,CAAD,CAAiDG,MAAjD,CAAwD;QACvDsB,aAAa,EAAE,CADwC;QAEvDC,MAAM,EAAE;MAF+C,CAAxD;MAKA1B,CAAC,CAAC,eAAD,EAAkB,CAAC,IAAD,EAAO,OAAP,EAAgB,WAAhB,CAAlB,CAAD,CAAiDG,MAAjD,CAAwD;QACvDsB,aAAa,EAAE,CADwC;QAEvDC,MAAM,EAAE,IAF+C;QAGvDC,eAAe,EAAE;MAHsC,CAAxD;MAMA3B,CAAC,CAAC,WAAD,EAAc,CAAC,IAAD,EAAO,WAAP,EAAoB,GAApB,CAAd,CAAD,CAAyCG,MAAzC,CAAgD;QAC/CyB,OAAO,EAAE,GADsC;QAE/CC,OAAO,EAAE7C,IAFsC;QAG/C8C,WAAW,EAAE,IAHkC;QAI/CC,WAAW,EAAE,IAJkC;QAK/CC,QAAQ,EAAE;MALqC,CAAhD;MAQAhC,CAAC,CAAC,WAAD,EAAc,CAAC,UAAD,CAAd,CAAD,CAA6BG,MAA7B,CAAoC;QACnC8B,IAAI,EAAE,YAD6B;QAEnCC,YAAY,EAAE;MAFqB,CAApC;MAKAlC,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,CAAd,CAAD,CAAsBG,MAAtB,CAA6B;QAC5B0B,OAAO,EAAE;MADmB,CAA7B;MAIA7B,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,QAAN,CAAd,CAAD,CAAgCG,MAAhC,CAAuC;QACtC0B,OAAO,EAAE7C;MAD6B,CAAvC;MAIAgB,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,QAAN,EAAgB,UAAhB,CAAd,CAAD,CAA4CG,MAA5C,CAAmD;QAClD0B,OAAO,EAAE;MADyC,CAAnD;MAIA7B,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,UAAN,CAAd,CAAD,CAAkCG,MAAlC,CAAyC;QACxC0B,OAAO,EAAE7C;MAD+B,CAAzC;MAKAgB,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,CAAd,CAAD,CAAsBG,MAAtB,CAA6B;QAC5BgC,OAAO,EAAEnD;MADmB,CAA7B;MAIAgB,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,QAAN,CAAd,CAAD,CAAgCG,MAAhC,CAAuC;QACtCgC,OAAO,EAAE;MAD6B,CAAvC;MAIAnC,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,QAAN,EAAgB,UAAhB,CAAd,CAAD,CAA4CG,MAA5C,CAAmD;QAClDgC,OAAO,EAAEnD;MADyC,CAAnD;MAIAgB,CAAC,CAAC,WAAD,EAAc,CAAC,GAAD,EAAM,UAAN,CAAd,CAAD,CAAkCG,MAAlC,CAAyC;QACxCgC,OAAO,EAAE;MAD+B,CAAzC;MAKAnC,CAAC,CAAC,WAAD,EAAc,CAAC,IAAD,EAAO,WAAP,EAAoB,GAApB,CAAd,CAAD,CAAyCG,MAAzC,CAAgD;QAC/CiC,OAAO,EAAE;MADsC,CAAhD,EA1ID,CA8IC;;MACApC,CAAC,CAAC,MAAD,EAAS,CAAC,IAAD,EAAO,WAAP,EAAoB,GAApB,CAAT,CAAD,CAAoCG,MAApC,CAA2C;QAC1CiC,OAAO,EAAE;MADiC,CAA3C,EA/ID,CAmJC;;MACApC,CAAC,CAAC,MAAD,EAAS,CAAC,IAAD,EAAO,WAAP,EAAoB,GAApB,CAAT,CAAD,CAAoCG,MAApC,CAA2C;QAC1CyB,OAAO,EAAE;MADiC,CAA3C;MAOA;;;;;;MAMA5B,CAAC,CAAC,UAAD,CAAD,CAAcG,MAAd,CAAqB;QACpBkC,QAAQ,EAAE,MADU;QAEpBC,KAAK,EAAE,EAFa;QAGpBC,UAAU,EAAE,KAHQ;QAIpBC,cAAc,EAAE;MAJI,CAArB;MAOA;QACC,IAAMvC,IAAI,GAAGD,CAAC,CAAC,MAAD,EAAS,CAAC,QAAD,EAAW,GAAX,CAAT,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXsB,aAAa,EAAE,GADJ;UAEXgB,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ;QAFN,CAAZ;QAKAvD,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,uBAArB,CAAR;MACA;MAED;QACC,IAAMK,IAAI,GAAGD,CAAC,CAAC,MAAD,EAAS,CAAC,QAAD,EAAW,GAAX,CAAT,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXsB,aAAa,EAAE,GADJ;UAEXgB,eAAe,EAAE,CAAC,CAAD,EAAI,CAAJ;QAFN,CAAZ;QAKAvD,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,uBAArB,CAAR;MACA;MAED;QACC,IAAMK,IAAI,GAAGD,CAAC,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,WAAX,CAAb,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXc,WAAW,EAAE;QADF,CAAZ;QAIA/B,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,uBAAnB,CAAR;MACA;MAGD;;;;;;MAMAI,CAAC,CAAC,MAAD,CAAD,CAAUG,MAAV,CAAiB;QAChBuC,KAAK,EAAE,CADS;QAEhBC,GAAG,EAAE,CAFW;QAGhBC,YAAY,EAAE,CAHE;QAIhBC,YAAY,EAAEC,QAJE;QAKhBC,aAAa,EAAE,IALC;QAMhBC,YAAY,EAAE,GANE;QAOhBC,WAAW,EAAE,IAPG;QAQhBC,eAAe,EAAE,GARD;QAShBxC,IAAI,EAAE,IATU;QAUhBC,IAAI,EAAE,IAVU;QAWhBwC,KAAK,EAAE,IAXS;QAYhBC,KAAK,EAAE,IAZS;QAahBC,WAAW,EAAE;MAbG,CAAjB;MAgBArD,CAAC,CAAC,WAAD,CAAD,CAAeG,MAAf,CAAsB;QACrBmD,QAAQ,EAAE,GADW;QAErBC,aAAa,EAAE,CAFM;QAGrBpB,OAAO,EAAEpD,GAHY;QAIrB8C,OAAO,EAAE9C,GAJY;QAKrByB,UAAU,EAAE,CALS;QAMrBC,aAAa,EAAE,CANM;QAOrBH,WAAW,EAAE,CAPQ;QAQrBC,YAAY,EAAE;MARO,CAAtB,EA/ND,CA0OC;MACA;MACA;MACA;MAEA;MACA;MACA;;MAEAP,CAAC,CAAC,WAAD,EAAc,CAAC,MAAD,EAAS,QAAT,CAAd,CAAD,CAAmCG,MAAnC,CAA0C;QACzCmC,KAAK,EAAE;MADkC,CAA1C;MAIA;QACC,IAAMrC,IAAI,GAAGD,CAAC,CAAC,cAAD,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXsB,aAAa,EAAE;QADJ,CAAZ;QAIAvC,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,MAArB,CAAR;MACA;MAEDI,CAAC,CAAC,eAAD,CAAD,CAAmBG,MAAnB,CAA0B;QACzBwB,eAAe,EAAE,GADQ;QAEzB6B,QAAQ,EAAE,KAFe;QAGzBC,QAAQ,EAAE,KAHe;QAIzBC,iBAAiB,EAAE,CAJM;QAKzBC,eAAe,EAAE,CALQ;QAMzBC,KAAK,EAAE5E;MANkB,CAA1B;MASAgB,CAAC,CAAC,eAAD,CAAD,CAAmBG,MAAnB,CAA0B;QACzBwB,eAAe,EAAE,EADQ;QAEzB6B,QAAQ,EAAE,KAFe;QAGzBC,QAAQ,EAAE,KAHe;QAIzBC,iBAAiB,EAAE,CAJM;QAKzBC,eAAe,EAAE,CALQ;QAMzBE,MAAM,EAAE7E;MANiB,CAA1B;MASA;QACC,IAAMiB,IAAI,GAAGD,CAAC,CAAC,WAAD,EAAc,CAAC,MAAD,EAAS,OAAT,CAAd,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXc,WAAW,EAAE;QADF,CAAZ;QAIA/B,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,uBAAnB,CAAR;QAEAK,IAAI,CAACsB,MAAL,CAAYC,MAAZ,CAAmB,OAAnB,EAA4B;UAAEP,WAAW,EAAE;QAAf,CAA5B;MACA;MAEDjB,CAAC,CAAC,WAAD,EAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,GAAlB,CAAd,CAAD,CAAuCG,MAAvC,CAA8C;QAC7C2D,eAAe,EAAE;MAD4B,CAA9C;MAIA9D,CAAC,CAAC,WAAD,EAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,GAAlB,CAAd,CAAD,CAAuCG,MAAvC,CAA8C;QAC7C2D,eAAe,EAAE;MAD4B,CAA9C;MAKA;QACC,IAAM7D,IAAI,GAAGD,CAAC,CAAC,MAAD,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXmD,QAAQ,EAAE,CADC;UAEX7B,aAAa,EAAE;QAFJ,CAAZ;QAKAvC,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,MAArB,CAAR;MACA;MAEDI,CAAC,CAAC,MAAD,EAAS,CAAC,MAAD,CAAT,CAAD,CAAoBG,MAApB,CAA2B;QAC1BsB,aAAa,EAAE;MADW,CAA3B;MAIA;QACC,IAAMxB,IAAI,GAAGD,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,MAAT,CAAb,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXiC,OAAO,EAAE,KADE;UAEX2B,UAAU,EAAE,KAFD;UAGXC,QAAQ,EAAE,UAHC;UAIX/C,WAAW,EAAE;QAJF,CAAZ;QAOA/B,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,uBAAnB,CAAR;MACA;MAEDI,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,CAAb,CAAD,CAAyCG,MAAzC,CAAgD;QAC/C4D,UAAU,EAAE;MADmC,CAAhD,EApUD,CAwUC;;MACA/D,CAAC,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAAb,CAAD,CAA2CG,MAA3C,CAAkD;QACjDiC,OAAO,EAAE,KADwC;QAEjD2B,UAAU,EAAE;MAFqC,CAAlD;MAKA/D,CAAC,CAAC,MAAD,EAAS,CAAC,QAAD,EAAW,OAAX,CAAT,CAAD,CAA+BG,MAA/B,CAAsC;QACrCiC,OAAO,EAAE;MAD4B,CAAtC;MAIApC,CAAC,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,OAAX,CAAb,CAAD,CAAmCG,MAAnC,CAA0C;QACzCiC,OAAO,EAAE;MADgC,CAA1C;MAIApC,CAAC,CAAC,WAAD,EAAc,CAAC,QAAD,EAAW,OAAX,CAAd,CAAD,CAAoCG,MAApC,CAA2C;QAC1CiC,OAAO,EAAE;MADiC,CAA3C;MAIA;QACC,IAAMnC,IAAI,GAAGD,CAAC,CAAC,UAAD,CAAd;QAEAC,IAAI,CAACE,MAAL,CAAY;UACXmD,QAAQ,EAAE,GADC;UAEXC,aAAa,EAAE,CAFJ;UAGX9B,aAAa,EAAE,CAHJ;UAIXsC,UAAU,EAAE,KAJD;UAKXC,QAAQ,EAAE,UALC;UAMX5B,OAAO,EAAE;QANE,CAAZ;QASAlD,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,MAArB,CAAR;MACA;MAEDI,CAAC,CAAC,cAAD,CAAD,CAAkBG,MAAlB,CAAyB;QACxB8D,aAAa,EAAE,CADS;QAExBC,WAAW,EAAE,CAFW;QAGxBC,QAAQ,EAAE,UAACC,QAAD,EAA4CC,KAA5C,EAA0D;UACnE,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAjB;;UACA,IAAID,QAAJ,EAAc;YACb,IAAI,CAAClF,KAAK,CAACoF,QAAN,CAAeH,KAAf,CAAD,IAA0BA,KAAK,GAAG,CAAR,IAAa,CAA3C,EAA8C;cAC7CC,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,IAA/B;YACA,CAFD,MAGK;cACJH,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,KAA/B;YACA;UACD;QACD;MAbuB,CAAzB;MAgBA,IAAMC,aAAa,GAAyB,CAC3C;QAAEC,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAD2C,EAE3C;QAAED,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAF2C,EAG3C;QAAED,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAH2C,EAI3C;QAAED,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAJ2C,EAK3C;QAAED,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAL2C,EAM3C;QAAED,QAAQ,EAAE,aAAZ;QAA2BC,KAAK,EAAE;MAAlC,CAN2C,EAO3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAP2C,EAQ3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAR2C,EAS3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAT2C,EAU3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAV2C,EAW3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAX2C,EAY3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAZ2C,EAa3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAb2C,EAc3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAd2C,EAe3C;QAAED,QAAQ,EAAE,QAAZ;QAAsBC,KAAK,EAAE;MAA7B,CAf2C,EAgB3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAhB2C,EAiB3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAjB2C,EAkB3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAlB2C,EAmB3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAnB2C,EAoB3C;QAAED,QAAQ,EAAE,KAAZ;QAAmBC,KAAK,EAAE;MAA1B,CApB2C,EAqB3C;QAAED,QAAQ,EAAE,KAAZ;QAAmBC,KAAK,EAAE;MAA1B,CArB2C,EAsB3C;QAAED,QAAQ,EAAE,KAAZ;QAAmBC,KAAK,EAAE;MAA1B,CAtB2C,EAuB3C;QAAED,QAAQ,EAAE,KAAZ;QAAmBC,KAAK,EAAE;MAA1B,CAvB2C,EAwB3C;QAAED,QAAQ,EAAE,KAAZ;QAAmBC,KAAK,EAAE;MAA1B,CAxB2C,EAyB3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAzB2C,EA0B3C;QAAED,QAAQ,EAAE,OAAZ;QAAqBC,KAAK,EAAE;MAA5B,CA1B2C,EA2B3C;QAAED,QAAQ,EAAE,OAAZ;QAAqBC,KAAK,EAAE;MAA5B,CA3B2C,EA4B3C;QAAED,QAAQ,EAAE,OAAZ;QAAqBC,KAAK,EAAE;MAA5B,CA5B2C,EA6B3C;QAAED,QAAQ,EAAE,OAAZ;QAAqBC,KAAK,EAAE;MAA5B,CA7B2C,EA8B3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CA9B2C,EA+B3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CA/B2C,EAgC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAhC2C,EAiC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAjC2C,EAkC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAlC2C,EAmC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAnC2C,EAoC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CApC2C,EAqC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CArC2C,EAsC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAtC2C,EAuC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAvC2C,EAwC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAxC2C,EAyC3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CAzC2C,EA0C3C;QAAED,QAAQ,EAAE,MAAZ;QAAoBC,KAAK,EAAE;MAA3B,CA1C2C,CAA5C;MA6CA,IAAMC,WAAW,GAAG;QACnB,eAAe9E,QAAQ,CAAC+E,SAAT,CAAmB,mBAAnB,CADI;QAEnB,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,cAAnB,CAFS;QAGnB,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,cAAnB,CAHS;QAInB,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,YAAnB,CAJW;QAKnB,OAAO/E,QAAQ,CAAC+E,SAAT,CAAmB,WAAnB,CALY;QAMnB,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,WAAnB,CANW;QAOnB,SAAS/E,QAAQ,CAAC+E,SAAT,CAAmB,aAAnB,CAPU;QAQnB,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,YAAnB;MARW,CAApB;MAWA,IAAMC,uBAAuB,GAAG;QAC/B,eAAehF,QAAQ,CAAC+E,SAAT,CAAmB,mBAAnB,CADgB;QAE/B,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,cAAnB,CAFqB;QAG/B,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,cAAnB,CAHqB;QAI/B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,WAAnB,CAJuB;QAK/B,OAAO/E,QAAQ,CAAC+E,SAAT,CAAmB,WAAnB,CALwB;QAM/B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,WAAnB,CANuB;QAO/B,SAAS/E,QAAQ,CAAC+E,SAAT,CAAmB,aAAnB,IAAoC,GAApC,GAA0C/E,QAAQ,CAAC+E,SAAT,CAAmB,YAAnB,CAPpB;QAQ/B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,YAAnB;MARuB,CAAhC;MAWA,IAAME,kBAAkB,GAAG;QAC1B,eAAejF,QAAQ,CAAC+E,SAAT,CAAmB,wBAAnB,CADW;QAE1B,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,mBAAnB,CAFgB;QAG1B,UAAU/E,QAAQ,CAAC+E,SAAT,CAAmB,mBAAnB,CAHgB;QAI1B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,iBAAnB,CAJkB;QAK1B,OAAO/E,QAAQ,CAAC+E,SAAT,CAAmB,gBAAnB,CALmB;QAM1B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,iBAAnB,CANkB;QAO1B,SAAS/E,QAAQ,CAAC+E,SAAT,CAAmB,kBAAnB,CAPiB;QAQ1B,QAAQ/E,QAAQ,CAAC+E,SAAT,CAAmB,YAAnB;MARkB,CAA3B;MAWA9E,CAAC,CAAC,kBAAD,CAAD,CAAsBG,MAAtB,CAA6B;QAC5B8E,cAAc,EAAE,IADY;QAE5BP,aAAa,EAAEnF,MAAM,CAAC2F,IAAP,CAAYR,aAAZ,CAFa;QAG5BG,WAAW,EAAEvF,OAAO,CAAC4F,IAAR,CAAaL,WAAb,CAHe;QAI5BE,uBAAuB,EAAEzF,OAAO,CAAC4F,IAAR,CAAaH,uBAAb;MAJG,CAA7B;MAOA/E,CAAC,CAAC,UAAD,CAAD,CAAcG,MAAd,CAAqB;QAEpBgF,YAAY,EAAE,IAFM;QAGpBlB,aAAa,EAAE,CAHK;QAIpBC,WAAW,EAAE,CAJO;QAKpBe,cAAc,EAAE,IALI;QAMpBG,SAAS,EAAE,KANS;QAOpBC,UAAU,EAAE,GAPQ;QAQpBX,aAAa,EAAEnF,MAAM,CAAC2F,IAAP,CAAYR,aAAZ,CARK;QASpBG,WAAW,EAAEvF,OAAO,CAAC4F,IAAR,CAAaL,WAAb,CATO;QAUpBE,uBAAuB,EAAEzF,OAAO,CAAC4F,IAAR,CAAaH,uBAAb,CAVL;QAWpBC,kBAAkB,EAAEA,kBAXA;QAapBM,cAAc,EAAE,CACf;UAAEX,QAAQ,EAAE,aAAZ;UAA2BC,KAAK,EAAE;QAAlC,CADe,EAEf;UAAED,QAAQ,EAAE,aAAZ;UAA2BC,KAAK,EAAE;QAAlC,CAFe,EAGf;UAAED,QAAQ,EAAE,aAAZ;UAA2BC,KAAK,EAAE;QAAlC,CAHe,EAIf;UAAED,QAAQ,EAAE,QAAZ;UAAsBC,KAAK,EAAE;QAA7B,CAJe,EAKf;UAAED,QAAQ,EAAE,QAAZ;UAAsBC,KAAK,EAAE;QAA7B,CALe,EAMf;UAAED,QAAQ,EAAE,QAAZ;UAAsBC,KAAK,EAAE;QAA7B,CANe,EAOf;UAAED,QAAQ,EAAE,QAAZ;UAAsBC,KAAK,EAAE;QAA7B,CAPe,EAQf;UAAED,QAAQ,EAAE,MAAZ;UAAoBC,KAAK,EAAE;QAA3B,CARe,EASf;UAAED,QAAQ,EAAE,KAAZ;UAAmBC,KAAK,EAAE;QAA1B,CATe,EAUf;UAAED,QAAQ,EAAE,MAAZ;UAAoBC,KAAK,EAAE;QAA3B,CAVe,EAWf;UAAED,QAAQ,EAAE,OAAZ;UAAqBC,KAAK,EAAE;QAA5B,CAXe,EAYf;UAAED,QAAQ,EAAE,MAAZ;UAAoBC,KAAK,EAAE;QAA3B,CAZe,CAbI;QA4BpBT,QAAQ,EAAE,UAACC,QAAD,EAAuC;UAChD,IAAME,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAjB;;UACA,IAAID,QAAJ,EAAc;YACb,IAAMiB,IAAI,GAA2BnB,QAAQ,CAACoB,SAA9C;YACA,IAAMC,KAAK,GAAGrB,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAd;YACA,IAAMmB,QAAQ,GAAGtB,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAjB;YACA,IAAMoB,gBAAgB,GAAGJ,IAAI,CAACI,gBAAL,EAAzB;YACA,IAAMC,YAAY,GAAGL,IAAI,CAACM,UAAL,CAAgB,cAAhB,CAArB;YAEA,IAAIC,GAAG,GAAGP,IAAI,CAACM,UAAL,CAAgB,KAAhB,EAAuB,CAAvB,CAAV;YACAC,GAAG,GAAG3G,KAAK,CAAC4G,KAAN,CAAY,IAAIC,IAAJ,CAASF,GAAT,CAAZ,EAA2BF,YAAY,CAACjB,QAAxC,EAAkDiB,YAAY,CAAChB,KAA/D,EAAsEqB,KAAI,CAACpG,KAAL,CAAWqG,MAAX,CAAkBC,cAAxF,EAAwGF,KAAI,CAACpG,KAAL,CAAWuG,GAAnH,EAAwHC,SAAxH,EAAmIJ,KAAI,CAACpG,KAAL,CAAWyG,QAA9I,EAAwJC,OAAxJ,EAAN;;YAEA,IAAId,KAAK,IAAI,IAAT,IAAiBC,QAAQ,IAAI,IAAjC,EAAuC;cACtC,IAAMc,GAAG,GAAGC,IAAI,CAACV,KAAL,CAAW,CAACN,KAAK,GAAGK,GAAT,IAAgBH,gBAA3B,IAA+C,CAA3D;;cAEA,IAAIa,GAAG,IAAIC,IAAI,CAACV,KAAL,CAAWS,GAAX,CAAX,EAA4B;gBAC3BlC,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,IAA/B;cACA,CAFD,MAGK;gBACJH,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,KAA/B;cACA;YACD;UACD;QACD;MAnDmB,CAArB;MAsDAzE,CAAC,CAAC,iBAAD,CAAD,CAAqBG,MAArB,CAA4B;QAC3BgE,QAAQ,EAAE,UAACC,QAAD,EAA6C;UACtD,IAAME,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAjB;;UACA,IAAID,QAAJ,EAAc;YAEb,IAAMD,KAAK,GAAGD,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAd;YACA,IAAInC,OAAO,GAAG,KAAd;;YACA,IAAI,CAAChD,KAAK,CAACoF,QAAN,CAAeH,KAAf,CAAD,IAA0BA,KAAK,GAAG,CAAR,IAAa,CAA3C,EAA8C;cAC7CjC,OAAO,GAAG,IAAV;YACA;;YACDkC,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+BrC,OAA/B;UACA;QACD;MAZ0B,CAA5B;MAgBApC,CAAC,CAAC,WAAD,CAAD,CAAeG,MAAf,CAAsB;QAErBuG,SAAS,EAAE,CAFU;QAGrBC,WAAW,EAAE,KAHQ;QAIrBxB,YAAY,EAAE,KAJO;QAMrBhB,QAAQ,EAAE,UAACC,QAAD,EAAuC;UAChD,IAAME,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAjB;;UACA,IAAID,QAAJ,EAAc;YACb,IAAMiB,IAAI,GAA4BnB,QAAQ,CAACoB,SAA/C;YACA,IAAMC,KAAK,GAAGrB,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAd;YACA,IAAMqC,IAAI,GAAGrB,IAAI,CAACM,UAAL,CAAgB,MAAhB,CAAb;;YAEA,IAAIzG,KAAK,CAACoF,QAAN,CAAeiB,KAAf,KAAyBrG,KAAK,CAACoF,QAAN,CAAeoC,IAAf,CAA7B,EAAmD;cAClD,IAAIvH,KAAK,CAAC0G,KAAN,CAAYN,KAAK,GAAGmB,IAAR,GAAe,CAA3B,EAA8B,CAA9B,KAAoCH,IAAI,CAACV,KAAL,CAAWN,KAAK,GAAGmB,IAAR,GAAe,CAA1B,CAAxC,EAAsE;gBACrEtC,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,KAA/B;cACA,CAFD,MAGK;gBACJH,QAAQ,CAACG,UAAT,CAAoB,SAApB,EAA+B,IAA/B;cACA;YACD;UACD;QACD;MAtBoB,CAAtB;MAyBAzE,CAAC,CAAC,cAAD,CAAD,CAAkBG,MAAlB,CAAyB;QACxB0G,QAAQ,EAAE;MADc,CAAzB;MAKA;;;;;;MAMA7G,CAAC,CAAC,UAAD,CAAD,CAAcG,MAAd,CAAqB;QACpB2G,WAAW,EAAE,IADO;QAEpBC,eAAe,EAAE,IAFG;QAIpBC,SAAS,EAAE,GAJS;QAKpBC,SAAS,EAAE,GALS;QAOpBhE,WAAW,EAAE,KAPO;QASpBiE,iBAAiB,EAAE,MATC;QAUpBC,iBAAiB,EAAE,MAVC;QAWpBC,aAAa,EAAE,OAXK;QAYpBC,aAAa,EAAE,OAZK;QAcpBC,mBAAmB,EAAE;MAdD,CAArB;MAiBAtH,CAAC,CAAC,kBAAD,CAAD,CAAsBG,MAAtB,CAA6B;QAC5BoH,oBAAoB,EAAE;MADM,CAA7B;MAIAvH,CAAC,CAAC,cAAD,CAAD,CAAkBG,MAAlB,CAAyB;QACxBqH,SAAS,EAAE;MADa,CAAzB;MAIAxH,CAAC,CAAC,kBAAD,EAAqB,CAAC,QAAD,EAAW,QAAX,CAArB,CAAD,CAA4CG,MAA5C,CAAmD;QAClD6D,QAAQ,EAAE,UADwC;QAElDD,UAAU,EAAE,KAFsC;QAGlDH,KAAK,EAAE9E,OAAO,CAAC,EAAD,CAHoC;QAIlD+E,MAAM,EAAE/E,OAAO,CAAC,EAAD,CAJmC;QAKlD2I,WAAW,EAAE,CALqC;QAMlDhG,aAAa,EAAE,CANmC;QAOlDJ,cAAc,EAAE,CAPkC;QAQlDF,cAAc,EAAE,CARkC;QASlDC,cAAc,EAAE,CATkC;QAUlDF,cAAc,EAAE,CAVkC;QAWlDD,WAAW,EAAE,CAXqC;QAYlDyG,IAAI,EAAE;MAZ4C,CAAnD;MAeA1H,CAAC,CAAC,YAAD,CAAD,CAAgBG,MAAhB,CAAuB;QACtBwH,OAAO,EAAE,IADa;QAEtBC,YAAY,EAAE,GAFQ;QAGtBb,eAAe,EAAE;MAHK,CAAvB;MAMA/G,CAAC,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,QAAX,CAAb,CAAD,CAAoCG,MAApC,CAA2C;QAC1C6D,QAAQ,EAAE,UADgC;QAE1CyD,WAAW,EAAE,CAF6B;QAG1ChG,aAAa,EAAE,CAH2B;QAI1CsC,UAAU,EAAE;MAJ8B,CAA3C;MAOA/D,CAAC,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,MAAX,CAAb,CAAD,CAAkCG,MAAlC,CAAyC;QACxCiC,OAAO,EAAE,KAD+B;QAExCnB,WAAW,EAAE,CAF2B;QAGxC+C,QAAQ,EAAE,UAH8B;QAIxCyD,WAAW,EAAE,CAJ2B;QAKxChG,aAAa,EAAE,CALyB;QAMxCsC,UAAU,EAAE;MAN4B,CAAzC;MASA/D,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,QAAvC,CAAb,CAAD,CAAgEG,MAAhE,CAAuE;QACtE0H,IAAI,EAAE,UAACC,OAAD,EAAeC,MAAf,EAA0B;UAC/B,IAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;;UACA,IAAIA,MAAJ,EAAY;YACX,IAAMC,CAAC,GAAGD,MAAM,CAACnE,MAAP,EAAV;YACA,IAAMqE,CAAC,GAAGF,MAAM,CAACpE,KAAP,EAAV;YACAkE,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkBF,CAAC,GAAG,CAAtB;YACAH,OAAO,CAACM,MAAR,CAAeF,CAAf,EAAkBD,CAAC,GAAG,CAAtB;UACA;QACD;MATqE,CAAvE;MAYA;QACC,IAAMhI,IAAI,GAAGD,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,QAAvC,CAAb,CAAD,CAAgEuB,MAAhE,CAAuEC,MAAvE,CAA8E,UAA9E,EAA0F,EAA1F,CAAb;QACAtC,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,UAArB,CAAR;MACA;MAEDI,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,MAAvC,CAAb,CAAD,CAA8DG,MAA9D,CAAqE;QACpE0H,IAAI,EAAE,UAACC,OAAD,EAAeC,MAAf,EAA0B;UAC/B,IAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;;UACA,IAAIA,MAAJ,EAAY;YACX,IAAMC,CAAC,GAAGD,MAAM,CAACnE,MAAP,EAAV;YACA,IAAMqE,CAAC,GAAGF,MAAM,CAACpE,KAAP,EAAV;YACAkE,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkB,CAAlB;YACAL,OAAO,CAACM,MAAR,CAAeF,CAAf,EAAkB,CAAlB;YACAJ,OAAO,CAACM,MAAR,CAAeF,CAAf,EAAkBD,CAAlB;YACAH,OAAO,CAACM,MAAR,CAAe,CAAf,EAAkBH,CAAlB;YACAH,OAAO,CAACM,MAAR,CAAe,CAAf,EAAkB,CAAlB;UACA;QACD;MAZmE,CAArE;MAeA;QACC,IAAMnI,IAAI,GAAGD,CAAC,CAAC,UAAD,EAAa,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,MAAvC,CAAb,CAAD,CAA8DuB,MAA9D,CAAqEC,MAArE,CAA4E,UAA5E,EAAwF,EAAxF,CAAb;QACAtC,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,UAArB,CAAR;MACA;MAEDI,CAAC,CAAC,sBAAD,CAAD,CAA0BG,MAA1B,CAAiC;QAChCkI,OAAO,EAAE;MADuB,CAAjC;MAIArI,CAAC,CAAC,qBAAD,CAAD,CAAyBG,MAAzB,CAAgC;QAC/BkI,OAAO,EAAE;MADsB,CAAhC;MAIArI,CAAC,CAAC,qBAAD,CAAD,CAAyBG,MAAzB,CAAgC;QAC/BkI,OAAO,EAAE;MADsB,CAAhC;MAIArI,CAAC,CAAC,aAAD,CAAD,CAAiBG,MAAjB,CAAwB;QACvB6D,QAAQ,EAAE,UADa;QAEvBD,UAAU,EAAE,KAFW;QAGvBH,KAAK,EAAE9E,OAAO,CAAC,EAAD,CAHS;QAIvB+E,MAAM,EAAE/E,OAAO,CAAC,EAAD,CAJQ;QAKvB2I,WAAW,EAAE,CALU;QAMvBhG,aAAa,EAAE,CANQ;QAOvBJ,cAAc,EAAE,CAPO;QAQvBF,cAAc,EAAE,CARO;QASvBC,cAAc,EAAE,CATO;QAUvBF,cAAc,EAAE,CAVO;QAWvBD,WAAW,EAAE,CAXU;QAYvByG,IAAI,EAAE;MAZiB,CAAxB;MAeA1H,CAAC,CAAC,MAAD,CAAD,CAAUG,MAAV,CAAiB;QAChByD,KAAK,EAAE9E,OAAO,CAAC,EAAD,CADE;QAEhB+E,MAAM,EAAE/E,OAAO,CAAC,EAAD;MAFC,CAAjB;MAKAkB,CAAC,CAAC,mBAAD,CAAD,CAAuBG,MAAvB,CAA8B;QAC7BmI,gBAAgB,EAAE,KADW;QAE7BC,gBAAgB,EAAE,KAFW;QAG7BC,iBAAiB,EAAE,MAHU;QAI7BC,iBAAiB,EAAE,MAJU;QAK7BvB,iBAAiB,EAAE,MALU;QAM7BC,iBAAiB,EAAE,MANU;QAO7BC,aAAa,EAAE,OAPc;QAQ7BC,aAAa,EAAE;MARc,CAA9B,EA3rBD,CAssBC;;MACA;QACC,IAAMpH,IAAI,GAAGD,CAAC,CAAC,WAAD,EAAc,CAAC,QAAD,EAAW,WAAX,CAAd,CAAD,CAAwCuB,MAAxC,CAA+CC,MAA/C,CAAsD,cAAtD,EAAsE,EAAtE,CAAb;QACAtC,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,UAAnB,CAAR;QACAV,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,UAArB,CAAR;MACA;MAED;QACC,IAAMK,IAAI,GAAGD,CAAC,CAAC,WAAD,EAAc,CAAC,QAAD,EAAW,WAAX,CAAd,CAAD,CAAwCuB,MAAxC,CAA+CC,MAA/C,CAAsD,cAAtD,EAAsE,EAAtE,CAAb;QACAtC,QAAQ,CAACe,IAAD,EAAO,MAAP,EAAeL,EAAf,EAAmB,UAAnB,CAAR;QACAV,QAAQ,CAACe,IAAD,EAAO,QAAP,EAAiBL,EAAjB,EAAqB,UAArB,CAAR;MACA;MAEDI,CAAC,CAAC,WAAD,EAAc,CAAC,QAAD,EAAW,WAAX,EAAwB,KAAxB,CAAd,CAAD,CAA+CuB,MAA/C,CAAsDC,MAAtD,CAA6D,kBAA7D,EAAiF;QAAEP,WAAW,EAAE;MAAf,CAAjF;MACAjB,CAAC,CAAC,WAAD,EAAc,CAAC,QAAD,EAAW,WAAX,EAAwB,KAAxB,CAAd,CAAD,CAA+CuB,MAA/C,CAAsDC,MAAtD,CAA6D,kBAA7D,EAAiF;QAAEP,WAAW,EAAE;MAAf,CAAjF;IAEA;;EACF;AAAC,CAxtBD,CAAyCpC,KAAzC","names":["Theme","percent","p50","p100","ColorSet","setColor","$time","$type","$math","$object","$array","__extends","_super","setupDefaultRules","call","ic","_root","interfaceColors","language","r","rule","bind","setAll","colors","new","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","saturation","fillOpacity","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","strokeDasharray","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","isNumber","setPrivate","gridIntervals","timeUnit","count","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","copy","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","min","round","Date","_this","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","baseValue","logarithmic","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/xy/XYChartDefaultTheme.ts"],"sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}