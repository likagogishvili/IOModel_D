[{"/Users/macbookpro/Desktop/IOModel_D/client/src/index.js":"1","/Users/macbookpro/Desktop/IOModel_D/client/src/App.js":"2","/Users/macbookpro/Desktop/IOModel_D/client/src/Data/Data.js":"3","/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/BarChart.js":"4","/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/MainPage.js":"5","/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/SxvaobaChart.js":"6","/Users/macbookpro/Desktop/IOModel_D/client/src/ContentHeader/ContentHeader.js":"7","/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/InputRender.js":"8","/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/PieChart.js":"9","/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/RightSide.js":"10","/Users/macbookpro/Desktop/IOModel_D/client/src/ChartSwiper/ChartSwiper.js":"11","/Users/macbookpro/Desktop/IOModel_D/client/src/BottomCharts/BottomCharts.js":"12","/Users/macbookpro/Desktop/IOModel_D/client/src/HoverOnI/HoverOni.js":"13"},{"size":230,"mtime":1656586482742,"results":"14","hashOfConfig":"15"},{"size":268,"mtime":1656586475661,"results":"16","hashOfConfig":"15"},{"size":11760,"mtime":1656586439720,"results":"17","hashOfConfig":"15"},{"size":6690,"mtime":1656678179357,"results":"18","hashOfConfig":"15"},{"size":8663,"mtime":1656934934607,"results":"19","hashOfConfig":"15"},{"size":4690,"mtime":1656664496676,"results":"20","hashOfConfig":"15"},{"size":2451,"mtime":1656594885669,"results":"21","hashOfConfig":"15"},{"size":37509,"mtime":1656942831701,"results":"22","hashOfConfig":"15"},{"size":4344,"mtime":1656942821656,"results":"23","hashOfConfig":"15"},{"size":7263,"mtime":1656939286949,"results":"24","hashOfConfig":"15"},{"size":4293,"mtime":1656944332299,"results":"25","hashOfConfig":"15"},{"size":9119,"mtime":1656939294183,"results":"26","hashOfConfig":"15"},{"size":6727,"mtime":1656586453179,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"3yh2tp",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/macbookpro/Desktop/IOModel_D/client/src/index.js",[],["56","57"],"/Users/macbookpro/Desktop/IOModel_D/client/src/App.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/Data/Data.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/BarChart.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/MainPage.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/SxvaobaChart.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/ContentHeader/ContentHeader.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/InputRender.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/ChartsFolder/PieChart.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/MainPage/RightSide.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/ChartSwiper/ChartSwiper.js",[],"/Users/macbookpro/Desktop/IOModel_D/client/src/BottomCharts/BottomCharts.js",["58"],"import { useState } from \"react\";\nimport BarChart from \"../ChartsFolder/BarChart\";\nimport Sxvaoba from \"../ChartsFolder/SxvaobaChart\";\nimport \"./BottomCharts.css\";\nimport * as XLSX from \"xlsx\";\n\n\nfunction BottomCharts(props) {\n  const [gamoshvebaRender, SetGamoshvebaRender] = useState(true);\n  const [damatebitiRender, SetDamatebitiRender] = useState(true);\n  const [dasaqmebaRender, SetDasaqmebaRender] = useState(true);\n  const [importiRender, SetImportiRender] = useState(true);\n  const [kapitaliRender, SetKapitaliRender] = useState(true);\n  const [shromaRender, SetShromaRender] = useState(true);\n\n// let firstDownload = [\n//     ['mimdinare', 'axali'],\n//     [props.damatebitiBCfirstValue[0], props.damatebitiBCsecondValue[0]],\n//     [props.damatebitiBCfirstValue[1], props.damatebitiBCsecondValue[1]],\n//     [props.damatebitiBCfirstValue[2], props.damatebitiBCsecondValue[2]],\n//     [props.damatebitiBCfirstValue[2], props.damatebitiBCsecondValue[2]],\n//     [props.damatebitiBCfirstValue[2], props.damatebitiBCsecondValue[2]],    \n// ];\n\nfunction createArray(arr1,arr2){\n  let newArr = [['mimdinare', 'axali']]\n  for (let i = 0; i < arr1.length; i++) {\n    newArr.push([[arr1[i]], [arr2[i]]])    \n  }\n  return newArr\n}\n\nlet firstExcelValues = createArray(props.damatebitiBCfirstValue, props.damatebitiBCsecondValue)\n\n\n  function exportData(arr) {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.aoa_to_sheet(arr);\n\n    XLSX.utils.book_append_sheet(wb, ws, \"mySheet1\");\n\n    XLSX.writeFile(wb, \"excample.xlsx\");\n  }\n\n  return (\n    <div>\n      <div className=\"chartBottomLight\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange\n              ? \"მთლიანი შიდა პროდუქტი, მლნ ლარი\"\n              : \"Value added, mil Gel\"}\n          </p>\n          <button onClick={() => SetDamatebitiRender(!damatebitiRender)}>\n            {damatebitiRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {damatebitiRender && (\n          <div className=\"chartGraphs\">\n            <div className=\"BarChartAll\">\n              <BarChart\n                firstValue={props.damatebitiBCfirstValue}\n                secondValue={props.damatebitiBCsecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n            <div className=\"BarChartSxvaoba\">\n              <Sxvaoba\n                firstValue={props.damatebitiSxvaobafirstValue}\n                secondValue={props.damatebitiSxvaobasecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n          </div>\n        )}\n        <button className=\"downloadBTN\" onClick={exportData}>\n          გადმოწერა\n        </button>\n      </div>\n      <div className=\"chartBottomDark\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange ? \"გამოშვება, მლნ ლარი\" : \"Output, mil Gel\"}\n          </p>\n          <button onClick={() => SetGamoshvebaRender(!gamoshvebaRender)}>\n            {gamoshvebaRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {gamoshvebaRender && (\n          <div>\n            <div className=\"chartGraphs\">\n              <div className=\"BarChartAll\">\n                <BarChart\n                  firstValue={props.gamoshvebaBCfirstValue}\n                  secondValue={props.gamoshvebaBCsecondValue}\n                  languageChange={props.languageChange}\n                />\n              </div>\n              <div className=\"BarChartSxvaoba\">\n                <Sxvaoba\n                  firstValue={props.gamoshvebaSxvaobafirstValue}\n                  secondValue={props.gamoshvebaSxvaobasecondValue}\n                  languageChange={props.languageChange}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <button className=\"downloadBTN\" onClick={exportData}>\n          გადმოწერა\n        </button>\n      </div>\n\n      <div className=\"chartBottomDark\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange\n              ? \"დასაქმება, ათასი კაცი\"\n              : \"Employment, person\"}\n          </p>\n          <button onClick={() => SetDasaqmebaRender(!dasaqmebaRender)}>\n            {dasaqmebaRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {dasaqmebaRender && (\n          <div className=\"chartGraphs\">\n            <div className=\"BarChartAll\">\n              <BarChart\n                firstValue={props.dasaqmebaBCfirstValue}\n                secondValue={props.dasaqmebaBCsecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n            <div className=\"BarChartSxvaoba\">\n              <Sxvaoba\n                firstValue={props.dasaqmebaSxvaobafirstValue}\n                secondValue={props.dasaqmebaSxvaobasecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"chartBottomLight\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange ? \"იმპორტი, მლნ ლარი\" : \"Import, mil Gel\"}\n          </p>\n          <button onClick={() => SetImportiRender(!importiRender)}>\n            {importiRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {importiRender && (\n          <div className=\"chartGraphs\">\n            <div className=\"BarChartAll\">\n              <BarChart\n                firstValue={props.importiBCfirstValue}\n                secondValue={props.importiBCsecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n            <div className=\"BarChartSxvaoba\">\n              <Sxvaoba\n                firstValue={props.importiSxvaobafirstValue}\n                secondValue={props.importiSxvaobasecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"chartBottomDark\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange\n              ? \"ძირითადი კაპიტალის მთლიანი ფორმირება, მლნ ლარი\"\n              : \"Gross capital formation, mil Gel\"}\n          </p>\n          <button onClick={() => SetKapitaliRender(!kapitaliRender)}>\n            {kapitaliRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {kapitaliRender && (\n          <div className=\"chartGraphs\">\n            <div className=\"BarChartAll\">\n              <BarChart\n                firstValue={props.kapitaliBCfirstValue}\n                secondValue={props.kapitaliBCsecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n            <div className=\"BarChartSxvaoba\">\n              <Sxvaoba\n                firstValue={props.kapitaliSxvaobafirstValue}\n                secondValue={props.kapitaliSxvaobasecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"chartBottomLight\">\n        <div className=\"renderingWithArrow\">\n          <p>\n            {!props.languageChange\n              ? \"შრომის ანაზღაურება, მლნ ლარი\"\n              : \"Compensation of employees, mil Gel\"}\n          </p>\n          <button onClick={() => SetShromaRender(!shromaRender)}>\n            {shromaRender ? (\n              <i className=\"arrow down\"></i>\n            ) : (\n              <i className=\"arrow right\"></i>\n            )}\n          </button>\n        </div>\n        {shromaRender && (\n          <div className=\"chartGraphs\">\n            <div className=\"BarChartAll\">\n              <BarChart\n                firstValue={props.shromaBCfirstValue}\n                secondValue={props.shromaBCsecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n            <div className=\"BarChartSxvaoba\">\n              <Sxvaoba\n                firstValue={props.shromaSxvaobafirstValue}\n                secondValue={props.shromaSxvaobasecondValue}\n                languageChange={props.languageChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default BottomCharts;\n","/Users/macbookpro/Desktop/IOModel_D/client/src/HoverOnI/HoverOni.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":33,"column":5,"nodeType":"65","messageId":"66","endLine":33,"endColumn":21},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'firstExcelValues' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]